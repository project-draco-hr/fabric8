{
  CuratorFramework curator=this.curator;
  if (curator == null) {
    resp.sendError(HttpServletResponse.SC_NOT_FOUND,"Not attached to Fabric");
    return;
  }
  try {
    String groupName=req.getPathInfo();
    if (groupName == null) {
      groupName="";
    }
    if (groupName.startsWith("/")) {
      groupName=groupName.substring(1);
    }
    LOG.debug("discovery request for group name={}",groupName);
    CacheEntry cacheEntry=cache.get(groupName);
    long now=System.currentTimeMillis();
    if (cacheEntry == null || cacheEntry.timestamp + cacheTimeout < now) {
      try {
        Map<String,ActiveMQNode> members=ZooKeeperGroup.members(curator,"/fabric/registry/clusters/amq/" + groupName,ActiveMQNode.class);
        HashSet<String> masters=new HashSet<String>();
        StringBuilder buff=new StringBuilder();
        for (        ActiveMQNode node : members.values()) {
          if (!masters.contains(node.getId())) {
            for (int i=0; i < node.services.length; i++) {
              String url=node.services[i];
              url=ZooKeeperUtils.getSubstitutedData(curator,url);
              buff.append(url);
              buff.append('\n');
            }
            masters.add(node.getId());
          }
        }
        cacheEntry=new CacheEntry(buff.toString(),now);
      }
 catch (      Exception e) {
        cacheEntry=new CacheEntry(null,now);
      }
      cache.put(groupName,cacheEntry);
    }
    if (cacheEntry.result != null) {
      resp.getWriter().print(cacheEntry.result.toString());
    }
 else {
      resp.sendError(HttpServletResponse.SC_NOT_FOUND,"Group not found");
    }
  }
 catch (  Exception e) {
    resp.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR,"Error occurred: " + e);
  }
}
