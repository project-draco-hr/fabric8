{
synchronized (lock) {
    try {
      Git git=getGit();
      Repository repository=git.getRepository();
      CredentialsProvider credentialsProvider=getcredentialsProvider();
      if (personIdent == null) {
        personIdent=new PersonIdent(repository);
      }
      if (GitHelpers.hasGitHead(git)) {
        git.stashCreate().setPerson(personIdent).setWorkingDirectoryMessage("Stash before a write").setRef("HEAD").call();
      }
      doPull(git,credentialsProvider);
      RevCommit statusBefore=CommitUtils.getHead(repository);
      GitContext context=new GitContext();
      T answer=operation.call(git,context);
      boolean requirePush=context.isRequirePush();
      if (context.isRequireCommit()) {
        requirePush=true;
        String message=context.getCommitMessage().toString();
        if (message.length() == 0) {
          LOG.warn("No commit message from " + operation + ". Please add one! :)");
        }
        git.commit().setMessage(message).call();
      }
      if (requirePush || hasChanged(statusBefore,CommitUtils.getHead(repository))) {
        doPush(git,credentialsProvider);
        fireChangeNotifications();
      }
      return answer;
    }
 catch (    Exception e) {
      throw new FabricException(e);
    }
  }
}
