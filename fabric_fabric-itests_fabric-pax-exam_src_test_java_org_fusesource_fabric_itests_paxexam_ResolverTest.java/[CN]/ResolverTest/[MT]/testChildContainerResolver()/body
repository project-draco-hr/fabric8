{
  System.err.println(executeCommand("fabric:create -n"));
  FabricService fabricService=getFabricService();
  IZKClient zookeeper=getZookeeper();
  Set<Container> containers=ContainerBuilder.create(1,1).withName("child").withProfiles("default").assertProvisioningResult().build();
  Container child=containers.iterator().next();
  Assert.assertEquals("localhostname",ZooKeeperUtils.getSubstitutedPath(zookeeper,ZkPath.CONTAINER_RESOLVER.getPath(child.getId())));
  String sshUrlWithLocalhostResolver=child.getSshUrl();
  executeCommand("fabric:container-resolver-set --container " + child.getId() + " localip");
  Assert.assertEquals("localip",ZooKeeperUtils.getSubstitutedPath(zookeeper,ZkPath.CONTAINER_RESOLVER.getPath(child.getId())));
  String sshUrlWithLocalIpResolver=child.getSshUrl();
  System.out.println("SSH URL with " + sshUrlWithLocalhostResolver + " resolver: localhostname");
  System.out.println("SSH URL with " + sshUrlWithLocalIpResolver + " resolver: localip");
  Assert.assertNotSame(sshUrlWithLocalhostResolver,sshUrlWithLocalIpResolver);
  ZooKeeperUtils.set(zookeeper,ZkPath.CONTAINER_PUBLIC_IP.getPath(child.getId()),"my.public.ip.address");
  executeCommand("fabric:container-resolver-set --container " + child.getId() + " publicip");
  Assert.assertEquals("publicip",ZooKeeperUtils.getSubstitutedPath(zookeeper,ZkPath.CONTAINER_RESOLVER.getPath(child.getId())));
  String sshUrlWithPublicIpResolver=child.getSshUrl();
  System.out.println("SSH URL with " + sshUrlWithPublicIpResolver + " resolver: publicip");
  Assert.assertNotNull(sshUrlWithPublicIpResolver);
  Assert.assertTrue(sshUrlWithPublicIpResolver.startsWith("my.public.ip.address"));
  ZooKeeperUtils.set(zookeeper,ZkPath.CONTAINER_MANUAL_IP.getPath(child.getId()),"my.manual.ip.address");
  executeCommand("fabric:container-resolver-set --container " + child.getId() + " manualip");
  Assert.assertEquals("manualip",ZooKeeperUtils.getSubstitutedPath(zookeeper,ZkPath.CONTAINER_RESOLVER.getPath(child.getId())));
  String sshUrlWithManualIpResolver=child.getSshUrl();
  System.out.println("SSH URL with " + sshUrlWithManualIpResolver + " resolver: manualip");
  Assert.assertNotNull(sshUrlWithManualIpResolver);
  Assert.assertTrue(sshUrlWithManualIpResolver.startsWith("my.manual.ip.address"));
}
