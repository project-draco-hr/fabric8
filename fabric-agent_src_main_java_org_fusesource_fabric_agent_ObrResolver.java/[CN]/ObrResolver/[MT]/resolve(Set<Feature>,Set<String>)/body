{
  List<Requirement> reqs=new ArrayList<Requirement>();
  List<Resource> ress=new ArrayList<Resource>();
  List<Resource> deploy=new ArrayList<Resource>();
  Map<Object,BundleInfo> infos=new HashMap<Object,BundleInfo>();
  for (  Feature feature : features) {
    for (    BundleInfo bundleInfo : feature.getBundles()) {
      try {
        URL url=new URL(bundleInfo.getLocation());
        Resource res=repositoryAdmin.getHelper().createResource(url);
        ress.add(res);
        infos.put(res,bundleInfo);
      }
 catch (      MalformedURLException e) {
        Requirement req=parseRequirement(bundleInfo.getLocation());
        reqs.add(req);
        infos.put(req,bundleInfo);
      }
    }
    for (    final String bundle : bundles) {
      URL url=new URL(bundle);
      Resource res=repositoryAdmin.getHelper().createResource(url);
      ress.add(res);
      infos.put(res,new SimpleBundleInfo(bundle));
    }
  }
  Repository repository=repositoryAdmin.getHelper().repository(ress.toArray(new Resource[ress.size()]));
  List<Repository> repos=new ArrayList<Repository>();
  repos.add(repositoryAdmin.getSystemRepository());
  repos.add(repository);
  repos.addAll(Arrays.asList(repositoryAdmin.listRepositories()));
  org.apache.felix.bundlerepository.Resolver resolver=repositoryAdmin.resolver(repos.toArray(new Repository[repos.size()]));
  for (  Resource res : ress) {
    if (!infos.get(res).isDependency()) {
      resolver.add(res);
    }
  }
  for (  Requirement req : reqs) {
    resolver.add(req);
  }
  if (!resolver.resolve(org.apache.felix.bundlerepository.Resolver.NO_OPTIONAL_RESOURCES)) {
    StringWriter w=new StringWriter();
    PrintWriter out=new PrintWriter(w);
    Reason[] failedReqs=resolver.getUnsatisfiedRequirements();
    if ((failedReqs != null) && (failedReqs.length > 0)) {
      out.println("Unsatisfied requirement(s):");
      printUnderline(out,27);
      for (      Reason r : failedReqs) {
        out.println("   " + r.getRequirement().getName() + ":"+ r.getRequirement().getFilter());
        out.println("      " + r.getResource().getPresentationName());
      }
    }
 else {
      out.println("Could not resolve targets.");
    }
    out.flush();
    throw new Exception("Can not resolve feature:\n" + w.toString());
  }
  Collections.addAll(deploy,resolver.getAddedResources());
  Collections.addAll(deploy,resolver.getRequiredResources());
  return deploy;
}
