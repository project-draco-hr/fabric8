{
synchronized (lifecycleMonitor) {
    Set<String> outboundDestinationNames=getOutboundDestinationNames();
    final List<BridgedDestination> currentDestinations=new ArrayList<BridgedDestination>();
    for (    BridgedDestination destination : destinations) {
      if (outboundDestinationNames.contains(destination.getName())) {
        currentDestinations.add(destination);
      }
 else {
        LOG.warn("Ignoring destination " + destination + " as it does not exist as an outbound destination");
      }
    }
    if (!isInitialized()) {
      outboundDestinations.getDestinations().removeAll(currentDestinations);
    }
 else {
      for (      BridgedDestination destination : currentDestinations) {
        try {
          AbstractMessageListenerContainer listener=listenerMap.remove(destination);
          listener.destroy();
        }
 catch (        Exception e) {
          final String msg="Error destroying listener for destination: " + destination;
          LOG.warn(msg,e);
        }
      }
      outboundDestinations.getDestinations().removeAll(currentDestinations);
    }
  }
}
