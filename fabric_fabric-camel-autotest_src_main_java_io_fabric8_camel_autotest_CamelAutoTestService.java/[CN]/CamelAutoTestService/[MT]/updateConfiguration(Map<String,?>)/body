{
  FabricService fabricService=this.fabricService.getOptional();
  MBeanServer mbeanServerValue=mbeanServer;
  if (mbeanServerValue != null && fabricService != null) {
    Profile overlayProfile=fabricService.getCurrentContainer().getOverlayProfile();
    List<String> configurationFileNames=overlayProfile.getConfigurationFileNames();
    for (    CamelContext camelContext : camelContexts.values()) {
      String camelContextID=camelContext.getName();
      if (camelContext instanceof ModelCamelContext) {
        ModelCamelContext modelCamelContext=(ModelCamelContext)camelContext;
        List<RouteDefinition> routeDefinitions=modelCamelContext.getRouteDefinitions();
        if (camelContextsConfigured.add(camelContextID)) {
          NodeIdFactory nodeIdFactory=camelContext.getNodeIdFactory();
          if (mockInputs || mockOutputs) {
            for (            RouteDefinition routeDefinition : routeDefinitions) {
              String routeId=routeDefinition.idOrCreate(nodeIdFactory);
              modelCamelContext.stopRoute(routeId);
              final String routeKey=camelContextID + "." + routeId;
              LOG.info("mocking camel route: " + routeKey);
              routeDefinition.adviceWith(modelCamelContext,new AdviceWithRouteBuilder(){
                @Override public void configure() throws Exception {
                  if (mockOutputs) {
                    mockEndpoints();
                  }
                }
              }
);
              modelCamelContext.removeRouteDefinition(routeDefinition);
              modelCamelContext.addRouteDefinition(routeDefinition);
              modelCamelContext.startRoute(routeId);
            }
          }
          String path=messageFolder;
          if (Strings.isNotBlank(path)) {
            path+="/";
          }
          path+=camelContextID;
          ProducerTemplate producerTemplate=camelContext.createProducerTemplate();
          try {
            for (            RouteDefinition routeDefinition : routeDefinitions) {
              String routeId=routeDefinition.idOrCreate(nodeIdFactory);
              String routePath=path + "/" + routeId+ "/";
              List<FromDefinition> inputs=routeDefinition.getInputs();
              for (              FromDefinition input : inputs) {
                Endpoint endpoint=input.getEndpoint();
                if (endpoint == null) {
                  String uri=input.getUri();
                  if (Strings.isNullOrBlank(uri)) {
                    String ref=input.getRef();
                    if (Strings.isNotBlank(ref)) {
                      uri="ref:" + ref;
                    }
                  }
                  if (Strings.isNotBlank(uri)) {
                    endpoint=camelContext.getEndpoint(uri);
                  }
                }
                if (endpoint == null) {
                  LOG.warn("Cannot find endpoint, uri or ref of input " + input + " on route "+ routeId+ " camelContext: "+ camelContextID);
                }
 else {
                  for (                  String configFile : configurationFileNames) {
                    if (configFile.startsWith(routePath)) {
                      LOG.info("Sending file: " + configFile + " to "+ endpoint);
                      byte[] data=overlayProfile.getFileConfiguration(configFile);
                      if (data != null) {
                        producerTemplate.sendBody(endpoint,data);
                      }
                    }
                  }
                }
              }
            }
          }
  finally {
            producerTemplate.stop();
          }
        }
      }
    }
  }
}
