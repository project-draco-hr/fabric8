{
  List<RemoteRepository> repositories=new LinkedList<RemoteRepository>();
  for (  Repository repository : getRepositories()) {
    RemoteRepository remote=new RemoteRepository();
    remote.setId(repository.getId());
    remote.setUrl(repository.getUrl());
    remote.setContentType("default");
    if (repository.getSnapshots().isEnabled()) {
      RepositoryPolicy repositoryPolicy=new RepositoryPolicy();
      if (repository.getSnapshots() != null) {
        remote.setPolicy(true,convertMavenRepositoryPolicy(repository.getSnapshots()));
      }
    }
    if (repository.getReleases() != null) {
      remote.setPolicy(false,convertMavenRepositoryPolicy(repository.getReleases()));
    }
    Server server=getSettings().getServer(repository.getId());
    if (server != null) {
      Authentication authentication=new Authentication(server.getUsername(),server.getPassword(),server.getPrivateKey(),server.getPassphrase());
      remote.setAuthentication(authentication);
    }
    repositories.add(remote);
  }
  return repositories;
}
