{
  System.out.println(executeCommand("fabric:create -n"));
  System.err.println(executeCommand("fabric:profile-list"));
  ServiceProxy<FabricService> fabricProxy=ServiceProxy.createServiceProxy(bundleContext,FabricService.class);
  try {
    FabricService fabricService=fabricProxy.getService();
    waitForFabricCommands();
    System.out.println(executeCommand("fabric:version-create --parent 1.0 1.1"));
    Set<Container> containers=ContainerBuilder.create(fabricProxy).withName("camel").withProfiles("feature-camel").assertProvisioningResult().build();
    try {
      CountDownLatch latch=WaitForConfigurationChange.on(fabricService);
      System.out.println(executeCommand("fabric:profile-edit --features camel-script --features camel-hazelcast feature-camel 1.1"));
      Assert.assertTrue(latch.await(5,TimeUnit.SECONDS));
      System.out.println(executeCommand("fabric:container-upgrade --all 1.1"));
      Provision.provisioningSuccess(containers,PROVISION_TIMEOUT);
      System.out.println(executeCommand("fabric:container-list"));
      for (      Container container : containers) {
        Assert.assertEquals("Container should have version 1.1","1.1",container.getVersion().getId());
        String bundles=executeCommand("container-connect -u admin -p admin " + container.getId() + " osgi:list -s | grep camel-hazelcast");
        Assert.assertNotNull(bundles);
        System.out.println(bundles);
        Assert.assertFalse("Expected camel-hazelcast installed on container:" + container.getId() + ".",bundles.isEmpty());
      }
      System.out.println(executeCommand("fabric:container-rollback --all 1.0"));
      Provision.provisioningSuccess(containers,PROVISION_TIMEOUT);
      System.out.println(executeCommand("fabric:container-list"));
      for (      Container container : containers) {
        Assert.assertEquals("Container should have version 1.0","1.0",container.getVersion().getId());
        String bundles=executeCommand("container-connect -u admin -p admin " + container.getId() + " osgi:list -s | grep camel-hazelcast");
        Assert.assertNotNull(bundles);
        System.out.println(bundles);
        Assert.assertTrue("Expected no camel-hazelcast installed on container:" + container.getId() + ".",bundles.isEmpty());
      }
    }
  finally {
      ContainerBuilder.destroy(containers);
    }
  }
  finally {
    fabricProxy.close();
  }
}
