{
  Matcher artifactMatcher=ARTIFACT_REQUEST_URL_REGEX.matcher(path);
  Matcher metdataMatcher=ARTIFACT_METADATA_URL_REGEX.matcher(path);
  if (path == null) {
    throw new InvalidMavenArtifactRequest();
  }
 else   if (metdataMatcher.matches()) {
    LOGGER.log(Level.INFO,String.format("Received request for maven metadata : %s",path));
    Metadata metadata=null;
    try {
      metadata=convertPathToMetadata(path);
      List<MetadataRequest> requests=new ArrayList<MetadataRequest>();
      String id=metdataMatcher.group(7);
      if (repositories.containsKey(id)) {
        MetadataRequest request=new MetadataRequest(metadata,repositories.get(id),null);
        request.setFavorLocalRepository(false);
        requests.add(request);
      }
 else {
        for (        RemoteRepository repository : repositories.values()) {
          MetadataRequest request=new MetadataRequest(metadata,repository,null);
          request.setFavorLocalRepository(false);
          requests.add(request);
        }
      }
      List<MetadataResult> results=system.resolveMetadata(session,requests);
      for (      MetadataResult result : results) {
        if (result.getMetadata() != null && result.getMetadata().getFile() != null) {
          return result.getMetadata().getFile();
        }
      }
    }
 catch (    Exception e) {
      LOGGER.log(Level.WARNING,String.format("Could not find metadata : %s due to %s",metadata,e));
      return null;
    }
    return null;
  }
 else   if (artifactMatcher.matches()) {
    LOGGER.log(Level.INFO,String.format("Received request for maven artifact : %s",path));
    Artifact artifact=convertPathToArtifact(path);
    String id=artifact.getGroupId() + ":" + artifact.getArtifactId();
    try {
      ArtifactRequest request=new ArtifactRequest(artifact,new ArrayList<RemoteRepository>(repositories.values()),null);
      ArtifactResult result=system.resolveArtifact(session,request);
      return result.getArtifact().getFile();
    }
 catch (    Exception e) {
      LOGGER.log(Level.WARNING,String.format("Could not find artifact : %s due to %s",artifact,e));
      return null;
    }
  }
  return null;
}
