{
  FabricValidations.validateContainerNames(containerIds);
  Version version=profileService.getRequiredVersion(this.version);
  if (containerIds == null || containerIds.isEmpty()) {
    if (all) {
      containerIds=new ArrayList<String>();
      for (      Container container : fabricService.getContainers()) {
        containerIds.add(container.getId());
      }
    }
 else {
      containerIds=Arrays.asList(fabricService.getCurrentContainer().getId());
    }
  }
 else {
    if (all) {
      throw new IllegalArgumentException("Can not use --all with a list of containers simultaneously");
    }
  }
  List<Container> toUpgrade=new ArrayList<Container>();
  List<Container> same=new ArrayList<Container>();
  for (  String containerName : containerIds) {
    Container container=FabricCommand.getContainer(fabricService,containerName);
    int num=ContainerUpgradeSupport.canUpgrade(version,container);
    if (num < 0) {
      throw new IllegalArgumentException("Container " + container.getId() + " already has a higher version "+ container.getVersion()+ " than the requested version "+ version+ ".");
    }
 else     if (num == 0) {
      same.add(container);
    }
 else {
      toUpgrade.add(container);
    }
  }
  for (  Container container : same) {
    System.out.println("Container " + container.getId() + " is already at version "+ version);
  }
  for (  Container container : toUpgrade) {
    Version oldVersion=container.getVersion();
    container.setVersion(version);
    log.info("Upgraded container {} from {} to {}",new Object[]{container,oldVersion,version});
    System.out.println("Upgraded container " + container.getId() + " from version "+ oldVersion+ " to "+ version);
  }
  if (all) {
    fabricService.setDefaultVersionId(version.getId());
    System.out.println("Changed default version to " + version);
  }
  return null;
}
