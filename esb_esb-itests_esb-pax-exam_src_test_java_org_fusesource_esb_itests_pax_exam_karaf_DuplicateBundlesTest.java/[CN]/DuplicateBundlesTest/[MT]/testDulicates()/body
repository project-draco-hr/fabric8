{
  FeaturesService featuresService=getOsgiService(FeaturesService.class);
  Feature[] features=featuresService.listFeatures();
  List<BundleInfo> bundles=new ArrayList<BundleInfo>();
  Assert.assertNotNull(features);
  for (  Feature feature : features) {
    System.out.println("Collection bundles from feature:" + feature.getName());
    populateBundles(feature,bundles);
  }
  for (  BundleInfo bundle : bundles) {
    try {
      bundleContext.installBundle(bundle.getLocation(),null);
    }
 catch (    Exception ex) {
    }
  }
  Map<String,Version> bundleMap=new HashMap<String,Version>();
  Bundle[] installedBundles=bundleContext.getBundles();
  Boolean duplicateExists=false;
  for (  Bundle bundle : installedBundles) {
    if (bundleMap.containsKey(bundle.getSymbolicName()) && !bundleMap.get(bundle.getSymbolicName()).equals(bundle.getVersion())) {
      duplicateExists=true;
      System.out.println("Duplicate bundle:" + bundle.getSymbolicName());
      System.out.println(executeCommand("osgi:list -t 0 -s | grep " + "\" " + bundle.getSymbolicName() + " \""));
    }
 else {
      bundleMap.put(bundle.getSymbolicName(),bundle.getVersion());
    }
  }
}
