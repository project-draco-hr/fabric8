{
  Map<String,Object> parameters=workItem.getParameters();
  String startNodeName=(String)parameters.get("startSignalName");
  if (isEmpty(startNodeName)) {
    System.out.println("No startSignalName parameter!");
    Set<Map.Entry<String,Object>> entries=parameters.entrySet();
    for (    Map.Entry<String,Object> entry : entries) {
      System.out.println(" Parameter " + entry.getKey() + " = "+ entry.getValue());
    }
    long processInstanceId=workItem.getProcessInstanceId();
    ProcessInstance processInstance=ksession.getProcessInstance(processInstanceId);
    if (processInstance instanceof WorkflowProcessInstance) {
      WorkflowProcessInstance instance=(WorkflowProcessInstance)processInstance;
      Object value=instance.getVariable("startSignalName");
      if (value != null) {
        System.out.println("==== ooh found variable on process");
        startNodeName=value.toString();
      }
    }
  }
  if (isEmpty(startNodeName)) {
    return;
  }
  logInfo("Looking for processes with a startSignalName " + startNodeName);
  Map<String,Object> inputParameters=new HashMap<String,Object>();
  Collection<Process> processes=ksession.getKieBase().getProcesses();
  int startCount=0;
  Map<String,Object> results=new HashMap<String,Object>();
  for (  Process process : processes) {
    if (process instanceof WorkflowProcess) {
      WorkflowProcess workflowProcess=(WorkflowProcess)process;
      Node[] nodes=workflowProcess.getNodes();
      if (nodes != null) {
        for (        Node node : nodes) {
          String name=node.getName();
          if (Objects.equals(startNodeName,name)) {
            String processId=process.getId();
            logInfo("Starting process " + processId + " with parameters: "+ inputParameters);
            startCount++;
            try {
              results.put("startedProcess",processId);
              ksession.startProcess(processId,inputParameters);
            }
 catch (            Exception e) {
              logError("Could not start process " + processId + " with parameters "+ inputParameters+ ". Reason: "+ e,e);
            }
          }
        }
      }
    }
  }
  if (startCount == 0) {
    logInfo("No business process starts with signal of name: " + startNodeName);
  }
  manager.completeWorkItem(workItem.getId(),results);
}
