{
  assertNotNull("Should have some FabricRequirements",requirements);
  waitForValidValue(timeout,new Callable<Boolean>(){
    @Override public Boolean call() throws Exception {
      boolean valid=true;
      List<ProfileRequirements> profileRequirements=requirements.getProfileRequirements();
      assertNotNull("Should have some profileRequirements",profileRequirements);
      String version=requirementOrDefaultVersion(controller,requirements);
      for (      ProfileRequirements profileRequirement : profileRequirements) {
        Integer minimumInstances=profileRequirement.getMinimumInstances();
        Integer maximumInstances=profileRequirement.getMaximumInstances();
        if (minimumInstances != null) {
          String profile=profileRequirement.getProfile();
          List<String> containerIds=controller.containerIdsForProfile(version,profile);
          int current=containerIds.size();
          if (current < minimumInstances) {
            System.out.println("Still waiting for " + minimumInstances + " instance(s) of profile "+ profile+ " currently has: "+ containerIds);
            valid=false;
            break;
          }
 else {
            if (checkMinimumInstancesSuccessful(controller,profile,minimumInstances,containerIds)) {
              System.out.println("Valid profile " + profile + " requires "+ minimumInstances+ " instance(s) and has: "+ containerIds);
            }
 else {
              valid=false;
            }
          }
        }
        if (maximumInstances != null) {
          String profile=profileRequirement.getProfile();
          List<ContainerDTO> containers=controller.containersForProfile(version,profile);
          List<ContainerDTO> aliveContainers=Containers.aliveAndSuccessfulContainers(containers);
          int current=aliveContainers.size();
          if (current > maximumInstances) {
            System.out.println("Still waiting for a maximum of " + maximumInstances + " instance(s) of profile "+ profile+ " currently has: "+ current+ " containers alive which need stopping");
            valid=false;
            break;
          }
        }
      }
      if (valid) {
        System.out.println("Fabric requirements are all satisfied!");
      }
      return valid;
    }
  }
);
}
