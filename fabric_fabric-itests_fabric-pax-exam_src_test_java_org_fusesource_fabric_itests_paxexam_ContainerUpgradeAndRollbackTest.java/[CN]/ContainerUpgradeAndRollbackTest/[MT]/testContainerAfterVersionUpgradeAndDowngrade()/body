{
  System.out.println(executeCommand("fabric:create -n"));
  System.out.println(executeCommand("fabric:version-create --parent 1.0 1.1"));
  Set<Container> containers=ContainerBuilder.create().withName("camel").withProfiles("camel").assertProvisioningResult().build();
  CountDownLatch latch=WaitForConfigurationChange.on(getFabricService());
  System.out.println(executeCommand("fabric:profile-edit --features camel-hazelcast camel 1.1"));
  latch.await();
  System.out.println(executeCommand("fabric:container-upgrade --all 1.1"));
  Provision.assertSuccess(containers,PROVISION_TIMEOUT);
  System.out.println(executeCommand("fabric:container-list"));
  for (  Container container : containers) {
    String bundles=executeCommand("container-connect -u admin -p admin " + container.getId() + " osgi:list -s | grep camel-hazelcast");
    System.out.println(executeCommand("fabric:container-list"));
    assertNotNull(bundles);
    System.out.println(bundles);
    assertFalse("Expected camel-hazelcast installed.",bundles.isEmpty());
  }
  System.out.println(executeCommand("fabric:container-rollback --all 1.0"));
  Provision.assertSuccess(containers,PROVISION_TIMEOUT);
  System.out.println(executeCommand("fabric:container-list"));
  for (  Container container : containers) {
    String bundles=executeCommand("container-connect -u admin -p admin " + container.getId() + " osgi:list -s | grep camel-hazelcast");
    assertNotNull(bundles);
    System.out.println(bundles);
    assertTrue("Expected no camel-hazelcast installed.",bundles.isEmpty());
  }
}
