{
switch (eClass.getClassifierID()) {
case RfcPackage.DESTINATION:
    return createDestination();
case RfcPackage.RFC:
  return createRFC();
case RfcPackage.TABLE:
return createTable();
case RfcPackage.STRUCTURE:
return createStructure();
case RfcPackage.DESTINATION_DATA_ENTRY:
return (EObject)createDestinationDataEntry();
case RfcPackage.DESTINATION_DATA:
return createDestinationData();
case RfcPackage.DESTINATION_DATA_STORE_ENTRY:
return (EObject)createDestinationDataStoreEntry();
case RfcPackage.DESTINATION_DATA_STORE:
return createDestinationDataStore();
case RfcPackage.SERVER_DATA_ENTRY:
return (EObject)createServerDataEntry();
case RfcPackage.SERVER_DATA:
return createServerData();
case RfcPackage.SERVER_DATA_STORE_ENTRY:
return (EObject)createServerDataStoreEntry();
case RfcPackage.SERVER_DATA_STORE:
return createServerDataStore();
default :
throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
}
}
