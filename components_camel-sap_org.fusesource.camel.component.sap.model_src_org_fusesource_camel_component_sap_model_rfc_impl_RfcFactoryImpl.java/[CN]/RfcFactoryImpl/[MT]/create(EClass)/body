{
switch (eClass.getClassifierID()) {
case RfcPackage.DESTINATION:
    return createDestination();
case RfcPackage.RFC:
  return createRFC();
case RfcPackage.TABLE:
return createTable();
case RfcPackage.STRUCTURE:
return createStructure();
case RfcPackage.DESTINATION_DATA_ENTRY:
return (EObject)createDestinationDataEntry();
case RfcPackage.DESTINATION_DATA:
return createDestinationData();
case RfcPackage.DESTINATION_DATA_STORE_ENTRY:
return (EObject)createDestinationDataStoreEntry();
case RfcPackage.DESTINATION_DATA_STORE:
return createDestinationDataStore();
case RfcPackage.SERVER:
return createServer();
case RfcPackage.SERVER_DATA_ENTRY:
return (EObject)createServerDataEntry();
case RfcPackage.SERVER_DATA:
return createServerData();
case RfcPackage.SERVER_DATA_STORE_ENTRY:
return (EObject)createServerDataStoreEntry();
case RfcPackage.SERVER_DATA_STORE:
return createServerDataStore();
case RfcPackage.FUNCTION_TEMPLATE:
return createFunctionTemplate();
case RfcPackage.RECORD_META_DATA:
return createRecordMetaData();
case RfcPackage.FIELD_META_DATA:
return createFieldMetaData();
case RfcPackage.LIST_FIELD_META_DATA:
return createListFieldMetaData();
case RfcPackage.ABAP_EXCEPTION:
return createAbapException();
case RfcPackage.RESPOSITORY_DATA_ENTRY:
return (EObject)createRespositoryDataEntry();
case RfcPackage.REPOSITORY_DATA:
return createRepositoryData();
case RfcPackage.REPOSITORY_DATA_STORE:
return createRepositoryDataStore();
case RfcPackage.RESPOSITORY_DATA_STORE_ENTRY:
return (EObject)createRespositoryDataStoreEntry();
default :
throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
}
}
