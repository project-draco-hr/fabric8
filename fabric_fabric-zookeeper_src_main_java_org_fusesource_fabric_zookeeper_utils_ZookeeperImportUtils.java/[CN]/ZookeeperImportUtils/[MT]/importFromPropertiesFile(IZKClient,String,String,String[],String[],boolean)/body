{
  List<Pattern> includes=getPatterns(includeRegex);
  List<Pattern> excludes=getPatterns(excludeRegex);
  InputStream in=null;
  try {
    new BufferedInputStream(new URL(source).openStream());
    Properties props=new Properties();
    props.load(in);
    for (Enumeration names=props.propertyNames(); names.hasMoreElements(); ) {
      String name=(String)names.nextElement();
      String value=props.getProperty(name);
      if (value != null && value.isEmpty()) {
        value=null;
      }
      if (!name.startsWith("/")) {
        name="/" + name;
      }
      name=target + name;
      if (!matches(includes,name,true) || matches(excludes,name,false)) {
        continue;
      }
      if (!dryRun) {
        ZookeeperCommandBuilder.set(name,value).execute(zooKeeper);
      }
 else {
        System.out.printf("Creating path \"%s\" with value \"%s\"\n",name,value);
      }
    }
  }
  finally {
    Closeables.closeQuitely(in);
  }
}
