{
  checkFabricAvailable();
  Version version=fabricService.getVersion(this.version);
  if (containerIds == null || containerIds.isEmpty()) {
    containerIds=Arrays.asList(fabricService.getCurrentContainer().getId());
  }
  List<Container> toRollback=new ArrayList<Container>();
  List<Container> same=new ArrayList<Container>();
  for (  String containerName : containerIds) {
    Container container=fabricService.getContainer(containerName);
    int num=canRollback(version,container);
    if (num < 0) {
      throw new IllegalArgumentException("Container " + container.getId() + " has already lower version "+ container.getVersion()+ " than the requested version "+ version+ " to rollback.");
    }
 else     if (num == 0) {
      same.add(container);
    }
 else {
      toRollback.add(container);
    }
  }
  for (  Container container : same) {
    System.out.println("Container " + container.getId() + " is already version "+ version);
  }
  for (  Container container : toRollback) {
    Version oldVersion=container.getVersion();
    Profile[] oldProfiles=container.getProfiles();
    Profile[] newProfiles=getProfilesForUpgradeOrRollback(oldProfiles,version);
    container.setVersion(version);
    container.setProfiles(newProfiles);
    log.debug("Rolled back container {} from {} to {}",new Object[]{container,oldVersion,version});
    System.out.println("Rolled back container " + container.getId() + " from version "+ oldVersion+ " to "+ version);
  }
  return null;
}
