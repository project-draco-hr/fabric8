{
  final ConfigMapList list=getConfigMapList();
  final List<ConfigMap> maps=list.getItems();
  final Iterator<ConfigMap> it=maps.iterator();
  if (!maps.isEmpty()) {
    return new Enumeration(){
      @Override public boolean hasMoreElements(){
        return it.hasNext();
      }
      @Override public Object nextElement(){
        final ConfigMap map=it.next();
        final Hashtable<String,String> dict=new Hashtable(map.getData());
        final String pid=map.getMetadata().getLabels().get(pidLabel);
        addToDictionary(dict,"kubernetes.metadata.name",map.getMetadata().getName());
        addToDictionary(dict,"kubernetes.metadata.namespace",map.getMetadata().getNamespace());
        addToDictionary(dict,"kubernetes.metadata.selfLink",map.getMetadata().getSelfLink());
        addToDictionary(dict,"kubernetes.metadata.uid",map.getMetadata().getUid());
        addToDictionary(dict,"kubernetes.metadata.resourceVersion",map.getMetadata().getResourceVersion());
        int n=pid.indexOf('-');
        if (n > 0) {
          addToDictionary(dict,Constants.SERVICE_PID,pid);
          addToDictionary(dict,ConfigurationAdmin.SERVICE_FACTORYPID,pid.substring(0,n));
        }
 else {
          addToDictionary(dict,Constants.SERVICE_PID,pid);
        }
        return dict;
      }
    }
;
  }
  return Collections.emptyEnumeration();
}
