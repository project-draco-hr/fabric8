{
  List<Pattern> profile=getPatterns(new String[]{RegexSupport.PROFILE_REGEX});
  List<Pattern> agentProperties=getPatterns(new String[]{RegexSupport.PROFILE_AGENT_PROPERTIES_REGEX});
  if (current.isDirectory()) {
    for (    File child : current.listFiles()) {
      getCandidates(parent,child,settings);
    }
    String p=buildZKPath(parent,current).replaceFirst("/","");
    settings.put(p,null);
  }
 else {
    BufferedInputStream in=new BufferedInputStream(new FileInputStream(current));
    byte[] contents=new byte[in.available()];
    in.read(contents);
    in.close();
    String p=buildZKPath(parent,current).replaceFirst("/","");
    if (p.endsWith(".cfg")) {
      p=p.substring(0,p.length() - ".cfg".length());
    }
    if (matches(agentProperties,p,false)) {
      settings.put(p,new String(contents).replaceAll(RegexSupport.PARENTS_REGEX,""));
      String parents=Pattern.compile(RegexSupport.PARENTS_REGEX).matcher(p).toMatchResult().group();
      settings.put(p.substring(0,p.lastIndexOf("/")),parents);
    }
 else     if (!matches(profile,p,false)) {
      settings.put(p,new String(contents));
    }
  }
}
