{
  try {
    this.zooKeeper.createWithParents(DOSGI_REGISTRY,null,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);
  }
 catch (  KeeperException.NodeExistsException e) {
  }
  this.tree=new ZooKeeperTreeTracker<String>(this.zooKeeper,new ZKStringDataReader(),DOSGI_REGISTRY);
  this.tree.track(this);
  this.uuid=Utils.getUUID(this.bundleContext);
  this.server=new TcpTransportFactory().bind(this.uri);
  this.server.setDispatchQueue(queue);
  this.server.setAcceptListener(this);
  this.server.start();
  String filter="(" + RemoteConstants.SERVICE_EXPORTED_INTERFACES + "=*)";
  this.bundleContext.addServiceListener(this,filter);
  this.registration=this.bundleContext.registerService(new String[]{ListenerHook.class.getName(),EventHook.class.getName(),FindHook.class.getName()},this,null);
  ServiceReference[] references=this.bundleContext.getServiceReferences(null,filter);
  if (references != null) {
    for (    ServiceReference reference : references) {
      exportService(reference);
    }
  }
}
