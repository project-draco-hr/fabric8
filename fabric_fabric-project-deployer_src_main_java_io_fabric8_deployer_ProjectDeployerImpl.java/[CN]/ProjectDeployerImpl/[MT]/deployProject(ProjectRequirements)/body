{
  FabricService fabric=getFabricService();
  Version version=getOrCreateVersion(requirements);
  for (  String parent : requirements.getParentProfiles()) {
    if (!version.hasProfile(parent)) {
      throw new IllegalArgumentException("Parent profile " + parent + " does not exists in version "+ version.getId());
    }
  }
  Profile profile=getOrCreateProfile(version,requirements);
  if (requirements.isAbstractProfile()) {
    profile.setAttribute(Profile.ABSTRACT,"true");
  }
 else {
    profile.setAttribute(Profile.ABSTRACT,"false");
  }
  ProjectRequirements oldRequirements=writeRequirementsJson(requirements,profile);
  updateProfileConfiguration(version,profile,requirements,oldRequirements);
  Profile overlay=profile.getOverlay(true);
  Container container=null;
  try {
    container=fabric.getCurrentContainer();
  }
 catch (  Exception e) {
  }
  Integer minimumInstances=requirements.getMinimumInstances();
  if (minimumInstances != null) {
    FabricRequirements fabricRequirements=fabric.getRequirements();
    ProfileRequirements profileRequirements=fabricRequirements.getOrCreateProfileRequirement(profile.getId());
    profileRequirements.setMinimumInstances(minimumInstances);
    fabric.setRequirements(fabricRequirements);
  }
  return resolveProfileDeployments(requirements,fabric,container,profile,overlay);
}
