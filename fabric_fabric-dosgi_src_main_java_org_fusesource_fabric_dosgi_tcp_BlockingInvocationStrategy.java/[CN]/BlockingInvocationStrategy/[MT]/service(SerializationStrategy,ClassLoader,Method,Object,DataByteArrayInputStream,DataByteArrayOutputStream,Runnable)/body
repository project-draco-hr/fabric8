{
  int pos=responseStream.position();
  try {
    Object value=null;
    Throwable error=null;
    try {
      Class<?>[] types=method.getParameterTypes();
      final Object[] args=new Object[types.length];
      serializationStrategy.decodeRequest(loader,types,requestStream,args);
      value=method.invoke(target,args);
    }
 catch (    Throwable t) {
      if (t instanceof InvocationTargetException) {
        error=t.getCause();
      }
 else {
        error=t;
      }
    }
    serializationStrategy.encodeResponse(loader,method.getReturnType(),value,error,responseStream);
  }
 catch (  Exception e) {
    try {
      responseStream.position(pos);
      serializationStrategy.encodeResponse(loader,method.getReturnType(),null,new RemoteException(e.toString()),responseStream);
    }
 catch (    Exception unexpected) {
      unexpected.printStackTrace();
    }
  }
 finally {
    onComplete.run();
  }
}
