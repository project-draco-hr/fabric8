{
  Map<String,String> labels=Collections.singletonMap(Constants.ARQ_KEY,session.getId());
  Filter<Pod> podFilter=KubernetesHelper.createPodFilter(labels);
  Filter<Service> serviceFilter=KubernetesHelper.createServiceFilter(labels);
  Filter<ReplicationController> replicationControllerFilter=KubernetesHelper.createReplicationControllerFilter(labels);
  for (  ReplicationController replicationController : client.getReplicationControllers().getItems()) {
    if (replicationControllerFilter.matches(replicationController)) {
      session.getLogger().info("Replication controller:" + getId(replicationController));
    }
  }
  for (  Pod pod : client.getPods().getItems()) {
    if (podFilter.matches(pod)) {
      session.getLogger().info("Pod:" + getId(pod) + " Status:"+ pod.getCurrentState().getStatus());
    }
  }
  for (  Service service : client.getServices().getItems()) {
    ServiceSpec spec=service.getSpec();
    if (spec != null && serviceFilter.matches(service)) {
      session.getLogger().info("Service:" + getId(service) + " IP:"+ spec.getPortalIP()+ " Port:"+ spec.getPort());
    }
  }
}
