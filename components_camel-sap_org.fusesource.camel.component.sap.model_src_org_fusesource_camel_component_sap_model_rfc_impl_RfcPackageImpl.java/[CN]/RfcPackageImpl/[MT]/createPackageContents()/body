{
  if (isCreated)   return;
  isCreated=true;
  destinationEClass=createEClass(DESTINATION);
  createEAttribute(destinationEClass,DESTINATION__NAME);
  createEAttribute(destinationEClass,DESTINATION__REPOSITORY_NAME);
  createEReference(destinationEClass,DESTINATION__RFCS);
  rfcEClass=createEClass(RFC);
  createEAttribute(rfcEClass,RFC__NAME);
  createEAttribute(rfcEClass,RFC__GROUP);
  createEAttribute(rfcEClass,RFC__DESCRIPTION);
  createEReference(rfcEClass,RFC__REQUEST);
  createEReference(rfcEClass,RFC__RESPONSE);
  createEReference(rfcEClass,RFC__DESTINATION);
  tableEClass=createEClass(TABLE);
  createEReference(tableEClass,TABLE__ROW);
  structureEClass=createEClass(STRUCTURE);
  destinationDataEntryEClass=createEClass(DESTINATION_DATA_ENTRY);
  createEAttribute(destinationDataEntryEClass,DESTINATION_DATA_ENTRY__KEY);
  createEAttribute(destinationDataEntryEClass,DESTINATION_DATA_ENTRY__VALUE);
  destinationDataEClass=createEClass(DESTINATION_DATA);
  createEReference(destinationDataEClass,DESTINATION_DATA__ENTRIES);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__ALIAS_USER);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__ASHOST);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__AUTH_TYPE);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__CLIENT);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__CODEPAGE);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__CPIC_TRACE);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__DENY_INITIAL_PASSWORD);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__EXPIRATION_PERIOD);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__EXPIRATION_TIME);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__GETSSO2);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__GROUP);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__GWHOST);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__GWSERV);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__LANG);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__LCHECK);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__MAX_GET_TIME);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__MSHOST);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__MSSERV);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__MYSAPSSO2);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__PASSWD);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__PASSWORD);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__PCS);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__PEAK_LIMIT);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__PING_ON_CREATE);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__POOL_CAPACITY);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__R3NAME);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__REPOSITORY_DEST);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__REPOSITORY_PASSWD);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__REPOSITORY_ROUNDTRIP_OPTIMIZATION);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__REPOSITORY_SNC);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__REPOSITORY_USER);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__SAPROUTER);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__SNC_LIBRARY);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__SNC_MODE);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__SNC_MYNAME);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__SNC_PARTNERNAME);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__SNC_QOP);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__SYSNR);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__TPHOST);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__TPNAME);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__TRACE);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__TYPE);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__USER_NAME);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__USER);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__USER_ID);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__USE_SAPGUI);
  createEAttribute(destinationDataEClass,DESTINATION_DATA__X509CERT);
  destinationDataStoreEntryEClass=createEClass(DESTINATION_DATA_STORE_ENTRY);
  createEAttribute(destinationDataStoreEntryEClass,DESTINATION_DATA_STORE_ENTRY__KEY);
  createEReference(destinationDataStoreEntryEClass,DESTINATION_DATA_STORE_ENTRY__VALUE);
  destinationDataStoreEClass=createEClass(DESTINATION_DATA_STORE);
  createEReference(destinationDataStoreEClass,DESTINATION_DATA_STORE__ENTRIES);
  serverEClass=createEClass(SERVER);
  createEAttribute(serverEClass,SERVER__NAME);
  serverDataEntryEClass=createEClass(SERVER_DATA_ENTRY);
  createEAttribute(serverDataEntryEClass,SERVER_DATA_ENTRY__KEY);
  createEAttribute(serverDataEntryEClass,SERVER_DATA_ENTRY__VALUE);
  serverDataEClass=createEClass(SERVER_DATA);
  createEReference(serverDataEClass,SERVER_DATA__ENTRIES);
  createEAttribute(serverDataEClass,SERVER_DATA__GWHOST);
  createEAttribute(serverDataEClass,SERVER_DATA__GWSERV);
  createEAttribute(serverDataEClass,SERVER_DATA__PROGID);
  createEAttribute(serverDataEClass,SERVER_DATA__CONNECTION_COUNT);
  createEAttribute(serverDataEClass,SERVER_DATA__SAPROUTER);
  createEAttribute(serverDataEClass,SERVER_DATA__MAX_START_UP_DELAY);
  createEAttribute(serverDataEClass,SERVER_DATA__REPOSITORY_DESTINATION);
  createEAttribute(serverDataEClass,SERVER_DATA__REPOSITORY_MAP);
  createEAttribute(serverDataEClass,SERVER_DATA__TRACE);
  createEAttribute(serverDataEClass,SERVER_DATA__WORKER_THREAD_COUNT);
  createEAttribute(serverDataEClass,SERVER_DATA__WORKER_THREAD_MIN_COUNT);
  createEAttribute(serverDataEClass,SERVER_DATA__SNC_MODE);
  createEAttribute(serverDataEClass,SERVER_DATA__SNC_QOP);
  createEAttribute(serverDataEClass,SERVER_DATA__SNC_MYNAME);
  createEAttribute(serverDataEClass,SERVER_DATA__SNC_LIB);
  serverDataStoreEntryEClass=createEClass(SERVER_DATA_STORE_ENTRY);
  createEAttribute(serverDataStoreEntryEClass,SERVER_DATA_STORE_ENTRY__KEY);
  createEReference(serverDataStoreEntryEClass,SERVER_DATA_STORE_ENTRY__VALUE);
  serverDataStoreEClass=createEClass(SERVER_DATA_STORE);
  createEReference(serverDataStoreEClass,SERVER_DATA_STORE__ENTRIES);
}
