{
  Logger log=event.getSession().getLogger();
  try {
    boolean dependenciesOk=true;
    List<String> dependencies=!configuration.getDependencies().isEmpty() ? configuration.getDependencies() : Util.getMavenDependencies(event.getSession());
    if (!dependencies.isEmpty()) {
      for (      String dependency : dependencies) {
        log.info("Applying kubernetes dependency from: " + dependency);
        Object dep=loadJson(readAsString(new URL(dependency)));
        dependenciesOk=dependenciesOk && applyConfiguration(client,controller,configuration,event.getSession(),Constants.ARQ_DEP_KEY,dep);
        if (!dependenciesOk) {
          log.error("Failed to apply kubernetes dependency: " + dependency);
          throw new IllegalStateException("Dependency failure.");
        }
      }
    }
    log.info("Applying kubernetes configuration from: " + configuration.getConfigUrl());
    Object dto=loadJson(readAsString(configuration.getConfigUrl()));
    applyConfiguration(client,controller,configuration,event.getSession(),Constants.ARQ_KEY,dto);
    displaySessionStatus(client,event.getSession());
  }
 catch (  Exception e) {
    try {
      cleanupSession(client,event.getSession());
    }
 catch (    MultiException me) {
      throw e;
    }
    throw new RuntimeException(e);
  }
}
