{
  String name=System.getProperty("karaf.name");
  logger.trace("onConnected");
  try {
    lock.tryLock(10,TimeUnit.SECONDS);
    String nodeAlive=CONTAINER_ALIVE.getPath(name);
    Stat stat=zooKeeper.exists(nodeAlive);
    if (stat != null) {
      if (stat.getEphemeralOwner() != zooKeeper.getSessionId()) {
        zooKeeper.delete(nodeAlive);
        zooKeeper.createWithParents(nodeAlive,null,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.EPHEMERAL);
      }
    }
 else {
      zooKeeper.createWithParents(nodeAlive,null,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.EPHEMERAL);
    }
    String domainsNode=CONTAINER_DOMAINS.getPath(name);
    stat=zooKeeper.exists(domainsNode);
    if (stat != null) {
      zooKeeper.deleteWithChildren(domainsNode);
    }
    String jmxUrl=getJmxUrl();
    if (jmxUrl != null) {
      zooKeeper.createOrSetWithParents(CONTAINER_JMX.getPath(name),getJmxUrl(),ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);
    }
    String sshUrl=getSshUrl();
    if (sshUrl != null) {
      zooKeeper.createOrSetWithParents(CONTAINER_SSH.getPath(name),getSshUrl(),ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);
    }
    if (zooKeeper.exists(CONTAINER_RESOLVER.getPath(name)) == null) {
      zooKeeper.createOrSetWithParents(CONTAINER_RESOLVER.getPath(name),getGlobalResolutionPolicy(zooKeeper),ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);
    }
    zooKeeper.createOrSetWithParents(CONTAINER_LOCAL_HOSTNAME.getPath(name),HostUtils.getLocalHostName(),ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);
    zooKeeper.createOrSetWithParents(CONTAINER_LOCAL_IP.getPath(name),HostUtils.getLocalIp(),ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);
    zooKeeper.createOrSetWithParents(CONTAINER_IP.getPath(name),getContainerPointer(zooKeeper,name),ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);
    for (    String resolver : ZkDefs.VALID_RESOLVERS) {
      String address=System.getProperty(resolver);
      if (address != null && !address.isEmpty()) {
        if (zooKeeper.exists(CONTAINER_ADDRESS.getPath(name,resolver)) == null) {
          zooKeeper.createOrSetWithParents(CONTAINER_ADDRESS.getPath(name,resolver),address,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);
        }
      }
    }
    String version=System.getProperty("fabric.version",ZkDefs.DEFAULT_VERSION);
    String profiles=System.getProperty("fabric.profiles");
    if (profiles != null) {
      String versionNode=CONFIG_CONTAINER.getPath(name);
      String profileNode=CONFIG_VERSIONS_CONTAINER.getPath(version,name);
      if (zooKeeper.exists(versionNode) == null) {
        zooKeeper.createOrSetWithParents(versionNode,version,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);
      }
      if (zooKeeper.exists(profileNode) == null) {
        zooKeeper.createOrSetWithParents(profileNode,profiles,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);
      }
    }
    registerDomains();
  }
 catch (  Exception e) {
    logger.warn("Error updating Fabric Container information. This exception will be ignored.",e);
  }
 finally {
    lock.unlock();
  }
}
