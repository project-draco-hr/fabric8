{
  configurer.configure(configuration,this);
  this.mavenDownloadProxyServlet=new MavenDownloadProxyServlet(runtimeProperties.get(),localRepository,remoteRepositories,appendSystemRepos,updatePolicy,checksumPolicy,proxyProtocol,proxyHost,proxyPort,proxyUsername,proxyPassword,nonProxyHosts,projectDeployer.get());
  this.mavenDownloadProxyServlet.start();
  this.mavenUploadProxyServlet=new MavenUploadProxyServlet(runtimeProperties.get(),localRepository,remoteRepositories,appendSystemRepos,updatePolicy,checksumPolicy,proxyProtocol,proxyHost,proxyPort,proxyUsername,proxyPassword,nonProxyHosts,projectDeployer.get());
  this.mavenUploadProxyServlet.start();
  try {
    HttpContext base=httpService.get().createDefaultHttpContext();
    HttpContext secure=new MavenSecureHttpContext(base,realm,role);
    httpService.get().registerServlet("/maven/download",mavenDownloadProxyServlet,createParams("maven-download"),base);
    httpService.get().registerServlet("/maven/upload",mavenUploadProxyServlet,createParams("maven-upload"),secure);
  }
 catch (  Throwable t) {
    LOGGER.warn("Failed to register fabric maven proxy servlets, due to:" + t.getMessage());
  }
  activateComponent();
}
