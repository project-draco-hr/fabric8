{
  List<Pair> rawPairs;
  if (checkRaw) {
    rawPairs=checkRAW(s);
  }
 else {
    rawPairs=new ArrayList<Pair>();
  }
  int n=s == null ? 0 : s.length();
  if (n == 0) {
    return s;
  }
  char chars[]=s.toCharArray();
  for (int i=0; ; ) {
    if (chars[i] > 0 && chars[i] < 128) {
      if (unsafeCharacters.get(chars[i])) {
        break;
      }
    }
    if (++i >= chars.length) {
      return s;
    }
  }
  StringBuilder sb=new StringBuilder();
  for (int i=0; i < chars.length; i++) {
    char ch=chars[i];
    if (ch > 0 && ch < 128 && unsafeCharacters.get(ch)) {
      if (ch == '%') {
        char next=i + 1 < chars.length ? chars[i + 1] : ' ';
        char next2=i + 2 < chars.length ? chars[i + 2] : ' ';
        if (isHexDigit(next) && isHexDigit(next2) && !isRaw(i,rawPairs)) {
          sb.append(ch);
        }
 else {
          appendEscape(sb,(byte)ch);
        }
      }
 else {
        appendEscape(sb,(byte)ch);
      }
    }
 else {
      sb.append(ch);
    }
  }
  return sb.toString();
}
