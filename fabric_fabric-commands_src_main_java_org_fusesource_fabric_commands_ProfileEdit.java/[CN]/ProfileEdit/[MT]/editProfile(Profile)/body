{
  String pid=getPid();
  Map<String,Map<String,String>> config=profile.getConfigurations();
  Map<String,String> pidConfig=config.get(pid);
  if (pidConfig == null) {
    pidConfig=new HashMap<String,String>();
  }
  if (featuresList != null && !featuresList.isEmpty()) {
    String[] features=featuresList.split(DELIMETER);
    for (    String feature : features) {
      updateConfig(pidConfig,FEATURE_PREFIX + feature.replace('/','_'),feature,set,delete);
    }
  }
  if (repositoryUriList != null && !repositoryUriList.isEmpty()) {
    String[] repositoryURIs=repositoryUriList.split(DELIMETER);
    for (    String repopsitoryURI : repositoryURIs) {
      updateConfig(pidConfig,REPOSITORY_PREFIX + repopsitoryURI.replace('/','_'),repopsitoryURI,set,delete);
    }
  }
  if (bundlesList != null && !bundlesList.isEmpty()) {
    String[] bundles=bundlesList.split(DELIMETER);
    for (    String bundlesLocation : bundles) {
      updateConfig(pidConfig,BUNDLE_PREFIX + bundlesLocation.replace('/','_'),bundlesLocation,set,delete);
    }
  }
  config.put(pid,pidConfig);
  profile.setConfigurations(config);
}
