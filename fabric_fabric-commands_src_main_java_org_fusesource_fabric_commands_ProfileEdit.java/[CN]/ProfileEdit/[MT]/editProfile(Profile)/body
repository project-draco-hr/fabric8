{
  String pid=AGENT_PID;
  boolean editInLine=false;
  Map<String,Map<String,String>> config=profile.getConfigurations();
  Map<String,String> pidConfig=config.get(pid);
  if (pidConfig == null) {
    pidConfig=new HashMap<String,String>();
  }
  if (featuresList != null && !featuresList.isEmpty()) {
    editInLine=true;
    String[] features=featuresList.split(DELIMETER);
    for (    String feature : features) {
      updateConfig(pidConfig,FEATURE_PREFIX + feature.replace('/','_'),feature,set,delete);
    }
  }
  if (repositoryUriList != null && !repositoryUriList.isEmpty()) {
    editInLine=true;
    String[] repositoryURIs=repositoryUriList.split(DELIMETER);
    for (    String repopsitoryURI : repositoryURIs) {
      updateConfig(pidConfig,REPOSITORY_PREFIX + repopsitoryURI.replace('/','_'),repopsitoryURI,set,delete);
    }
  }
  if (bundlesList != null && !bundlesList.isEmpty()) {
    editInLine=true;
    String[] bundles=bundlesList.split(DELIMETER);
    for (    String bundlesLocation : bundles) {
      updateConfig(pidConfig,BUNDLE_PREFIX + bundlesLocation.replace('/','_'),bundlesLocation,set,delete);
    }
  }
  if (fabsList != null && !fabsList.isEmpty()) {
    editInLine=true;
    String[] fabs=fabsList.split(DELIMETER);
    for (    String fabsLocation : fabs) {
      updateConfig(pidConfig,FAB_PREFIX + fabsLocation.replace('/','_'),fabsLocation,set,delete);
    }
  }
  if (overridesList != null && !overridesList.isEmpty()) {
    editInLine=true;
    String[] overrides=overridesList.split(DELIMETER);
    for (    String overridesLocation : overrides) {
      updateConfig(pidConfig,OVERRIDE_PREFIX + overridesLocation.replace('/','_'),overridesLocation,set,delete);
    }
  }
  if (configAdminProperties != null && configAdminProperties.length > 0) {
    for (    String configAdminProperty : configAdminProperties) {
      String currentPid=null;
      Map<String,String> existingConfig=null;
      if (configAdminProperty != null) {
        String keyValue="";
        if (configAdminProperty.contains(PID_KEY_SEPARATOR)) {
          currentPid=configAdminProperty.substring(0,configAdminProperty.indexOf(PID_KEY_SEPARATOR));
          keyValue=configAdminProperty.substring(configAdminProperty.indexOf(PID_KEY_SEPARATOR) + 1);
          editInLine=true;
        }
 else {
          currentPid=configAdminProperty;
        }
        existingConfig=config.get(currentPid);
        if (existingConfig == null) {
          existingConfig=new HashMap<String,String>();
        }
        if (configAdminProperties.length == 1 && importPid) {
          editInLine=true;
          importPidFromLocalConfigAdmin(currentPid,existingConfig);
        }
        Map<String,String> configMap=extractConfigs(keyValue);
        for (        Map.Entry<String,String> configEntries : configMap.entrySet()) {
          String key=configEntries.getKey();
          String value=configEntries.getValue();
          updatedDelimitedList(existingConfig,key,value,delimiter,set,delete,append,remove);
        }
        config.put(currentPid,existingConfig);
      }
    }
  }
  if (systemProperties != null && systemProperties.length > 0) {
    editInLine=true;
    for (    String systemProperty : systemProperties) {
      Map<String,String> configMap=extractConfigs(systemProperty);
      for (      Map.Entry<String,String> configEntries : configMap.entrySet()) {
        String key=configEntries.getKey();
        String value=configEntries.getValue();
        updatedDelimitedList(pidConfig,SYSTEM_PREFIX + key,value,delimiter,set,delete,append,remove);
      }
    }
  }
  if (configProperties != null && configProperties.length > 0) {
    editInLine=true;
    for (    String configProperty : configProperties) {
      Map<String,String> configMap=extractConfigs(configProperty);
      for (      Map.Entry<String,String> configEntries : configMap.entrySet()) {
        String key=configEntries.getKey();
        String value=configEntries.getValue();
        updatedDelimitedList(pidConfig,CONFIG_PREFIX + key,value,delimiter,set,delete,append,remove);
      }
    }
  }
  if (editInLine) {
    config.put(pid,pidConfig);
    profile.setConfigurations(config);
  }
 else {
    resource=resource != null ? resource : "org.fusesource.fabric.agent.properties";
    if (configAdminProperties != null && configAdminProperties.length == 1) {
      resource=configAdminProperties[0] + ".properties";
    }
    openInEditor(profile,resource);
  }
}
