{
  long processInstanceId=workItem.getProcessInstanceId();
  String buildName=WorkItemHandlers.getMandatoryParameter(workItem,manager,"buildName");
  String namespace=WorkItemHandlers.getMandatoryParameter(workItem,manager,"namespace");
  LOG.info("Executing build: " + namespace + "/"+ buildName+ " processInstanceId: "+ processInstanceId+ " workItemId: "+ workItem.getId());
  String buildUuid=null;
  try {
    buildUuid=buildTrigger.trigger(namespace,buildName);
    LOG.info("Created " + buildUuid + " from build: "+ namespace+ "/"+ buildName+ " processInstanceId: "+ processInstanceId+ " workItemId: "+ workItem.getId());
  }
 catch (  Exception e) {
    WorkItemHandlers.fail(workItem,manager,"Could not trigger build for namespace: " + namespace + " build: "+ buildName,e);
    return;
  }
  if (Strings.isNullOrBlank(buildUuid)) {
    WorkItemHandlers.fail(workItem,manager,"Could not trigger build for namespace: " + namespace + " build: "+ buildName);
  }
 else {
    BuildCorrelationKey key=new BuildCorrelationKey(namespace,buildName,buildUuid);
    buildProcessCorrelator.putBuildWorkItemId(key,workItem.getId());
  }
}
