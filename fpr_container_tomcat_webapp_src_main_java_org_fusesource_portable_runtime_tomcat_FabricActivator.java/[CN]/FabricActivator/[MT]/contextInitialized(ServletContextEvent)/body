{
  Properties sysprops=getRuntimeProperties();
  DefaultPropertiesProvider propsProvider=new DefaultPropertiesProvider(sysprops,true);
  Runtime runtime=RuntimeLocator.createRuntime(propsProvider);
  runtime.init();
  final CountDownLatch latch=new CountDownLatch(1);
  ServiceListener listener=new ServiceListener(){
    @Override public void serviceChanged(    ServiceEvent event){
      if (event.getType() == ServiceEvent.REGISTERED)       latch.countDown();
    }
  }
;
  ModuleContext syscontext=runtime.getModule(0).getModuleContext();
  syscontext.addServiceListener(listener,"(objectClass=" + FabricService.class.getName() + ")");
  File catalinaLib=new File(catalinaHome.getPath() + File.separator + "lib");
  modules=new ArrayList<Module>();
  for (  final String modname : moduleNames) {
    String[] list=catalinaLib.list(new FilenameFilter(){
      @Override public boolean accept(      File dir,      String name){
        return name.startsWith(modname);
      }
    }
);
    if (list.length != 1)     throw new IllegalStateException("Cannot find '" + modname + "' at: "+ catalinaLib);
    try {
      File modfile=new File(catalinaLib.getPath() + File.separator + list[0]);
      Manifest manifest=new JarFile(modfile).getManifest();
      Dictionary<String,String> headers=new ManifestHeadersProvider(manifest).getHeaders();
      modules.add(runtime.installModule(FabricService.class.getClassLoader(),headers));
    }
 catch (    RuntimeException rte) {
      throw rte;
    }
catch (    Exception ex) {
      throw new IllegalStateException(ex);
    }
  }
  for (  Module module : modules) {
    try {
      module.start();
    }
 catch (    ModuleException ex) {
      throw new IllegalStateException(ex);
    }
  }
  try {
    if (!latch.await(5,TimeUnit.SECONDS)) {
      throw new IllegalStateException("Cannot obtain FabricService");
    }
  }
 catch (  InterruptedException ex) {
  }
  Properties brandingProperties=new Properties();
  String resname="/WEB-INF/branding.properties";
  try {
    ServletContext servletContext=event.getServletContext();
    URL brandingURL=servletContext.getResource(resname);
    brandingProperties.load(brandingURL.openStream());
  }
 catch (  IOException e) {
    throw new IllegalStateException("Cannot read branding properties from: " + resname);
  }
  System.out.println(brandingProperties.getProperty("welcome"));
}
