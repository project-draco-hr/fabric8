{
  LOGGER.info("Activating Fabric Subsystem");
  Runtime runtime=injectedRuntime.getValue();
  initConfigurationAdmin(runtime);
  final CountDownLatch latch=new CountDownLatch(1);
  final ModuleContext syscontext=injectedModuleContext.getValue();
  ServiceListener listener=new ServiceListener(){
    @Override public void serviceChanged(    ServiceEvent event){
      if (event.getType() == ServiceEvent.REGISTERED) {
        ServiceReference<?> sref=event.getServiceReference();
        bootstrapService=(ZooKeeperClusterBootstrap)syscontext.getService(sref);
        syscontext.removeServiceListener(this);
        latch.countDown();
      }
    }
  }
;
  syscontext.addServiceListener(listener,"(objectClass=" + ZooKeeperClusterBootstrap.class.getName() + ")");
  ModuleClassLoader classLoader=(ModuleClassLoader)getClass().getClassLoader();
  try {
    URL url=classLoader.getResource(JarFile.MANIFEST_NAME);
    ContainerManifest manifest=new ContainerManifest(url.openStream());
    Dictionary<String,String> headers=new ContainerManifestHeadersProvider(manifest).getHeaders();
    module=runtime.installModule(classLoader,headers);
    ModuleEntriesProvider entriesProvider=new ClassLoaderEntriesProvider(module);
    Attachable attachable=AbstractModule.assertAbstractModule(module);
    attachable.putAttachment(AbstractModule.MODULE_ENTRIES_PROVIDER_KEY,entriesProvider);
    module.start();
  }
 catch (  RuntimeException rte) {
    throw rte;
  }
catch (  Exception ex) {
    throw new StartException(ex);
  }
  graviaBootstrap.installGraviaServices(startContext,runtime);
  try {
    if (!latch.await(5,TimeUnit.SECONDS)) {
      throw new StartException("Cannot obtain ZooKeeperClusterBootstrap");
    }
  }
 catch (  InterruptedException ex) {
  }
  Properties brandingProperties=new Properties();
  String resname="/META-INF/branding.properties";
  try {
    URL brandingURL=getClass().getResource(resname);
    brandingProperties.load(brandingURL.openStream());
  }
 catch (  IOException e) {
    throw new StartException("Cannot read branding properties from: " + resname);
  }
  System.out.println(brandingProperties.getProperty("welcome"));
}
