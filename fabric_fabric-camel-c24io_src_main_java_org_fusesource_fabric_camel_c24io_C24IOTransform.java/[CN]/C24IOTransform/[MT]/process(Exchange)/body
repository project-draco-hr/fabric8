{
  ComplexDataObject[][] objects=null;
  ComplexDataObject dataObject=null;
  try {
    dataObject=exchange.getIn().getMandatoryBody(ComplexDataObject.class);
  }
 catch (  InvalidPayloadException e1) {
    try {
      objects=exchange.getIn().getMandatoryBody(ComplexDataObject[][].class);
    }
 catch (    InvalidPayloadException e2) {
      objects=getInBodyAsArray(exchange,objects);
    }
  }
  if (objects == null) {
    if (dataObject == null) {
      dataObject=unmarshalDataObject(exchange);
    }
    objects=new ComplexDataObject[][]{{dataObject}};
  }
  Object result=transform(objects);
  Message out=exchange.getOut();
  out.setBody(result);
}
