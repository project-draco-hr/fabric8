{
  EventObject coreEvent=event;
  AbstractExchangeEvent exchangeEvent=null;
  if (event instanceof AuditEvent) {
    AuditEvent auditEvent=(AuditEvent)event;
    coreEvent=auditEvent.event;
  }
  if (event instanceof AbstractExchangeEvent) {
    exchangeEvent=(AbstractExchangeEvent)event;
  }
  Expression filter=null;
  List<String> compareWith=null;
  if (coreEvent instanceof ExchangeSendingEvent) {
    compareWith=inRegex;
    filter=getInFilter();
  }
 else   if (coreEvent instanceof ExchangeCreatedEvent) {
    return includeExchangeCreatedEvents;
  }
 else   if (coreEvent instanceof ExchangeSentEvent) {
    compareWith=outRegex;
    filter=getOutFilter();
  }
 else   if (coreEvent instanceof ExchangeCompletedEvent) {
    return includeExchangeCompletedEvents;
  }
 else   if (coreEvent instanceof ExchangeRedeliveryEvent) {
    compareWith=redeliveryRegex;
    filter=getRedeliveryFilter();
  }
 else   if (coreEvent instanceof ExchangeFailedEvent) {
    ExchangeFailedEvent failedEvent=(ExchangeFailedEvent)coreEvent;
    String exceptionClassName=failedEvent.getExchange().getException().getClass().getCanonicalName();
    filter=getFailureFilter();
    return testRegexps(exceptionClassName,failureRegex,filter,exchangeEvent);
  }
  String uri=endpointUri(event);
  return uri == null || compareWith == null ? false : testRegexps(uri,compareWith,filter,exchangeEvent);
}
