{
  if (!DependencyFilters.matches(dependency,shouldExclude)) {
    CollectRequest request=new CollectRequest(dependency,repos);
    try {
      DependencyNode node=repositorySystem.collectDependencies(session,request).getRoot();
      repositorySystem.resolveDependencies(session,node,new DependencyFilter(){
        @Override public boolean accept(        DependencyNode node,        List<DependencyNode> parents){
          boolean answer=!DependencyFilters.matches(node,shouldExclude);
          return answer;
        }
      }
);
      return node;
    }
 catch (    DependencyCollectionException e) {
      handleDependencyResolveFailure(pomNode,dependency,e);
    }
catch (    ArtifactResolutionException e) {
      handleDependencyResolveFailure(pomNode,dependency,e);
    }
  }
  return null;
}
