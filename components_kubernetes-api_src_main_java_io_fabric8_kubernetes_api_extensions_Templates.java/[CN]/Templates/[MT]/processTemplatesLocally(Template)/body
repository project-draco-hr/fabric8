{
  List<HasMetadata> objects=null;
  if (entity != null) {
    objects=entity.getObjects();
    if (objects == null || objects.isEmpty()) {
      return null;
    }
  }
  List<Parameter> parameters=entity != null ? entity.getParameters() : null;
  if (parameters != null && !parameters.isEmpty()) {
    String json="{\"kind\": \"List\", \"apiVersion\": \"" + KubernetesHelper.defaultApiVersion + "\",\n"+ "  \"items\": "+ KubernetesHelper.toJson(objects)+ " }";
    for (int i=0; i < 5; i++) {
      for (      Parameter parameter : parameters) {
        String name=parameter.getName();
        String regex="${" + name + "}";
        String value=parameter.getValue();
        if (Strings.isNullOrBlank(value)) {
          throw new IllegalArgumentException("No value available for parameter name: " + name);
        }
        json=Strings.replaceAllWithoutRegex(json,regex,value);
      }
    }
    return createObjectMapper().reader(KubernetesList.class).readValue(json);
  }
 else {
    KubernetesList answer=new KubernetesList();
    answer.setItems(objects);
    return answer;
  }
}
