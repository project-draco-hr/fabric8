{
  System.err.println("Create test profile:" + profile + " in datastore.");
  List<String> versions=Lists.transform(Arrays.<Version>asList(getFabricService().getVersions()),new Function<Version,String>(){
    @Override public String apply(    Version version){
      return version.getId();
    }
  }
);
  if (!versions.contains(version)) {
    getFabricService().createVersion(version);
  }
  getFabricService().getDataStore().createProfile(version,profile);
  GitUtils.waitForBranchUpdate(getCurator(),version);
  GitUtils.checkoutBranch(git,"origin",version);
  PullResult pullResult=git.pull().setCredentialsProvider(getCredentialsProvider()).setRebase(true).call();
  assertTrue(pullResult.isSuccessful());
  String relativeProfileDir="fabric/profiles/" + profile + ".profile";
  File testProfileDir=new File(git.getRepository().getWorkTree(),relativeProfileDir);
  assertTrue(testProfileDir.exists());
  File testProfileConfig=new File(testProfileDir,"io.fabric.agent.properties");
  assertTrue(testProfileConfig.exists());
}
