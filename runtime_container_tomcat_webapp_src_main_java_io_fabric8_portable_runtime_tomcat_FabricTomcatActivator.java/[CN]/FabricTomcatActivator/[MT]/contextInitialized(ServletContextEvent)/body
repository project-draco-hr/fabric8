{
  ServletContext servletContext=event.getServletContext();
  PropertiesProvider propsProvider=new FabricPropertiesProvider(servletContext);
  Runtime runtime=RuntimeLocator.createRuntime(new TomcatRuntimeFactory(servletContext),propsProvider);
  runtime.init();
  final ModuleContext syscontext=runtime.getModuleContext();
  final BoostrapLatch latch=new BoostrapLatch(1);
  ServiceListener listener=new ServiceListener(){
    @Override public void serviceChanged(    ServiceEvent event){
      if (event.getType() == ServiceEvent.REGISTERED) {
        syscontext.removeServiceListener(this);
        latch.countDown();
      }
    }
  }
;
  servletContext.setAttribute(BoostrapLatch.class.getName(),latch);
  syscontext.addServiceListener(listener,"(objectClass=" + BootstrapComplete.class.getName() + ")");
  registerServices(servletContext,runtime);
  WebAppContextListener webappInstaller=new WebAppContextListener();
  Module module=webappInstaller.installWebappModule(servletContext);
  servletContext.setAttribute(Module.class.getName(),module);
  try {
    module.start();
  }
 catch (  ModuleException ex) {
    throw new IllegalStateException(ex);
  }
  Module sysmodule=runtime.getModuleContext().getModule();
  BundleContext bundleContext=sysmodule.adapt(Bundle.class).getBundleContext();
  servletContext.setAttribute(BundleContext.class.getName(),bundleContext);
}
