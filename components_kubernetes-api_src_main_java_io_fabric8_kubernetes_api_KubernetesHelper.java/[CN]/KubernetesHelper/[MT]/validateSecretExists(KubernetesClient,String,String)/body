{
  Secret secret=null;
  try {
    secret=kubernetes.secrets().inNamespace(namespace).withName(secretName).get();
  }
 catch (  KubernetesClientException e) {
    if (e.getCode() == 404) {
    }
 else {
      throw e;
    }
  }
  if (secret == null) {
    throw new IllegalArgumentException("No secret named: " + secretName + " for namespace "+ namespace+ " is available on Kubernetes"+ ". For how to create secrets see: http://fabric8.io/guide/fabric8OnOpenShift.html#requirements ");
  }
 else {
    return secret;
  }
}
