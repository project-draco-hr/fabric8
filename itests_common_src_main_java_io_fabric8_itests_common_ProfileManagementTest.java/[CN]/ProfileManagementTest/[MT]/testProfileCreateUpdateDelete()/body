{
  ProfileBuilder pbA10=ProfileBuilder.Factory.create("1.0","prfA").addConfiguration("pidA",Collections.singletonMap("keyA","valA"));
  ProfileState prfA10=proxy.createProfile(new ProfileState(pbA10.getProfile()));
  Assert.assertEquals("1.0",prfA10.getVersion());
  Assert.assertEquals("prfA",prfA10.getId());
  Assert.assertEquals("valA",prfA10.getConfiguration("pidA").get("keyA"));
  Assert.assertNotNull(proxy.getVersion("1.0").getProfileState("prfA"));
  VersionState v11=proxy.createVersion("1.0","1.1",null);
  ProfileState prfA11a=v11.getProfileState("prfA");
  Assert.assertEquals("1.1",prfA11a.getVersion());
  Assert.assertEquals("prfA",prfA11a.getId());
  Assert.assertEquals("valA",prfA11a.getConfiguration("pidA").get("keyA"));
  Assert.assertNotNull(proxy.getVersion("1.0").getProfileState("prfA"));
  Assert.assertNotNull(proxy.getVersion("1.1").getProfileState("prfA"));
  ProfileBuilder pbA11=ProfileBuilder.Factory.createFrom(prfA11a.toProfile()).addConfiguration("pidA",Collections.singletonMap("keyB","valB"));
  ProfileState prfA11b=proxy.createProfile(new ProfileState(pbA11.getProfile()));
  Assert.assertEquals("1.1",prfA11b.getVersion());
  Assert.assertEquals("prfA",prfA11b.getId());
  Assert.assertEquals("valB",prfA11b.getConfiguration("pidA").get("keyB"));
  Assert.assertNotEquals(prfA11a,prfA11b);
  Assert.assertNotNull(proxy.getVersion("1.0").getProfileState("prfA"));
  Assert.assertNotNull(proxy.getVersion("1.1").getProfileState("prfA"));
  proxy.deleteProfile(prfA10.getVersion(),prfA10.getId(),true);
  proxy.deleteVersion(v11.getId());
}
