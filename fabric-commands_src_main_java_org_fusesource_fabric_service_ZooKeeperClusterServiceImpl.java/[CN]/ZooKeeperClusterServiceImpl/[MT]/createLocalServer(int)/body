{
  ZKClient client=null;
  try {
    String karafName=System.getProperty("karaf.name");
    Configuration config=configurationAdmin.createFactoryConfiguration("org.fusesource.fabric.zookeeper.server");
    Properties properties=new Properties();
    properties.put("tickTime","2000");
    properties.put("initLimit","10");
    properties.put("syncLimit","5");
    properties.put("dataDir","data/zookeeper/0000");
    properties.put("clientPort",Integer.toString(port));
    properties.put("fabric.zookeeper.pid","org.fusesource.fabric.zookeeper.server-0000");
    config.setBundleLocation(null);
    config.update(properties);
    config=configurationAdmin.getConfiguration("org.fusesource.fabric.zookeeper");
    properties=new Properties();
    String connectionUrl=getLocalHostAddress() + ":" + Integer.toString(port);
    properties.put("zookeeper.url",connectionUrl);
    config.setBundleLocation(null);
    config.update(properties);
    client=new ZKClient(connectionUrl,Timespan.ONE_MINUTE,null);
    client.start();
    client.waitForStart();
    String defaultProfile=ZkPath.CONFIG_VERSIONS_PROFILE.getPath(version,"default");
    set(client,defaultProfile + "/org.fusesource.fabric.zookeeper/zookeeper.url","${zk:" + karafName + "/ip}:"+ Integer.toString(port));
    String profileNode=ZkPath.CONFIG_VERSIONS_PROFILE.getPath(version,"zk-server-0000") + "/org.fusesource.fabric.zookeeper.server-0000";
    set(client,profileNode + "/tickTime","2000");
    set(client,profileNode + "/initLimit","10");
    set(client,profileNode + "/syncLimit","5");
    set(client,profileNode + "/dataDir","data/zookeeper/0000");
    set(client,ZkPath.CONFIG_VERSIONS_PROFILE.getPath(version,"zk-server-0000-1"),"zk-server-0000");
    profileNode=ZkPath.CONFIG_VERSIONS_PROFILE.getPath(version,"zk-server-0000-1") + "/org.fusesource.fabric.zookeeper.server-0000";
    set(client,profileNode + "/clientPort","2181");
    set(client,"/fabric/configs/versions/" + version + "/general/zookeeper-cluster","0000");
    set(client,"/fabric/configs/versions/" + version + "/general/zookeeper-cluster/0000",karafName);
    createDefault(client,defaultProfile + "/org.fusesource.fabric.agent/org.ops4j.pax.url.mvn.useFallbackRepositories","false");
    createDefault(client,defaultProfile + "/org.fusesource.fabric.agent/org.ops4j.pax.url.mvn.disableAether","true");
    createDefault(client,defaultProfile + "/org.fusesource.fabric.agent/org.ops4j.pax.url.mvn.defaultRepositories","file:${karaf.home}/${karaf.default.repository}@snapshots");
    createDefault(client,defaultProfile + "/org.fusesource.fabric.agent/org.ops4j.pax.url.mvn.repositories","http://repo1.maven.org/maven2,http://repo.fusesource.com/nexus/content/repositories/releases");
    createDefault(client,defaultProfile + "/org.fusesource.fabric.agent/repository.fabric","mvn:org.fusesource.fabric/fabric-distro/1.0-SNAPSHOT/xml/features");
    createDefault(client,defaultProfile + "/org.fusesource.fabric.agent/feature.karaf","karaf");
    createDefault(client,defaultProfile + "/org.fusesource.fabric.agent/feature.fabric-agent","fabric-agent");
    createDefault(client,defaultProfile + "/org.fusesource.fabric.agent/framework","mvn:org.apache.felix/org.apache.felix.framework/3.0.9-fuse-00-10");
    createDefault(client,ZkPath.CONFIG_AGENT.getPath(karafName),version);
    createDefault(client,ZkPath.CONFIG_VERSIONS_AGENT.getPath(version,karafName),"default zk-server-0000-1");
    Bundle bundle=bundleContext.installBundle("mvn:org.fusesource.fabric/fabric-configadmin/1.0-SNAPSHOT");
    if (bundle.getState() == Bundle.ACTIVE) {
      bundle.stop();
    }
    bundle.start();
  }
 catch (  Exception e) {
    throw new FabricException("Unable to create zookeeper server configuration",e);
  }
 finally {
    if (client != null) {
      client.destroy();
    }
  }
}
