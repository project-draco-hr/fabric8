{
  size().body()._return(invoke("sizeOfConstructor").plus(invoke("sizeOfBody")));
  sizeOfConstructor().body()._return(ref("NUMERIC_ID_SIZE"));
  JMethod sizeOfFields=cls().method(JMod.PRIVATE,cm.LONG,"sizeOfFields");
  sizeOfFields.body().decl(cm.LONG,"fieldSize",lit(0L));
  for (  Attribute attribute : amqpFields) {
    if (generator.getMapping().get(attribute.type) != null) {
      if (attribute.attribute.type().isArray()) {
        sizeOfFields.body().assign(ref("fieldSize"),ref("fieldSize").plus(generator.registry().cls().staticInvoke("instance").invoke("sizer").invoke("sizeOfArray").arg(ref(attribute.attribute.name()))));
      }
 else {
        sizeOfFields.body().assign(ref("fieldSize"),ref("fieldSize").plus(generator.registry().cls().staticInvoke("instance").invoke("sizer").invoke("sizeOf" + toJavaClassName(attribute.type)).arg(ref(attribute.attribute.name()))));
      }
    }
 else {
      if (attribute.attribute.type().isArray()) {
        sizeOfFields.body().assign(ref("fieldSize"),ref("fieldSize").plus(generator.registry().cls().staticInvoke("instance").invoke("sizer").invoke("sizeOfArray").arg(ref(attribute.attribute.name()))));
      }
 else {
        JConditional conditional=sizeOfFields.body()._if(ref(attribute.attribute.name()).ne(_null()));
        conditional._then().assign(ref("fieldSize"),ref("fieldSize").plus(ref(attribute.attribute.name()).invoke("size")));
        conditional._else().assign(ref("fieldSize"),ref("fieldSize").plus(lit(1L)));
      }
    }
  }
  sizeOfFields.body()._return(ref("fieldSize"));
  JMethod getListEncoding=cls().method(JMod.PRIVATE,cm.BYTE,"getListEncoding");
  getListEncoding.param(cm.LONG,"fieldSize");
  JMethod getListWidth=cls().method(JMod.PRIVATE,cm.INT,"getListWidth");
  getListWidth.param(cm.BYTE,"formatCode");
  getListWidth.body()._if(ref("formatCode").eq(cm.ref("AMQPList").staticRef("LIST_LIST8_CODE")))._then()._return(cm.ref("AMQPList").staticRef("LIST_LIST8_WIDTH"));
  getListWidth.body()._return(cm.ref("AMQPList").staticRef("LIST_LIST32_WIDTH"));
  getListEncoding.body()._if(ref("fieldSize").lte(lit(255).minus(cm.ref("AMQPList").staticRef("LIST_LIST8_WIDTH"))))._then()._return(cm.ref("AMQPList").staticRef("LIST_LIST8_CODE"));
  getListEncoding.body()._return(cm.ref("AMQPList").staticRef("LIST_LIST32_CODE"));
  sizeOfBody().body().decl(cm.LONG,"fieldSize",invoke("sizeOfFields"));
  sizeOfBody().body().decl(cm.LONG,"width",invoke("getListWidth").arg(invoke("getListEncoding").arg(ref("fieldSize"))).mul(lit(2)));
  sizeOfBody().body()._return(lit(1).plus(ref("width").plus(ref("fieldSize"))));
}
