{
  if (type.getProvides() != null) {
    cls()._implements(cm.ref(generator.getPackagePrefix() + "." + generator.getInterfaces()+ "."+ toJavaClassName(type.getProvides())));
  }
  cls()._implements(cm.ref("org.fusesource.fabric.apollo.amqp.codec.interfaces.AmqpType"));
  for (  Object obj : type.getEncodingOrDescriptorOrFieldOrChoiceOrDoc()) {
    if (obj instanceof Descriptor) {
      Descriptor desc=(Descriptor)obj;
      int mods=JMod.PUBLIC | JMod.STATIC | JMod.FINAL;
      SYMBOLIC_ID=describedType.field(mods,Buffer.class,"SYMBOLIC_ID",JExpr._new(cm.ref(AsciiBuffer.class)).arg(desc.getName()));
      String code=desc.getCode();
      String category=code.split(":")[0];
      String descriptorId=code.split(":")[1];
      CATEGORY=describedType.field(mods,long.class,"CATEGORY",JExpr.lit(Integer.parseInt(category.substring(2),16)));
      DESCRIPTOR_ID=describedType.field(mods,long.class,"DESCRIPTOR_ID",JExpr.lit(Integer.parseInt(descriptorId.substring(2),16)));
      NUMERIC_ID=describedType.field(mods,long.class,"NUMERIC_ID",JExpr.direct("CATEGORY << 32 | DESCRIPTOR_ID"));
    }
  }
  write();
  read();
  encodeTo();
  decodeFrom();
}
