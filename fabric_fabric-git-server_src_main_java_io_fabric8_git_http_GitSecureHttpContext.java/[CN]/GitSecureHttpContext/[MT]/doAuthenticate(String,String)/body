{
  try {
    Subject subject=new Subject();
    LoginContext loginContext=new LoginContext(realm,subject,new CallbackHandler(){
      public void handle(      Callback[] callbacks) throws IOException, UnsupportedCallbackException {
        for (int i=0; i < callbacks.length; i++) {
          if (callbacks[i] instanceof NameCallback) {
            ((NameCallback)callbacks[i]).setName(username);
          }
 else           if (callbacks[i] instanceof PasswordCallback) {
            ((PasswordCallback)callbacks[i]).setPassword(password.toCharArray());
          }
 else {
            throw new UnsupportedCallbackException(callbacks[i]);
          }
        }
      }
    }
);
    loginContext.login();
    if (role != null && role.length() > 0) {
      boolean found=false;
      for (      Principal p : subject.getPrincipals()) {
        if (role.equals(p.getName()) || p instanceof Group && isGroupMember((Group)p,role)) {
          found=true;
          break;
        }
      }
      if (!found) {
        throw new FailedLoginException("User does not have the required role: " + role);
      }
    }
    return subject;
  }
 catch (  AccountException e) {
    LOGGER.warn("Account failure",e);
    return null;
  }
catch (  LoginException e) {
    LOGGER.warn("Login failed",e);
    return null;
  }
}
