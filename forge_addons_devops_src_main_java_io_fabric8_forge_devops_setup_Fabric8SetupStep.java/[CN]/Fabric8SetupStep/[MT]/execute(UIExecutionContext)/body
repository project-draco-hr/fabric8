{
  Project project=getCurrentProject(context.getUIContext());
  System.out.println("====== execute() and we have a project: " + project);
  DockerSetupHelper.setupDocker(project,from.getValue(),main.getValue());
  facetFactory.install(project,ResourcesFacet.class);
  Dependency bom=DependencyBuilder.create().setCoordinate(MavenHelpers.createCoordinate("io.fabric8","fabric8-project",VersionHelper.fabric8Version(),"pom")).setScopeType("import");
  dependencyInstaller.installManaged(project,bom);
  if (test.getValue() != null && test.getValue()) {
    Dependency dependency=DependencyBuilder.create().setCoordinate(MavenHelpers.createCoordinate("io.fabric8","arquillian-fabric8",null)).setScopeType("test");
    dependencyInstaller.installManaged(project,dependency);
    dependency=DependencyBuilder.create().setCoordinate(MavenHelpers.createCoordinate("org.jboss.arquillian.junit","arquillian-junit-container",null)).setScopeType("test");
    dependencyInstaller.installManaged(project,dependency);
  }
  MavenPluginFacet pluginFacet=project.getFacet(MavenPluginFacet.class);
  MavenPlugin plugin=MavenPluginBuilder.create().setCoordinate(MavenHelpers.createCoordinate("io.fabric8","fabric8-maven-plugin",VersionHelper.fabric8Version())).addExecution(ExecutionBuilder.create().setId("json").addGoal("json")).addExecution(ExecutionBuilder.create().setId("zip").addGoal("zip"));
  pluginFacet.addPlugin(plugin);
  MavenFacet maven=project.getFacet(MavenFacet.class);
  Model pom=maven.getModel();
  Properties properties=pom.getProperties();
  boolean updated=false;
  if (container.getValue() != null) {
    properties.put("fabric8.label.container",container.getValue());
    updated=true;
  }
  if (icon.getValue() != null) {
    properties.put("fabric8.iconRef","icons/" + icon.getValue());
    updated=true;
  }
  if (group.getValue() != null) {
    properties.put("fabric8.label.group",group.getValue());
    updated=true;
  }
  if (updated) {
    maven.setModel(pom);
  }
  return Results.success("Adding Fabric8 maven support with base Docker image: " + from.getValue());
}
