{
  try {
    Subject subject=new Subject();
    LoginContext loginContext=new LoginContext(realm,subject,new CallbackHandler(){
      public void handle(      Callback[] callbacks) throws IOException, UnsupportedCallbackException {
        for (int i=0; i < callbacks.length; i++) {
          if (callbacks[i] instanceof NameCallback) {
            ((NameCallback)callbacks[i]).setName(username);
          }
 else           if (callbacks[i] instanceof PasswordCallback) {
            ((PasswordCallback)callbacks[i]).setPassword(password.toCharArray());
          }
 else {
            throw new UnsupportedCallbackException(callbacks[i]);
          }
        }
      }
    }
);
    loginContext.login();
    if (role != null && role.length() > 0) {
      List<String> acceptedClasses=Arrays.asList("org.apache.karaf.jaas.boot.principal.RolePrincipal","org.jboss.security.SimplePrincipal");
      String name=role;
      int idx=name.indexOf(':');
      if (idx > 0) {
        acceptedClasses=new ArrayList<>(acceptedClasses);
        acceptedClasses.add(name.substring(0,idx));
        name=name.substring(idx + 1);
      }
      boolean found=false;
      for (      Principal p : subject.getPrincipals()) {
        String className=p.getClass().getName();
        if (acceptedClasses.contains(className) && p.getName().equals(name)) {
          found=true;
          break;
        }
      }
      if (!found) {
        throw new FailedLoginException("User does not have the required role " + role);
      }
    }
    return subject;
  }
 catch (  AccountException e) {
    LOGGER.warn("Account failure",e);
    return null;
  }
catch (  LoginException e) {
    LOGGER.debug("Login failed",e);
    return null;
  }
}
