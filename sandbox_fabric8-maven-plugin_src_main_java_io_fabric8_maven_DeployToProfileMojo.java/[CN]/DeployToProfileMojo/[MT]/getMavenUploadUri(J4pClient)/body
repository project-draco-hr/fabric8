{
  Exception exception=null;
  try {
    J4pSearchResponse searchResponse=client.execute(new J4pSearchRequest(FABRIC_MBEAN));
    List<String> mbeanNames=searchResponse.getMBeanNames();
    if (mbeanNames == null || mbeanNames.isEmpty()) {
      getLog().warn("No MBean " + FABRIC_MBEAN + " found, are you sure you have created a fabric in this JVM?");
      return null;
    }
    J4pResponse<J4pReadRequest> request=client.execute(new J4pReadRequest(FABRIC_MBEAN,"MavenRepoUploadURI"));
    Object value=request.getValue();
    if (value != null) {
      String uri=value.toString();
      if (uri.startsWith("http")) {
        return uri;
      }
 else {
        getLog().warn("Could not find the Maven upload URI. Got: " + value);
      }
    }
 else {
      getLog().warn("Could not find the Maven upload URI");
    }
  }
 catch (  J4pConnectException e) {
    String message="Could not connect to jolokia on " + jolokiaUrl + " using user: "+ fabricServer.getUsername()+ ".\nAre you sure you are running a fabric8 container?";
    getLog().error(message);
    throw new MojoExecutionException(message,e);
  }
catch (  J4pRemoteException e) {
    int status=e.getStatus();
    if (status == 401) {
      String message="Status 401: Unauthorized to access: " + jolokiaUrl + " using user: "+ fabricServer.getUsername();
      if (!customUsernameAndPassword) {
        message+=".\nHave you created a Fabric?\nHave you setup your ~/.m2/settings.xml with the correct user and password for server ID: " + serverId + " and do the user/password match the server "+ jolokiaUrl+ "?";
      }
      getLog().error(message);
      throw new MojoExecutionException(message,e);
    }
 else     if (status == 404) {
      String message="Status 404: Resource not found: " + jolokiaUrl + ".\nHave you created a Fabric?";
      getLog().error(message);
      throw new MojoExecutionException(message,e);
    }
 else {
      exception=e;
    }
  }
catch (  J4pException e) {
    boolean is404="Could not parse answer: Unexpected token END OF FILE at position 0.".equals(e.getMessage());
    if (is404) {
      String message="Status 404: Resource not found: " + jolokiaUrl + ".\nHave you created a Fabric?";
      getLog().error(message);
      throw new MojoExecutionException(message,e);
    }
 else {
      exception=e;
    }
  }
  if (exception != null) {
    getLog().error("Failed to get maven repository URI from " + jolokiaUrl + ". "+ exception,exception);
    throw new MojoExecutionException("Could not find the Maven Upload Repository URI");
  }
 else {
    throw new MojoExecutionException("Could not find the Maven Upload Repository URI");
  }
}
