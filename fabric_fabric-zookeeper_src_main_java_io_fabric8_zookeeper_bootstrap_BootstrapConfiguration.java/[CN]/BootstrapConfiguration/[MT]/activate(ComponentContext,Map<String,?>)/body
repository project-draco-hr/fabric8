{
  this.componentContext=componentContext;
  configurer.configure(configuration,this);
  Properties userProps=new Properties();
  try {
    userProps.load(new File(home + "/etc/users.properties"));
  }
 catch (  IOException e) {
    LOGGER.warn("Failed to load users from etc/users.properties. No users will be imported.",e);
  }
  options=CreateEnsembleOptions.builder().bindAddress(bindAddress).agentEnabled(agentAutoStart).ensembleStart(ensembleAutoStart).zookeeperPassword(PasswordEncoder.decode(zookeeperPassword)).zooKeeperServerPort(zookeeperServerPort).zooKeeperServerConnectionPort(zookeeperServerConnectionPort).autoImportEnabled(profilesAutoImport).importPath(profilesAutoImportPath).users(userProps).profiles(profiles).version(version).build();
  BundleContext bundleContext=componentContext.getBundleContext();
  boolean isCreated=checkCreated(bundleContext);
  if (!Strings.isNotBlank(zookeeperUrl) && !isCreated && options.isEnsembleStart()) {
    String connectionUrl=getConnectionUrl(options);
    registrationHandler.get().setRegistrationCallback(new DataStoreBootstrapTemplate(name,home,connectionUrl,options));
    createOrUpdateDataStoreConfig(options);
    createZooKeeeperServerConfig(options);
    createZooKeeeperClientConfig(connectionUrl,options);
    markCreated(bundleContext);
  }
  activateComponent();
}
