{
  MessageProducer producer=null;
  try {
    producer=service.createProducer(dest);
    producer.setDeliveryMode(persistent ? DeliveryMode.PERSISTENT : DeliveryMode.NON_PERSISTENT);
    producer.setTimeToLive(msgTTL);
    initPayLoad();
    running=true;
    LOG.info("\nStarted to calculate elapsed time ...\n");
    long tStart=System.currentTimeMillis();
    for (sentCount=0; sentCount < messageCount; sentCount++) {
      if (!running)       break;
      Message message=createMessage(sentCount);
      if ((msgGroupID != null) && (!msgGroupID.isEmpty()))       message.setStringProperty("JMSXGroupID",msgGroupID);
      producer.send(message);
      LOG.info("Sent: " + (message instanceof TextMessage ? ((TextMessage)message).getText() : message.getJMSMessageID()));
      if (transactionBatchSize > 0 && sentCount > 0 && sentCount % transactionBatchSize == 0) {
        LOG.info("Committing transaction: " + transactions++);
        service.getDefaultSession().commit();
      }
      if (sleep > 0) {
        Thread.sleep(sleep);
      }
    }
    long tEnd=System.currentTimeMillis();
    long elapsed=(tEnd - tStart) / 1000;
    LOG.info("\nElapsed time in second : " + elapsed + "s\n");
    LOG.info("\nElapsed time in milli second : " + (tEnd - tStart) + "milli seconds\n");
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
 finally {
    if (producer != null) {
      try {
        producer.close();
      }
 catch (      JMSException e) {
        e.printStackTrace();
      }
    }
  }
  LOG.info("Producer thread finished");
}
