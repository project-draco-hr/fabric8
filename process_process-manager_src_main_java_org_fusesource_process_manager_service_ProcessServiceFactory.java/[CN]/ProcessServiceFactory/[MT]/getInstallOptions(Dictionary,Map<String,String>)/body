{
  InstallOptions.InstallOptionsBuilder builder=InstallOptions.builder();
  for (Enumeration keys=incoming.keys(); keys.hasMoreElements(); ) {
    String key=(String)keys.nextElement();
    String value=(String)incoming.get(key);
    try {
      if ("url".equals(key)) {
        Preconditions.checkNotNull(value,"Null url property");
        Preconditions.checkArgument(!value.trim().isEmpty(),"Empty url property");
        builder.url(value.trim());
      }
 else       if ("controllerUrl".equals(key)) {
        Preconditions.checkNotNull(value,"Null controllerUrl property");
        Preconditions.checkArgument(!value.trim().isEmpty(),"Empty controllerUrl property");
        builder.controllerUrl(value.trim());
      }
 else       if ("kind".equals(key)) {
        Preconditions.checkNotNull(value,"Null kind property");
        Preconditions.checkArgument(!value.trim().isEmpty(),"Empty kind property");
        String name=value.trim() + ".json";
        builder.controllerUrl(bundleContext.getBundle().getResource(name));
      }
 else {
        env.put(key,(String)incoming.get(key));
      }
    }
 catch (    Exception e) {
      String msg="Error getting install parameters: " + e.getMessage();
      LOG.error(msg,e);
      throw new ConfigurationException(key,msg);
    }
  }
  return builder.build();
}
