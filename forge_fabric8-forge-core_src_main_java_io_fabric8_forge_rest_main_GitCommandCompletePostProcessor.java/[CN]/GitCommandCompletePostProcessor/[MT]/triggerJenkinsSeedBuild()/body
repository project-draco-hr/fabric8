{
  if (!Strings.isNullOrEmpty(jenkinsSeedJob)) {
    String address=kubernetes.getServiceURL(ServiceNames.JENKINS,kubernetes.getNamespace(),"http",false);
    if (!Strings.isNullOrEmpty(address)) {
      String jobUrl=URLUtils.pathJoin(address,"/job/",jenkinsSeedJob,"/build");
      LOG.info("Attempting to trigger the jenkins seed build on: " + jobUrl);
      String json="{}";
      HttpURLConnection connection=null;
      try {
        URL url=new URL(jobUrl);
        connection=(HttpURLConnection)url.openConnection();
        connection.setRequestMethod("POST");
        connection.setRequestProperty("Content-Type","application/json");
        connection.setDoOutput(true);
        OutputStreamWriter out=new OutputStreamWriter(connection.getOutputStream());
        out.write(json);
        out.close();
        int status=connection.getResponseCode();
        String message=connection.getResponseMessage();
        LOG.info("Got response code from Jenkins: " + status + " message: "+ message);
        if (status != 200) {
          LOG.error("Failed to trigger job " + jenkinsSeedJob + " on "+ jobUrl+ ". Status: "+ status+ " message: "+ message);
        }
      }
 catch (      Exception e) {
        LOG.error("Failed to trigger jenkins on " + jobUrl + ". "+ e,e);
      }
 finally {
        if (connection != null) {
          connection.disconnect();
        }
      }
    }
  }
}
