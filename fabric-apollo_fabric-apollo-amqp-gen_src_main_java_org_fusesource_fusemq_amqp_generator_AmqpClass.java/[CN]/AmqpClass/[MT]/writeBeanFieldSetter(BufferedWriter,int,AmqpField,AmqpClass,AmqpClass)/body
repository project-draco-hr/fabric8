{
  if (baseType.isPrimitive() && !baseType.isAny() && !fieldClass.isEnumType()&& !baseType.isDescribed()&& !baseType.isMutable()) {
    writer.newLine();
    writer.write(Utils.tab(indent) + "public void set" + Utils.capFirst(field.getJavaName())+ "("+ baseType.valueMapping+ " "+ Utils.toJavaName(field.getName())+ ") {");
    writer.newLine();
    writer.write(Utils.tab(++indent) + "set" + Utils.capFirst(field.getJavaName())+ "(TypeFactory.create"+ fieldClass.getJavaType()+ "("+ Utils.toJavaName(field.getName())+ "));");
    writer.newLine();
    writer.write(Utils.tab(--indent) + "}");
    writer.newLine();
    writer.newLine();
    if (baseType.getValueMapping().hasPrimitiveType()) {
      writer.newLine();
      writer.write(Utils.tab(indent) + "public void set" + Utils.capFirst(field.getJavaName())+ "("+ baseType.getValueMapping().getPrimitiveType()+ " "+ Utils.toJavaName(field.getName())+ ") {");
      writer.newLine();
      writer.write(Utils.tab(++indent) + "set" + Utils.capFirst(field.getJavaName())+ "(TypeFactory.create"+ fieldClass.getJavaType()+ "("+ Utils.toJavaName(field.getName())+ "));");
      writer.newLine();
      writer.write(Utils.tab(--indent) + "}");
      writer.newLine();
      writer.newLine();
    }
  }
  writer.newLine();
  writer.write(Utils.tab(indent) + "public final void set" + Utils.capFirst(field.getJavaName())+ "("+ fieldClass.typeMapping+ " "+ Utils.toJavaName(field.getName())+ ") {");
  writer.newLine();
  writer.write(Utils.tab(++indent) + "copyCheck();");
  writer.newLine();
  writer.write(Utils.tab(indent) + "bean." + field.getJavaName()+ " = "+ Utils.toJavaName(field.getName())+ ";");
  writer.newLine();
  writer.write(Utils.tab(--indent) + "}");
  writer.newLine();
  writer.newLine();
}
