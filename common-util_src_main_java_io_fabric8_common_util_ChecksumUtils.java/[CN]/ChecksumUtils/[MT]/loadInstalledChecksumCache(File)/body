{
  Map<File,Long> answer=new HashMap<File,Long>();
  File cacheFile=new File(dir,FOLDER_CHECKSUM_CACHE);
  if (cacheFile.exists() && cacheFile.isFile()) {
    Properties properties=new Properties();
    try {
      properties.load(new FileReader(cacheFile));
    }
 catch (    IOException e) {
      LOG.warn("Failed to load checksum cache file " + cacheFile + ". "+ e,e);
    }
    Set<Map.Entry<Object,Object>> entries=properties.entrySet();
    for (    Map.Entry<Object,Object> entry : entries) {
      Object key=entry.getKey();
      if (key != null) {
        String keyText=key.toString();
        Object value=entry.getValue();
        if (value != null) {
          String valueText=value.toString();
          try {
            long number=Long.parseLong(valueText);
            answer.put(new File(dir,keyText),number);
          }
 catch (          NumberFormatException e) {
            LOG.warn("Failed to parse checksum '" + valueText + "' in "+ cacheFile+ ". "+ e,e);
          }
        }
      }
    }
  }
  return answer;
}
