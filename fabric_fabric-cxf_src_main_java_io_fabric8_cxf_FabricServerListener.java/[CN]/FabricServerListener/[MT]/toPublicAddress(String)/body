{
  try {
    String containerId=System.getProperty("karaf.name");
    if (containerId == null || containerId.trim().equals("")) {
      return address;
    }
    URI uri=new URI(address);
    int port=PublicPortMapper.getPublicPort(uri.getPort());
    String answer;
    String path=uri.getPath();
    while (path.startsWith("/")) {
      path=path.substring(1);
    }
    if (curator != null) {
      String hostname="${zk:" + containerId + "/ip}";
      answer=uri.getScheme() + "://" + hostname+ ":"+ port+ "/"+ path;
      curator.getZookeeperClient().blockUntilConnectedOrTimedOut();
      answer=ZooKeeperUtils.getSubstitutedData(curator,answer);
    }
 else {
      answer=uri.getScheme() + "://" + uri.getHost()+ ":"+ port+ "/"+ path;
    }
    return answer;
  }
 catch (  InterruptedException e) {
    LOG.warn("Could not connect to Zookeeper to get public container address");
    return address;
  }
catch (  URISyntaxException e) {
    LOG.warn("Could not map URL to a public address: " + address);
    return address;
  }
}
