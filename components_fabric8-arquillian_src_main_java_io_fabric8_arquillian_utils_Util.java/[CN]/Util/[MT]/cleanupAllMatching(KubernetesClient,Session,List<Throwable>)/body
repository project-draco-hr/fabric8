{
  for (int i=0; i < 10; i++) {
    OpenShiftClient openShiftClient=new Controller(client).getOpenShiftClientOrNull();
    String sessionNamespace=session.getNamespace();
    if (openShiftClient != null) {
      try {
        openShiftClient.deploymentConfigs().inNamespace(sessionNamespace).delete();
      }
 catch (      KubernetesClientException e) {
        errors.add(e);
      }
      try {
        openShiftClient.routes().inNamespace(sessionNamespace).delete();
      }
 catch (      KubernetesClientException e) {
        errors.add(e);
      }
    }
    try {
      client.extensions().deployments().inNamespace(sessionNamespace).delete();
    }
 catch (    KubernetesClientException e) {
      errors.add(e);
    }
    try {
      client.extensions().replicaSets().inNamespace(sessionNamespace).delete();
    }
 catch (    KubernetesClientException e) {
      errors.add(e);
    }
    try {
      client.replicationControllers().inNamespace(sessionNamespace).delete();
    }
 catch (    KubernetesClientException e) {
      errors.add(e);
    }
    try {
      client.pods().inNamespace(sessionNamespace).delete();
    }
 catch (    KubernetesClientException e) {
      errors.add(e);
    }
    try {
      client.extensions().ingresses().inNamespace(sessionNamespace).delete();
    }
 catch (    KubernetesClientException e) {
      errors.add(e);
    }
    try {
      client.services().inNamespace(sessionNamespace).delete();
    }
 catch (    KubernetesClientException e) {
      errors.add(e);
    }
    try {
      client.securityContextConstraints().withName(sessionNamespace).delete();
    }
 catch (    KubernetesClientException e) {
      errors.add(e);
    }
    List<Pod> filteredPods=client.pods().inNamespace(sessionNamespace).list().getItems();
    if (filteredPods.isEmpty()) {
      return;
    }
 else {
      try {
        Thread.sleep(1000);
      }
 catch (      InterruptedException e) {
        e.printStackTrace();
      }
    }
  }
}
