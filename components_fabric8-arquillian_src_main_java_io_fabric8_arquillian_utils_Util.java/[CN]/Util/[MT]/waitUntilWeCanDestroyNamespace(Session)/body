{
  final Logger log=session.getLogger();
  String confirmDestroy=Systems.getEnvVarOrSystemProperty(Constants.FABRIC8_NAMESPACE_CONFIRM_DESTROY,"false");
  if (Objects.equal(confirmDestroy,"true")) {
    showErrorsBeforePause(session);
    System.out.println();
    System.out.println("Waiting to destroy the namespace.");
    System.out.println("Please enter [Q] to terminate the namespace.");
    try (BufferedReader reader=new BufferedReader(new InputStreamReader(System.in))){
      while (true) {
        String line=reader.readLine();
        if (line == null) {
          break;
        }
        line=line.trim();
        if (line.equals("Q")) {
          break;
        }
      }
    }
 catch (    IOException e) {
      log.error("Failed to read user input: " + e);
    }
  }
 else {
    String timeoutText=Systems.getEnvVarOrSystemProperty(Constants.FABRIC8_NAMESPACE_DESTROY_TIMEOUT,"0");
    Long timeout=null;
    if (Strings.isNotBlank(timeoutText)) {
      try {
        timeout=Long.parseLong(timeoutText);
      }
 catch (      NumberFormatException e) {
        log.warn("Failed to parse timeout value '" + timeoutText + "' for $Constants.FABRIC8_NAMESPACE_DESTROY_TIMEOUT. "+ e);
      }
    }
    if (timeout != null && timeout > 0L) {
      showErrorsBeforePause(session);
      System.out.println();
      System.out.println("Sleeping for " + timeout + " seconds until destroying the namespace");
      try {
        Thread.sleep(timeout * 1000);
      }
 catch (      InterruptedException e) {
        log.info("Interupted sleeping to GC the namespace: " + e);
      }
    }
  }
  System.out.println("Now destroying the namespace");
}
