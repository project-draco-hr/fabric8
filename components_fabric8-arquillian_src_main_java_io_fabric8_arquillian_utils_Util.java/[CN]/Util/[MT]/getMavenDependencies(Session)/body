{
  List<String> dependencies=new ArrayList<>();
  try {
    File[] files=Maven.resolver().loadPomFromFile("pom.xml").importTestDependencies().resolve().withoutTransitivity().asFile();
    for (    File f : files) {
      if (f.getName().endsWith("jar") && hasKubernetesJson(f)) {
        Path dir=Files.createTempDirectory(session.getId());
        try (FileInputStream fis=new FileInputStream(f);JarInputStream jis=new JarInputStream(fis)){
          Zips.unzip(new FileInputStream(f),dir.toFile());
          File jsonPath=dir.resolve(DEFAULT_CONFIG_FILE_NAME).toFile();
          if (jsonPath.exists()) {
            dependencies.add(jsonPath.toURI().toString());
          }
        }
       }
 else       if (f.getName().endsWith(".json")) {
        dependencies.add(f.toURI().toString());
      }
    }
  }
 catch (  Exception e) {
    session.getLogger().warn("Skipping maven project dependencies. Caused by:" + e.getMessage());
  }
  return dependencies;
}
