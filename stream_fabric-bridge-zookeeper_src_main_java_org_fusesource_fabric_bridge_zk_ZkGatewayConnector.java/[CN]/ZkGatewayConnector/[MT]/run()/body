{
  if (!connected) {
    LOG.warn("Gateway is not connected to Fabric Zookeeper service, will retry after " + this.updateInterval + " seconds");
    return;
  }
  Container[] containers;
  try {
    containers=gatewayProfile.getAssociatedContainers();
  }
 catch (  FabricException e) {
    String msg="Error getting Containers from Fabric: " + e.getMessage();
    LOG.error(msg,e);
    throw new IllegalStateException(msg,e);
  }
  if (containers.length == 0) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("No BridgeConnector containers found");
    }
  }
  for (  Container container : containers) {
    final String containerId=container.getId();
    try {
      RemoteBridge remoteBridge=ZkConfigHelper.getBridgeConfig(curator,container,applicationContext);
      RemoteBridge oldRemoteBridge=containerBridgeMap.get(containerId);
      if (remoteBridge != null) {
        if (oldRemoteBridge != null) {
          if (!oldRemoteBridge.equals(remoteBridge)) {
            LOG.info("Refreshing outbound connector for " + containerId);
            containerBridgeMap.remove(containerId);
            removeRemoteBridge(oldRemoteBridge);
            addRemoteBridge(remoteBridge);
            containerBridgeMap.put(containerId,remoteBridge);
          }
        }
 else {
          try {
            LOG.info("Found Bridge Configuration for " + containerId);
            addRemoteBridge(remoteBridge);
            containerBridgeMap.put(containerId,remoteBridge);
            LOG.info("Added outbound connector for " + containerId);
          }
 catch (          Exception ex) {
            LOG.error("Error adding outbound conncetor for [" + containerId + "] : "+ ex.getMessage(),ex);
          }
        }
      }
 else {
        if (oldRemoteBridge != null) {
          LOG.info("Removing outbound connector for " + containerId);
          containerBridgeMap.remove(containerId);
          removeRemoteBridge(oldRemoteBridge);
        }
 else {
          LOG.warn("Container " + containerId + " uses Profile ["+ gatewayProfile.getId()+ "] but has not yet registered its Bridge Configuration");
        }
      }
    }
 catch (    Exception ex) {
      LOG.error("Error getting Bridge Configuration for container [" + containerId + "]: "+ ex.getMessage(),ex);
    }
  }
}
