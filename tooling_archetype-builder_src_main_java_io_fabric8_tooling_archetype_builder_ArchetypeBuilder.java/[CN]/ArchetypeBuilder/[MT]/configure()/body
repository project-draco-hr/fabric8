{
  catalogXmlFile.getParentFile().mkdirs();
  LOG.info("Writing catalog: " + catalogXmlFile);
  printWriter=new PrintWriter(new OutputStreamWriter(new FileOutputStream(catalogXmlFile),"UTF-8"));
  printWriter.println("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + "<archetype-catalog xmlns=\"http://maven.apache.org/plugins/maven-archetype-plugin/archetype-catalog/1.0.0\"\n" + indent + indent+ "xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"+ indent+ indent+ "xsi:schemaLocation=\"http://maven.apache.org/plugins/maven-archetype-plugin/archetype-catalog/1.0.0 http://maven.apache.org/xsd/archetype-catalog-1.0.0.xsd\">\n"+ indent+ "<archetypes>");
  if (bomFile != null && bomFile.exists()) {
    String text=FileUtils.readFileToString(bomFile);
    Document doc=archetypeUtils.parseXml(new InputSource(new StringReader(text)));
    Element root=doc.getDocumentElement();
    NodeList propertyElements=root.getElementsByTagName("properties");
    if (propertyElements.getLength() > 0) {
      Element propertyElement=(Element)propertyElements.item(0);
      NodeList children=propertyElement.getChildNodes();
      for (int cn=0; cn < children.getLength(); cn++) {
        Node e=children.item(cn);
        if (e instanceof Element) {
          versionProperties.put(e.getNodeName(),e.getTextContent());
        }
      }
    }
    if (LOG.isDebugEnabled()) {
      for (      Map.Entry<String,String> entry : versionProperties.entrySet()) {
        LOG.debug("bom property: {}={}",entry.getKey(),entry.getValue());
      }
    }
  }
}
