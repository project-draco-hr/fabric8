{
  CreateSshContainerOptions.Builder builder=CreateSshContainerOptions.builder();
  FabricRequirements requirements=request.getFabricRequirements();
  ProfileRequirements profileRequirements=request.getProfileRequirements();
  SshScalingRequirements sshScalingRequirements=profileRequirements.getSshScalingRequirements();
  List<SshHostConfiguration> sshHostConfigurations=filterHosts(requirements,sshScalingRequirements);
  SshHostConfiguration sshHostConfig=Filters.matchRandomElement(sshHostConfigurations);
  if (sshHostConfig == null) {
    LOG.warn("Could not create version " + request.getVersion() + " profile "+ request.getProfile()+ " as no matching hosts could be found for "+ sshScalingRequirements);
    return null;
  }
  builder.configure(sshHostConfig,requirements,profileRequirements,containerName);
  String zookeeperUrl=fabricService.getZookeeperUrl();
  String zookeeperPassword=fabricService.getZookeeperPassword();
  if (builder.getProxyUri() == null) {
    builder.proxyUri(fabricService.getMavenRepoURI());
  }
  return builder.zookeeperUrl(zookeeperUrl).zookeeperPassword(zookeeperPassword);
}
