{
  URL artifactUrl=parameters.getUrl();
  File libDir=new File(installDir,"lib");
  libDir.mkdirs();
  Map<String,Pair<File,File>> copyFiles=new HashMap<String,Pair<File,File>>();
  if (artifactUrl != null) {
    copyArtifactAndDependencies(config,id,installDir,parameters,libDir,copyFiles);
  }
  copyJarFiles(id,installDir,parameters,libDir,copyFiles);
  Set<Map.Entry<String,Pair<File,File>>> entries=copyFiles.entrySet();
  Map<File,Long> checksums=ChecksumUtils.loadInstalledChecksumCache(libDir);
  Set<File> filesToRemove=new HashSet<File>();
  filesToRemove.addAll(checksums.keySet());
  for (  Map.Entry<String,Pair<File,File>> entry : entries) {
    String location=entry.getKey();
    Pair<File,File> pair=entry.getValue();
    File source=pair.getFirst();
    File dest=pair.getSecond();
    long checksum=ChecksumUtils.checksumFile(source);
    filesToRemove.remove(dest);
    checksums.put(source,checksum);
  }
  for (  File fileToRemove : filesToRemove) {
    LOG.info("Removing: " + fileToRemove);
    checksums.remove(fileToRemove);
    installContext.addRestartReason(fileToRemove);
    fileToRemove.delete();
  }
  ChecksumUtils.saveInstalledChecksumCache(libDir,checksums);
  for (  Map.Entry<String,Pair<File,File>> entry : entries) {
    String location=entry.getKey();
    Pair<File,File> pair=entry.getValue();
    File sourceFile=pair.getFirst();
    File destFile=pair.getSecond();
    FileChangeInfo oldChangeInfo=installContext.createChangeInfo(destFile);
    Files.copy(sourceFile,destFile);
    installContext.onDeploymentFileWrite(location,destFile,oldChangeInfo,true);
  }
}
