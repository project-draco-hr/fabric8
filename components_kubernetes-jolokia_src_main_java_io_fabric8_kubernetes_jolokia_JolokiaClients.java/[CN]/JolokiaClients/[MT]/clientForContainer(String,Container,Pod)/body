{
  if (container != null) {
    List<ContainerPort> ports=container.getPorts();
    for (    ContainerPort port : ports) {
      Integer containerPort=port.getContainerPort();
      if (containerPort != null) {
        String name=port.getName();
        if (containerPort == 8778 || (Objects.equals("jolokia",name) && containerPort.intValue() > 0)) {
          if (useKubeProxy) {
            URL masterUrl=getKubernetes().getMasterUrl();
            ObjectMeta metadata=pod.getMetadata();
            String namespace=metadata.getNamespace();
            String podName=metadata.getName();
            String jolokiaUrl=URLUtils.join(masterUrl.toString(),"/api/v1/namespaces/" + namespace + "/pods/"+ podName+ ":8778/proxy/jolokia/");
            System.out.println("Using jolokia URL: " + jolokiaUrl);
            return createJolokiaClient(container,jolokiaUrl);
          }
          PodStatus currentState=pod.getStatus();
          String podIP=currentState.getPodIP();
          if (Strings.isNotBlank(podIP)) {
            return createJolokiaClientFromHostAndPort(container,podIP,containerPort);
          }
          Integer hostPort=port.getHostPort();
          if (hostPort != null && hasDocker(pod)) {
            if (host.equals("localhost") || host.equals("127.0.0.1")) {
              String dockerIp=getDockerIp();
              if (Strings.isNotBlank(dockerIp)) {
                host=dockerIp;
              }
            }
          }
          if (Strings.isNotBlank(host)) {
            return createJolokiaClientFromHostAndPort(container,host,hostPort);
          }
        }
      }
    }
  }
  return null;
}
