{
  writer.newLine();
  writer.write(Utils.tab(indent) + "public boolean equals(Object o){");
  writer.newLine();
  writer.write(Utils.tab(++indent) + "return bean().equals(o);");
  writer.newLine();
  writer.write(Utils.tab(--indent) + "}");
  writer.newLine();
  writer.newLine();
  writer.write(Utils.tab(indent) + "public boolean equals(" + typeMapping+ " o){");
  writer.newLine();
  writer.write(Utils.tab(++indent) + "return bean().equals(o);");
  writer.newLine();
  writer.write(Utils.tab(--indent) + "}");
  writer.newLine();
  writer.newLine();
  writer.write(Utils.tab(indent) + "public int hashCode() {");
  writer.newLine();
  writer.write(Utils.tab(++indent) + "return bean().hashCode();");
  writer.newLine();
  writer.write(Utils.tab(--indent) + "}");
  writer.newLine();
  if (isPrimitive() && !isList() && !isMap()&& !getJavaType().startsWith("AmqpNull")) {
    writer.write(Utils.tab(indent) + "public int compareTo(" + getJavaType()+ " o) {");
    writer.newLine();
    writer.write(Utils.tab(++indent) + " return getValue().compareTo(o.getValue());");
    writer.newLine();
    writer.write(Utils.tab(--indent) + "}");
    writer.newLine();
  }
  return indent;
}
