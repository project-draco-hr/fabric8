{
  writer.newLine();
  if (!isList() && !isMap() && !getJavaType().startsWith("AmqpNull")) {
    writer.write(Utils.tab(indent++) + "public static class " + bufferMapping.getShortName()+ " implements "+ typeMapping+ ", AmqpBuffer<"+ getValueMapping()+ ">, Comparable<"+ typeMapping+ ">, AmqpPrimitive<"+ getValueMapping()+ "> {");
  }
 else {
    writer.write(Utils.tab(indent++) + "public static class " + bufferMapping.getShortName()+ " implements "+ typeMapping+ ", AmqpBuffer< "+ getValueMapping()+ "> {");
  }
  writer.newLine();
  writer.newLine();
  writer.write(Utils.tab(indent) + "private " + beanMapping.getShortName()+ " bean;");
  writer.newLine();
  writer.write(Utils.tab(indent) + "protected Encoded<" + valueMapping+ "> encoded;");
  writer.newLine();
  if (isList() || isMap()) {
    writer.write(Utils.tab(indent) + "protected boolean dirty = false;");
    writer.newLine();
  }
  writer.newLine();
  writer.write(Utils.tab(indent) + "protected " + bufferMapping.getShortName()+ "() {");
  writer.newLine();
  writer.write(Utils.tab(indent) + "}");
  writer.newLine();
  writer.newLine();
  writer.write(Utils.tab(indent) + "protected " + bufferMapping.getShortName()+ "(Encoded<"+ getValueMapping()+ "> encoded) {");
  writer.newLine();
  writer.write(Utils.tab(++indent) + "this.encoded = encoded;");
  writer.newLine();
  writer.write(Utils.tab(--indent) + "}");
  writer.newLine();
  writer.newLine();
  writer.write(Utils.tab(indent) + "public final Encoded<" + getValueMapping()+ "> getEncoded() throws AmqpEncodingError{");
  writer.newLine();
  writer.write(Utils.tab(++indent) + "return encoded;");
  writer.newLine();
  writer.write(Utils.tab(--indent) + "}");
  writer.newLine();
  writer.newLine();
  writer.write(Utils.tab(indent) + "public final void marshal(DataOutput out, AmqpMarshaller marshaller) throws IOException, AmqpEncodingError{");
  writer.newLine();
  if (isList() || isMap()) {
    writer.write(Utils.tab(++indent) + "if (!dirty) {");
    writer.newLine();
    writer.write(Utils.tab(++indent) + "encoded.marshal(out);");
    writer.newLine();
    writer.write(Utils.tab(--indent) + "} else {");
    writer.newLine();
    writer.write(Utils.tab(++indent) + "bean().marshal(out, marshaller);");
    writer.newLine();
    writer.write(Utils.tab(indent) + "this.encoded = bean().getBuffer(marshaller).getEncoded();");
    writer.newLine();
    writer.write(Utils.tab(indent) + "dirty = false;");
    writer.newLine();
    writer.write(Utils.tab(--indent) + "}");
    writer.newLine();
  }
 else {
    writer.write(Utils.tab(++indent) + "encoded.marshal(out);");
    writer.newLine();
  }
  writer.write(Utils.tab(--indent) + "}");
  writer.newLine();
  return indent;
}
