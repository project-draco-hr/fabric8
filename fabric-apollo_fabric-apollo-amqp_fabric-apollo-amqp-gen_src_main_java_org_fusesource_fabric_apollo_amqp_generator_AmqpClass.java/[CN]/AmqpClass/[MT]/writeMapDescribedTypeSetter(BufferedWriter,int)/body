{
  writer.newLine();
  writer.write(Utils.tab(indent) + "public void put(" + getMapKeyType()+ " key, "+ getMapValueType()+ " value) {");
  writer.newLine();
  writer.write(Utils.tab(++indent) + "if ( key == null ) {");
  writer.newLine();
  writer.write(Utils.tab(++indent) + "return;");
  writer.newLine();
  writer.write(Utils.tab(--indent) + "}");
  writer.newLine();
  for (  AmqpField field : fields.values()) {
    AmqpClass fieldClass=field.resolveAmqpFieldType();
    TypeRegistry.JavaTypeMapping valueType=fieldClass.getTypeMapping();
    writer.newLine();
    writer.write(Utils.tab(indent) + "if ( key.equals(" + typeMapping+ "."+ Utils.toJavaConstant(field.getName())+ "_KEY)) {");
    writer.newLine();
    if (fieldClass.isEnumType()) {
      writer.write(Utils.tab(++indent) + field.getJavaName() + " = "+ valueType.getJavaType()+ ".get(("+ fieldClass.resolveRestrictedType().getJavaType()+ ")value);");
    }
 else {
      writer.write(Utils.tab(++indent) + field.getJavaName() + " = ("+ valueType+ ") value;");
    }
    writer.newLine();
    writer.write(Utils.tab(--indent) + "}");
    writer.newLine();
  }
  writer.write(Utils.tab(--indent) + "}");
  writer.newLine();
}
