{
  TypeRegistry registry=TypeRegistry.instance();
  for (  Byte key : registry.getPrimitiveFormatCodeMap().keySet()) {
    Class clazz=registry.getPrimitiveFormatCodeMap().get(key);
  }
  for (  Long key : registry.getFormatCodeMap().keySet()) {
    Class clazz=registry.getFormatCodeMap().get(key);
  }
  for (  Buffer key : registry.getSymbolicCodeMap().keySet()) {
    Class clazz=registry.getSymbolicCodeMap().get(key);
  }
  assertTrue(registry.getPrimitiveFormatCodeMap().size() > 0);
  assertTrue(registry.getFormatCodeMap().size() > 0);
  assertTrue(registry.getSymbolicCodeMap().size() > 0);
  AmqpType type=(AmqpType)registry.getSymbolicCodeMap().get(new AsciiBuffer("amqp:header:list")).newInstance();
  assertSame("Received type does not match expected type!",type.getClass(),Header.class);
}
