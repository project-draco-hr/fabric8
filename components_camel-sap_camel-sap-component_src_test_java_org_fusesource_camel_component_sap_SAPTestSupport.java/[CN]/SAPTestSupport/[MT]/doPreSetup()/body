{
  super.doPreSetup();
  mockDestination=mock(JCoDestination.class);
  mockRepository=mock(JCoRepository.class);
  mockFunction=mock(JCoFunction.class);
  mockFunctionTemplate=mock(JCoFunctionTemplate.class);
  mockRequest=mock(JCoRequest.class);
  mockResponse=mock(JCoResponse.class);
  mockImportParameterList=mock(JCoParameterList.class,"ImportParameterList");
  mockChangingParameterList=mock(JCoParameterList.class,"ChangingParameterList");
  mockExportParameterList=mock(JCoParameterList.class,"ExportParameterList");
  mockTableParameterList=mock(JCoParameterList.class,"TableParameterList");
  mockEmptyParameterListFieldIterator=mock(JCoFieldIterator.class,"EmptyParameterListFieldIterator");
  mockParameterListFieldIterator=mock(JCoFieldIterator.class,"ParameterListFieldIterator");
  mockTableParameterListFieldIterator=mock(JCoFieldIterator.class,"TableParameterListFieldIterator");
  mockParameterListCharField=mock(JCoField.class,"ParameterListCharField");
  mockParameterListNumField=mock(JCoField.class,"ParameterListNumField");
  mockParameterListIntField=mock(JCoField.class,"ParameterListIntField");
  mockParameterListFloatField=mock(JCoField.class,"ParameterListFloatField");
  mockParameterListBCDField=mock(JCoField.class,"ParameterListBCDField");
  mockParameterListBinaryField=mock(JCoField.class,"ParameterListBinaryField");
  mockParameterListBinaryArrayField=mock(JCoField.class,"ParameterListBinaryArrayField");
  mockParameterListDateField=mock(JCoField.class,"ParameterListDateField");
  mockParameterListTimeField=mock(JCoField.class,"ParameterListTimeField");
  mockParameterListStringField=mock(JCoField.class,"ParameterListStringField");
  mockParameterListStructureField=mock(JCoField.class,"ParameterListStructureField");
  mockParameterListTableField=mock(JCoField.class,"ParameterListTableField");
  mockStructure=mock(JCoStructure.class,"Structure");
  mockStructureFieldIterator=mock(JCoFieldIterator.class,"StructureFieldIterator");
  mockTableFieldIterator=mock(JCoFieldIterator.class,"TableFieldIterator");
  mockCharField=mock(JCoField.class,"CharField");
  mockNumField=mock(JCoField.class,"NumField");
  mockIntField=mock(JCoField.class,"IntField");
  mockFloatField=mock(JCoField.class,"FloatField");
  mockBCDField=mock(JCoField.class,"BCDField");
  mockBinaryField=mock(JCoField.class,"BinaryField");
  mockBinaryArrayField=mock(JCoField.class,"BinaryArrayField");
  mockDateField=mock(JCoField.class,"DateField");
  mockTimeField=mock(JCoField.class,"TimeField");
  mockStringField=mock(JCoField.class,"StringField");
  JCoTable mockTable=mock(JCoTable.class,"Table");
  mockImportParameterListMetaData=mock(JCoListMetaData.class,"ImportParameterListMetaData");
  mockChangingParameterListMetaData=mock(JCoListMetaData.class,"ChangingParameterListMetaData");
  mockTableParameterListMetaData=mock(JCoListMetaData.class,"TableParameterListMetaData");
  mockExportParameterListMetaData=mock(JCoListMetaData.class,"ExportParameterListMetaData");
  mockStructureMetaData=mock(JCoRecordMetaData.class,"StructureMetaData");
  when(mockDestination.getRepository()).thenReturn(mockRepository);
  when(mockRepository.getFunction(FUNCTION_MODULE_NAME)).thenReturn(mockFunction);
  when(mockRepository.getFunctionTemplate(FUNCTION_MODULE_NAME)).thenReturn(mockFunctionTemplate);
  when(mockRepository.getName()).thenReturn(REPOSITORY_NAME);
  when(mockFunction.getImportParameterList()).thenReturn(mockImportParameterList);
  when(mockFunction.getChangingParameterList()).thenReturn(mockChangingParameterList);
  when(mockFunction.getExportParameterList()).thenReturn(mockExportParameterList);
  when(mockFunction.getTableParameterList()).thenReturn(mockTableParameterList);
  when(mockFunctionTemplate.getImportParameterList()).thenReturn(mockImportParameterListMetaData);
  when(mockFunctionTemplate.getChangingParameterList()).thenReturn(mockChangingParameterListMetaData);
  when(mockFunctionTemplate.getExportParameterList()).thenReturn(mockExportParameterListMetaData);
  when(mockFunctionTemplate.getTableParameterList()).thenReturn(mockTableParameterListMetaData);
  when(mockRequest.getFieldIterator()).thenReturn(mockParameterListFieldIterator);
  when(mockResponse.getFieldIterator()).thenReturn(mockParameterListFieldIterator);
  when(mockImportParameterList.getFieldIterator()).thenReturn(mockEmptyParameterListFieldIterator);
  when(mockChangingParameterList.getFieldIterator()).thenReturn(mockParameterListFieldIterator);
  when(mockExportParameterList.getFieldIterator()).thenReturn(mockEmptyParameterListFieldIterator);
  when(mockTableParameterList.getFieldIterator()).thenReturn(mockTableParameterListFieldIterator);
  when(mockEmptyParameterListFieldIterator.hasNextField()).thenReturn(false);
  when(mockParameterListFieldIterator.hasNextField()).thenReturn(true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,false);
  when(mockParameterListFieldIterator.nextField()).thenReturn(mockParameterListCharField,mockParameterListNumField,mockParameterListIntField,mockParameterListFloatField,mockParameterListBCDField,mockParameterListBinaryField,mockParameterListBinaryArrayField,mockParameterListDateField,mockParameterListTimeField,mockParameterListStringField,mockParameterListStructureField,mockParameterListCharField,mockParameterListNumField,mockParameterListIntField,mockParameterListFloatField,mockParameterListBCDField,mockParameterListBinaryField,mockParameterListBinaryArrayField,mockParameterListDateField,mockParameterListTimeField,mockParameterListStringField,mockParameterListStructureField).thenThrow(new NoSuchElementException());
  when(mockTableParameterListFieldIterator.hasNextField()).thenReturn(true,false,true,false);
  when(mockTableParameterListFieldIterator.nextField()).thenReturn(mockParameterListTableField,mockParameterListTableField).thenThrow(new NoSuchElementException());
  when(mockStructureFieldIterator.hasNextField()).thenReturn(true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,false);
  when(mockStructureFieldIterator.nextField()).thenReturn(mockCharField,mockNumField,mockIntField,mockFloatField,mockBCDField,mockBinaryField,mockBinaryArrayField,mockDateField,mockTimeField,mockStringField,mockCharField,mockNumField,mockIntField,mockFloatField,mockBCDField,mockBinaryField,mockBinaryArrayField,mockDateField,mockTimeField,mockStringField).thenThrow(new NoSuchElementException());
  when(mockTableFieldIterator.hasNextField()).thenReturn(true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,false);
  when(mockTableFieldIterator.nextField()).thenReturn(mockCharField,mockNumField,mockIntField,mockFloatField,mockBCDField,mockBinaryField,mockBinaryArrayField,mockDateField,mockTimeField,mockStringField,mockCharField,mockNumField,mockIntField,mockFloatField,mockBCDField,mockBinaryField,mockBinaryArrayField,mockDateField,mockTimeField,mockStringField).thenThrow(new NoSuchElementException());
  when(mockParameterListCharField.getName()).thenReturn(PARAM_LIST_CHAR_PARAM);
  when(mockParameterListCharField.getValue()).thenReturn(CHAR_PARAM_OUT_VAL);
  when(mockParameterListNumField.getName()).thenReturn(PARAM_LIST_NUM_PARAM);
  when(mockParameterListNumField.getValue()).thenReturn(NUM_PARAM_OUT_VAL);
  when(mockParameterListIntField.getName()).thenReturn(PARAM_LIST_INT_PARAM);
  when(mockParameterListIntField.getValue()).thenReturn(INT_PARAM_OUT_VAL);
  when(mockParameterListFloatField.getName()).thenReturn(PARAM_LIST_FLOAT_PARAM);
  when(mockParameterListFloatField.getValue()).thenReturn(FLOAT_PARAM_OUT_VAL);
  when(mockParameterListBCDField.getName()).thenReturn(PARAM_LIST_BCD_PARAM);
  when(mockParameterListBCDField.getValue()).thenReturn(BCD_PARAM_OUT_VAL);
  when(mockParameterListBinaryField.getName()).thenReturn(PARAM_LIST_BINARY_PARAM);
  when(mockParameterListBinaryField.getValue()).thenReturn(BINARY_PARAM_OUT_VAL);
  when(mockParameterListBinaryArrayField.getName()).thenReturn(PARAM_LIST_BINARY_ARRAY_PARAM);
  when(mockParameterListBinaryArrayField.getValue()).thenReturn(BINARY_ARRAY_PARAM_OUT_VAL);
  when(mockParameterListDateField.getName()).thenReturn(PARAM_LIST_DATE_PARAM);
  when(mockParameterListDateField.getValue()).thenReturn(DATE_PARAM_OUT_VAL);
  when(mockParameterListTimeField.getName()).thenReturn(PARAM_LIST_TIME_PARAM);
  when(mockParameterListTimeField.getValue()).thenReturn(TIME_PARAM_OUT_VAL);
  when(mockParameterListStringField.getName()).thenReturn(PARAM_LIST_STRING_PARAM);
  when(mockParameterListStringField.getValue()).thenReturn(STRING_PARAM_OUT_VAL);
  when(mockParameterListStructureField.getName()).thenReturn(PARAM_LIST_STRUCTURE_PARAM);
  when(mockParameterListStructureField.isStructure()).thenReturn(true);
  when(mockParameterListStructureField.getStructure()).thenReturn(mockStructure);
  when(mockParameterListTableField.getName()).thenReturn(PARAM_LIST_TABLE_PARAM);
  when(mockParameterListTableField.isTable()).thenReturn(true);
  when(mockParameterListTableField.getTable()).thenReturn(mockTable);
  when(mockCharField.getName()).thenReturn(CHAR_PARAM);
  when(mockCharField.getValue()).thenReturn(CHAR_PARAM_OUT_VAL);
  when(mockNumField.getName()).thenReturn(NUM_PARAM);
  when(mockNumField.getValue()).thenReturn(NUM_PARAM_OUT_VAL);
  when(mockIntField.getName()).thenReturn(INT_PARAM);
  when(mockIntField.getValue()).thenReturn(INT_PARAM_OUT_VAL);
  when(mockFloatField.getName()).thenReturn(FLOAT_PARAM);
  when(mockFloatField.getValue()).thenReturn(FLOAT_PARAM_OUT_VAL);
  when(mockBCDField.getName()).thenReturn(BCD_PARAM);
  when(mockBCDField.getValue()).thenReturn(BCD_PARAM_OUT_VAL);
  when(mockBinaryField.getName()).thenReturn(BINARY_PARAM);
  when(mockBinaryField.getValue()).thenReturn(BINARY_PARAM_OUT_VAL);
  when(mockBinaryArrayField.getName()).thenReturn(BINARY_ARRAY_PARAM);
  when(mockBinaryArrayField.getValue()).thenReturn(BINARY_ARRAY_PARAM_OUT_VAL);
  when(mockDateField.getName()).thenReturn(DATE_PARAM);
  when(mockDateField.getValue()).thenReturn(DATE_PARAM_OUT_VAL);
  when(mockTimeField.getName()).thenReturn(TIME_PARAM);
  when(mockTimeField.getValue()).thenReturn(TIME_PARAM_OUT_VAL);
  when(mockStringField.getName()).thenReturn(STRING_PARAM);
  when(mockStringField.getValue()).thenReturn(STRING_PARAM_OUT_VAL);
  when(mockStructure.getFieldIterator()).thenReturn(mockStructureFieldIterator);
  when(mockTable.getNumRows()).thenReturn(1);
  when(mockTable.getFieldIterator()).thenReturn(mockTableFieldIterator);
  when(mockStructureMetaData.getName()).thenReturn(STRUCTURE_TYPE_NAME);
}
