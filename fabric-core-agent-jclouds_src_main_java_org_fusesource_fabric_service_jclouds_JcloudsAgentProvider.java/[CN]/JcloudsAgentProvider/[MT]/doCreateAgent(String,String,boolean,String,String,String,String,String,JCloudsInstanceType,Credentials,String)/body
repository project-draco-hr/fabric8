{
  ComputeService computeService=computeServiceMap.get(providerName);
  if (computeService == null) {
    throw new FabricException("Not compute Service found for provider:" + providerName);
  }
  TemplateBuilder builder=computeService.templateBuilder();
  builder.any();
switch (instanceType) {
case Smallest:
    builder.smallest();
  break;
case Biggest:
builder.biggest();
break;
case Fastest:
builder.fastest();
}
if (locationId != null) {
builder.locationId(locationId);
}
if (imageId != null) {
builder.imageId(imageId);
}
if (hardwareId != null) {
builder.hardwareId(hardwareId);
}
Set<? extends NodeMetadata> metadatas=null;
if (user != null && credentials == null) {
credentials=new Credentials(user,null);
}
String script=buildStartupScript(mavenProxy.getAddress(),name,zooKeeperUrl,debugAgent);
metadatas=computeService.createNodesInGroup(group,1,builder.build());
if (metadatas != null) {
for (NodeMetadata nodeMetadata : metadatas) {
String id=nodeMetadata.getId();
if (credentials != null) {
computeService.runScriptOnNode(id,script,RunScriptOptions.Builder.overrideCredentialsWith(credentials).runAsRoot(false));
}
 else {
computeService.runScriptOnNode(id,script);
}
}
}
}
