{
switch (event.getType()) {
case CHILD_ADDED:
{
      EndpointDescription endpoint=Utils.getEndpointDescription(new String(event.getData().getData()));
      remoteEndpoints.addCapability(endpoint);
      for (      Map.Entry<ListenerInfo,SimpleFilter> entry : listeners.entrySet()) {
        if (CapabilitySet.matches(endpoint,entry.getValue())) {
          doImportService(endpoint,entry.getKey());
        }
      }
    }
  break;
case CHILD_UPDATED:
{
  EndpointDescription endpoint=Utils.getEndpointDescription(new String(event.getData().getData()));
  Map<Long,ImportRegistration> registrations=importedServices.get(endpoint);
  if (registrations != null) {
    for (    ImportRegistration reg : registrations.values()) {
      reg.importedService.setProperties(new Hashtable<String,Object>(endpoint.getProperties()));
    }
  }
}
break;
case CHILD_REMOVED:
{
EndpointDescription endpoint=Utils.getEndpointDescription(new String(event.getData().getData()));
remoteEndpoints.removeCapability(endpoint);
Map<Long,ImportRegistration> registrations=importedServices.remove(endpoint);
if (registrations != null) {
for (ImportRegistration reg : registrations.values()) {
  reg.getImportedService().unregister();
}
}
}
break;
}
}
