{
  LOGGER.debug("\tmode: {}",mode);
  LOGGER.debug("\tinterval: {}",interval);
  LOGGER.debug("\thash: {}",hash);
  LOGGER.debug("\tsegment: {}",segment);
  int seg=segment.isEmpty() ? 0 : Integer.parseInt(segment);
  ClientRequest req=new ClientRequest(hash);
  Query query;
  if ("count".equals(mode)) {
    query=new DateHistogram(req.getSearch(),req.getFrom(),req.getTo(),interval);
  }
 else   if ("mean".equals(mode)) {
    query=new StatsHistogram(req.getSearch(),req.getFrom(),req.getTo(),req.getAnalyze(),interval);
  }
 else {
    throw new IllegalArgumentException("unsupported mode " + mode);
  }
  LOGGER.debug("\tclient: {}",req);
  LOGGER.debug("\tquery: {}",query);
  List<String> indices=Kelastic.getIndices(req.getFrom(),req.getTo());
  ObjectNode result=kelasticSegment(query,indices,seg);
  return Json.serialize(result);
}
