{
  EventCache<Number> cache=this.eventCache;
  if (value != null && cache != null) {
    cache.add(value);
    if (type.equals(StatisticsType.RATE)) {
      calculateRate(statsNode);
    }
 else {
      List<Number> list=this.eventCache.getWindow();
      DescriptiveStatistics descriptiveStatistics=new DescriptiveStatistics();
      if (list != null && !list.isEmpty()) {
        for (        Number number : list) {
          descriptiveStatistics.addValue(number.doubleValue());
        }
switch (type) {
case MEAN:
          statsNode.put("mean",descriptiveStatistics.getMean());
        break;
case GEOMETRIC_MEAN:
      statsNode.put("gemetric mean",descriptiveStatistics.getGeometricMean());
    break;
case STDDEV:
  statsNode.put("std-dev",descriptiveStatistics.getStandardDeviation());
break;
case MIN:
statsNode.put("minimum",descriptiveStatistics.getMin());
break;
case MAX:
statsNode.put("maximum",descriptiveStatistics.getMax());
break;
case SKEWNESS:
statsNode.put("skewness",descriptiveStatistics.getSkewness());
break;
case KUTOSIS:
statsNode.put("kurtosis",descriptiveStatistics.getKurtosis());
break;
case VARIANCE:
statsNode.put("variance",descriptiveStatistics.getVariance());
break;
case COUNT:
statsNode.put("count",list.size());
default :
statsNode.put("number",descriptiveStatistics.getN());
statsNode.put("mean",descriptiveStatistics.getMean());
statsNode.put("gemetric mean",descriptiveStatistics.getGeometricMean());
statsNode.put("minimum",descriptiveStatistics.getMin());
statsNode.put("maximum",descriptiveStatistics.getMax());
statsNode.put("std-dev",descriptiveStatistics.getStandardDeviation());
statsNode.put("median",descriptiveStatistics.getPercentile(50));
statsNode.put("skewness",descriptiveStatistics.getSkewness());
statsNode.put("kurtosis",descriptiveStatistics.getKurtosis());
statsNode.put("variance",descriptiveStatistics.getVariance());
calculateRate(statsNode);
statsNode.put("count",list.size());
}
}
}
}
}
