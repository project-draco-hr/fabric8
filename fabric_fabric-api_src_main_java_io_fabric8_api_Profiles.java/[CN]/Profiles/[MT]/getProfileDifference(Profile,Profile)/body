{
  IllegalArgumentAssertion.assertNotNull(leftProfile,"leftProfile");
  IllegalArgumentAssertion.assertNotNull(rightProfile,"rightProfile");
  if (leftProfile.equals(rightProfile)) {
    return "ProfileDiff [ver=" + leftProfile.getVersion() + ",id="+ leftProfile.getId()+ "] - equals";
  }
 else {
    StringBuilder builder=new StringBuilder("ProfileDiff [ver=" + leftProfile.getVersion() + ",id="+ leftProfile.getId()+ "] vs. [ver="+ rightProfile.getVersion()+ ",id="+ rightProfile.getId()+ "]");
    MapDifference<String,String> attributeDiff=Maps.difference(leftProfile.getAttributes(),rightProfile.getAttributes());
    SetView<String> leftOnlyPids=Sets.difference(leftProfile.getConfigurations().keySet(),rightProfile.getConfigurations().keySet());
    SetView<String> rightOnlyPids=Sets.difference(rightProfile.getConfigurations().keySet(),leftProfile.getConfigurations().keySet());
    SetView<String> commonPids=Sets.union(leftProfile.getConfigurations().keySet(),rightProfile.getConfigurations().keySet());
    SetView<String> leftOnlyFiles=Sets.difference(leftProfile.getFileConfigurations().keySet(),rightProfile.getFileConfigurations().keySet());
    SetView<String> rightOnlyFiles=Sets.difference(rightProfile.getFileConfigurations().keySet(),leftProfile.getFileConfigurations().keySet());
    builder.append("\nAttributes");
    builder.append("\n  " + attributeDiff);
    builder.append("\nConfigurations");
    builder.append("\n  left only: " + leftOnlyPids);
    for (    String pid : leftOnlyPids) {
      builder.append("\n  " + pid);
      Map<String,String> config=new TreeMap<>(leftProfile.getConfiguration(pid));
      for (      Entry<String,String> citem : config.entrySet()) {
        builder.append("\n    " + citem.getKey() + " = "+ citem.getValue());
      }
    }
    builder.append("\n  right only: " + rightOnlyPids);
    for (    String pid : rightOnlyPids) {
      builder.append("\n  " + pid);
      Map<String,String> config=new TreeMap<>(rightProfile.getConfiguration(pid));
      for (      Entry<String,String> citem : config.entrySet()) {
        builder.append("\n    " + citem.getKey() + " = "+ citem.getValue());
      }
    }
    builder.append("\n  common: ");
    for (    String pid : commonPids) {
      Map<String,String> leftConfig=leftProfile.getConfiguration(pid);
      Map<String,String> rightConfig=rightProfile.getConfiguration(pid);
      if (!leftConfig.equals(rightConfig)) {
        builder.append("\n  " + pid + ": "+ Maps.difference(leftConfig,rightConfig));
      }
    }
    builder.append("\nFiles");
    builder.append("\n  left only: " + leftOnlyFiles);
    builder.append("\n  right only: " + rightOnlyFiles);
    return builder.toString();
  }
}
