{
  Provision.waitForCondition(new WaitForConditionTask(new Callable<Boolean>(){
    @Override public Boolean call() throws Exception {
      return 0 == brokerFacade.getQueueProducers(QUEUE_NAME).size();
    }
  }
,30000L));
  Destination destination=session.createQueue(QUEUE_NAME);
  MessageProducer producer1=session.createProducer(destination);
  Provision.waitForCondition(new WaitForConditionTask(new Callable<Boolean>(){
    @Override public Boolean call() throws Exception {
      return 1 == brokerFacade.getQueueProducers(QUEUE_NAME).size();
    }
  }
,30000L));
  producer1.close();
  Provision.waitForCondition(new WaitForConditionTask(new Callable<Boolean>(){
    @Override public Boolean call() throws Exception {
      return 0 == brokerFacade.getQueueProducers(QUEUE_NAME).size();
    }
  }
,30000L));
  MessageProducer producer2=session.createProducer(destination);
  MessageProducer producer3=session.createProducer(destination);
  MessageProducer producer4=session.createProducer(destination);
  Provision.waitForCondition(new WaitForConditionTask(new Callable<Boolean>(){
    @Override public Boolean call() throws Exception {
      return 3 == brokerFacade.getQueueProducers(QUEUE_NAME).size();
    }
  }
,30000L));
  producer2.close();
  producer3.close();
  producer4.close();
  Provision.waitForCondition(new WaitForConditionTask(new Callable<Boolean>(){
    @Override public Boolean call() throws Exception {
      return 0 == brokerFacade.getQueueProducers(QUEUE_NAME).size();
    }
  }
,30000L));
}
