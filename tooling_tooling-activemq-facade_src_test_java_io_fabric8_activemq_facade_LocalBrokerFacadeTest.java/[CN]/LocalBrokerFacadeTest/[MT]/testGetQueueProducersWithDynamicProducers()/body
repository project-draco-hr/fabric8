{
  Provision.waitForCondition(new WaitForConditionTask(new Callable<Boolean>(){
    @Override public Boolean call() throws Exception {
      return 0 == brokerFacade.getQueueProducers(QUEUE_NAME).size();
    }
  }
,30000L));
  Destination destination=session.createQueue(QUEUE_NAME);
  MessageProducer producer1=session.createProducer(destination);
  Provision.waitForCondition(new WaitForConditionTask(new Callable<Boolean>(){
    @Override public Boolean call() throws Exception {
      return 1 == brokerFacade.getQueueProducers(QUEUE_NAME).size();
    }
  }
,30000L));
  MessageProducer producer2=session.createProducer(null);
  producer2.send(destination,session.createTextMessage("Dynamic Producer Made Me."));
  Provision.waitForCondition(new WaitForConditionTask(new Callable<Boolean>(){
    @Override public Boolean call() throws Exception {
      return 2 == brokerFacade.getQueueProducers(QUEUE_NAME).size();
    }
  }
,30000L));
  for (  ProducerViewMBean bean : brokerFacade.getQueueProducers(QUEUE_NAME)) {
    LOG.debug("Got bean for producer " + bean.getSessionId() + " on dest = "+ bean.getDestinationName());
  }
  producer1.close();
  producer2.close();
  Provision.waitForCondition(new WaitForConditionTask(new Callable<Boolean>(){
    @Override public Boolean call() throws Exception {
      return 0 == brokerFacade.getQueueProducers(QUEUE_NAME).size();
    }
  }
,30000L));
}
