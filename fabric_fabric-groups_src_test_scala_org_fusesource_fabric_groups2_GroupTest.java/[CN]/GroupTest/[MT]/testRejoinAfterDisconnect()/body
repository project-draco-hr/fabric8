{
  int port=findFreePort();
  CuratorFramework curator=CuratorFrameworkFactory.builder().connectString("localhost:" + port).retryPolicy(new RetryNTimes(10,100)).build();
  curator.start();
  NIOServerCnxnFactory cnxnFactory=startZooKeeper(port);
  Group<State> group=new ZooKeeperGroup<State>(curator,"/singletons/test" + System.currentTimeMillis(),State.class);
  group.add(listener);
  group.update(new State("foo"));
  group.start();
  curator.getZookeeperClient().blockUntilConnectedOrTimedOut();
  Thread.sleep(1000);
  assertTrue(group.isConnected());
  assertTrue(group.isMaster());
  cnxnFactory.shutdown();
  cnxnFactory.join();
  Thread.sleep(1000);
  assertFalse(group.isConnected());
  assertFalse(group.isMaster());
  cnxnFactory=startZooKeeper(port);
  curator.getZookeeperClient().blockUntilConnectedOrTimedOut();
  Thread.sleep(1000);
  assertTrue(group.isConnected());
  assertTrue(group.isMaster());
  group.close();
  curator.close();
  cnxnFactory.shutdown();
  cnxnFactory.join();
}
