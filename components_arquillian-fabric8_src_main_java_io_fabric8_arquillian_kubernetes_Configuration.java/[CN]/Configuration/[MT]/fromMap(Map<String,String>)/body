{
  Configuration configuration=new Configuration();
  try {
    if (map.containsKey(MASTER_URL)) {
      configuration.masterUrl=map.get(MASTER_URL);
    }
 else {
      configuration.masterUrl=Systems.getEnvVarOrSystemProperty(KUBERNETES_MASTER,"");
    }
    if (Strings.isNullOrBlank(configuration.getMasterUrl())) {
      throw new IllegalStateException("Could not find a valid kubernetes URL.");
    }
    if (map.containsKey(CONFIG_URL)) {
      configuration.configUrl=new URL(map.get(CONFIG_URL));
    }
 else     if (map.containsKey(CONFIG_FILE_NAME)) {
      configuration.configUrl=Configuration.class.getResource("/" + map.get(CONFIG_FILE_NAME));
    }
 else {
      configuration.configUrl=Configuration.class.getResource("/" + DEFAULT_CONFIG_FILE_NAME);
    }
    if (map.containsKey(TIMEOUT)) {
      configuration.timeout=Long.parseLong(map.get(TIMEOUT));
    }
    if (map.containsKey(POLL_INTERVAL)) {
      configuration.pollInterval=Long.parseLong(map.get(POLL_INTERVAL));
    }
  }
 catch (  Throwable t) {
    throw new RuntimeException(t);
  }
  return configuration;
}
