{
  ObjectName oName=new ObjectName(query.getObj());
  Set<ObjectName> queryNames=mbeanServer.queryNames(oName,null);
  for (  ObjectName queryName : queryNames) {
    List<Result> resList=new ArrayList<Result>();
    MBeanInfo info=mbeanServer.getMBeanInfo(queryName);
    ObjectInstance oi=mbeanServer.getObjectInstance(queryName);
    List<String> queryAttributes=query.getAttr();
    if ((queryAttributes == null) || (queryAttributes.size() == 0)) {
      MBeanAttributeInfo[] attrs=info.getAttributes();
      for (      MBeanAttributeInfo attrInfo : attrs) {
        query.addAttr(attrInfo.getName());
      }
    }
    try {
      if ((query.getAttr() != null) && (query.getAttr().size() > 0)) {
        if (log.isDebugEnabled()) {
          log.debug("Executing queryName: " + queryName.getCanonicalName() + " from query: "+ query);
        }
        AttributeList al=mbeanServer.getAttributes(queryName,query.getAttr().toArray(new String[query.getAttr().size()]));
        for (        Attribute attribute : al.asList()) {
          getResult(resList,info,oi,attribute,query);
        }
        query.setResults(resList);
        runOutputWritersForQuery(query);
        if (log.isDebugEnabled()) {
          log.debug("Finished running outputWriters for query: " + query);
        }
      }
    }
 catch (    UnmarshalException ue) {
      if ((ue.getCause() != null) && (ue.getCause() instanceof ClassNotFoundException)) {
        log.debug("Bad unmarshall, continuing. This is probably ok and due to something like this: " + "http://ehcache.org/xref/net/sf/ehcache/distribution/RMICacheManagerPeerListener.html#52",ue.getMessage());
      }
    }
  }
}
