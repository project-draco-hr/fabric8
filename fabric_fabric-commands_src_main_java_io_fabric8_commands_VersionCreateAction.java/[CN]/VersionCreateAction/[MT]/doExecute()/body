{
  String latestVersion=null;
  ProfileService profileService=fabricService.adapt(ProfileService.class);
  List<String> versions=profileService.getVersions();
  if (versions.size() > 0) {
    latestVersion=versions.get(versions.size() - 1);
  }
  if (versionId == null) {
    IllegalStateAssertion.assertNotNull(latestVersion,"Cannot default the new version name as there are no versions available");
    VersionSequence sequence=new VersionSequence(latestVersion);
    versionId=sequence.next().getName();
  }
  String parentId=null;
  if (parentVersion == null) {
    parentId=latestVersion;
  }
 else {
    IllegalStateAssertion.assertTrue(profileService.hasVersion(parentVersion),"Cannot find parent version: " + parentVersion);
    parentId=parentVersion;
  }
  VersionBuilder builder=VersionBuilder.Factory.create(versionId);
  if (description != null) {
    builder.addAttribute(Version.DESCRIPTION,description);
  }
  Version created;
  if (parentId != null) {
    Version newVersion=builder.parent(parentId).getVersion();
    created=profileService.createVersion(newVersion);
    System.out.println("Created version: " + versionId + " as copy of: "+ parentId);
  }
 else {
    Version newVersion=builder.getVersion();
    created=profileService.createVersion(newVersion);
    System.out.println("Created version: " + versionId);
  }
  if (defaultVersion == Boolean.TRUE) {
    fabricService.setDefaultVersionId(created.getId());
  }
  return null;
}
