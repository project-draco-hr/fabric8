{
  final String exclstr=exclusive ? " exclusive" : "";
  if (LOGGER.isTraceEnabled()) {
    String timestr=unit != null ? " in " + unit.toMillis(timeout) + "ms" : "";
    LOGGER.trace("aquiring" + exclstr + timestr+ ": {}",key);
  }
  getSinglePermit(timeout,unit);
  final T instance=activeInstance.get();
  final Lock lock;
  if (exclusive) {
    lock=writeLock(timeout,unit);
    exclusiveLock.set(true);
  }
 else {
    lock=readLock(timeout,unit);
    semaphore.release(1);
  }
  LOGGER.trace("aquired" + exclstr + ": {}",key);
  return new Permit<T>(){
    @Override public PermitKey<T> getPermitKey(){
      return key;
    }
    @Override public T getInstance(){
      return instance;
    }
    @Override public void release(){
      LOGGER.trace("releasing" + exclstr + ": {}",key);
      lock.unlock();
      if (exclusive) {
        exclusiveLock.set(false);
        semaphore.release(1);
      }
    }
  }
;
}
