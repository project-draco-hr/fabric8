{
  int matched=0;
  long from=Long.MAX_VALUE;
  long to=Long.MIN_VALUE;
  List<LogEvent> list=new ArrayList<LogEvent>();
  Iterable<LoggingEvent> elements=getEvents().getElements();
  for (  LoggingEvent element : elements) {
    LogEvent logEvent=toLogEvent(element);
    long timestamp=element.getTimeStamp();
    if (timestamp > to) {
      to=timestamp;
    }
    if (timestamp < from) {
      from=timestamp;
    }
    if (logEvent != null) {
      if (predicate == null || predicate.matches(logEvent)) {
        list.add(logEvent);
        matched+=1;
        if (maxCount > 0 && matched >= maxCount) {
          break;
        }
      }
    }
  }
  LogResults results=new LogResults();
  results.setEvents(list);
  if (from < Long.MAX_VALUE) {
    results.setFromTimestamp(from);
  }
  if (to > Long.MIN_VALUE) {
    results.setToTimestamp(to);
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("Requested " + maxCount + " logging items. returning "+ results.getEvents().size()+ " event(s) from a possible "+ getEvents().size());
  }
  return results;
}
