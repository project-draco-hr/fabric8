{
  for (  Position pos : group.positions) {
    DependencyNode parent=pos.parent;
    List<DependencyNode> children=parent.getChildren();
    List<DependencyNode> toAdd=new ArrayList<DependencyNode>();
    for (Iterator<DependencyNode> it=children.iterator(); it.hasNext(); ) {
      DependencyNode child=it.next();
      Object key=conflictIds.get(child);
      if (group.key.equals(key)) {
        if (!group.pruned && group.position != null && group.version != null && group.position.depth == pos.depth && group.version.equals(child.getVersion())) {
          group.pruned=true;
        }
 else {
          it.remove();
          if (group.versionDependency == null) {
            throw new IllegalStateException("Should have a versionDependency for group: " + group + " and version: "+ group.version);
          }
          toAdd.add(group.versionDependency);
        }
      }
    }
    children.addAll(toAdd);
  }
}
