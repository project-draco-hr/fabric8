{
switch (classifierID) {
case RfcPackage.DESTINATION:
{
      Destination destination=(Destination)theEObject;
      T result=caseDestination(destination);
      if (result == null)       result=defaultCase(theEObject);
      return result;
    }
case RfcPackage.RFC:
{
    RFC rfc=(RFC)theEObject;
    T result=caseRFC(rfc);
    if (result == null)     result=defaultCase(theEObject);
    return result;
  }
case RfcPackage.TABLE:
{
  Table<?> table=(Table<?>)theEObject;
  T result=caseTable(table);
  if (result == null)   result=defaultCase(theEObject);
  return result;
}
case RfcPackage.STRUCTURE:
{
Structure structure=(Structure)theEObject;
T result=caseStructure(structure);
if (result == null) result=defaultCase(theEObject);
return result;
}
case RfcPackage.DESTINATION_DATA_ENTRY:
{
@SuppressWarnings("unchecked") Map.Entry<String,String> destinationDataEntry=(Map.Entry<String,String>)theEObject;
T result=caseDestinationDataEntry(destinationDataEntry);
if (result == null) result=defaultCase(theEObject);
return result;
}
case RfcPackage.DESTINATION_DATA:
{
DestinationData destinationData=(DestinationData)theEObject;
T result=caseDestinationData(destinationData);
if (result == null) result=defaultCase(theEObject);
return result;
}
case RfcPackage.DESTINATION_DATA_STORE_ENTRY:
{
@SuppressWarnings("unchecked") Map.Entry<String,DestinationData> destinationDataStoreEntry=(Map.Entry<String,DestinationData>)theEObject;
T result=caseDestinationDataStoreEntry(destinationDataStoreEntry);
if (result == null) result=defaultCase(theEObject);
return result;
}
case RfcPackage.DESTINATION_DATA_STORE:
{
DestinationDataStore destinationDataStore=(DestinationDataStore)theEObject;
T result=caseDestinationDataStore(destinationDataStore);
if (result == null) result=defaultCase(theEObject);
return result;
}
case RfcPackage.SERVER:
{
Server server=(Server)theEObject;
T result=caseServer(server);
if (result == null) result=defaultCase(theEObject);
return result;
}
case RfcPackage.SERVER_DATA_ENTRY:
{
@SuppressWarnings("unchecked") Map.Entry<String,String> serverDataEntry=(Map.Entry<String,String>)theEObject;
T result=caseServerDataEntry(serverDataEntry);
if (result == null) result=defaultCase(theEObject);
return result;
}
case RfcPackage.SERVER_DATA:
{
ServerData serverData=(ServerData)theEObject;
T result=caseServerData(serverData);
if (result == null) result=defaultCase(theEObject);
return result;
}
case RfcPackage.SERVER_DATA_STORE_ENTRY:
{
@SuppressWarnings("unchecked") Map.Entry<String,ServerData> serverDataStoreEntry=(Map.Entry<String,ServerData>)theEObject;
T result=caseServerDataStoreEntry(serverDataStoreEntry);
if (result == null) result=defaultCase(theEObject);
return result;
}
case RfcPackage.SERVER_DATA_STORE:
{
ServerDataStore serverDataStore=(ServerDataStore)theEObject;
T result=caseServerDataStore(serverDataStore);
if (result == null) result=defaultCase(theEObject);
return result;
}
case RfcPackage.FUNCTION_TEMPLATE:
{
FunctionTemplate functionTemplate=(FunctionTemplate)theEObject;
T result=caseFunctionTemplate(functionTemplate);
if (result == null) result=defaultCase(theEObject);
return result;
}
case RfcPackage.RECORD_META_DATA:
{
RecordMetaData recordMetaData=(RecordMetaData)theEObject;
T result=caseRecordMetaData(recordMetaData);
if (result == null) result=defaultCase(theEObject);
return result;
}
case RfcPackage.FIELD_META_DATA:
{
FieldMetaData fieldMetaData=(FieldMetaData)theEObject;
T result=caseFieldMetaData(fieldMetaData);
if (result == null) result=defaultCase(theEObject);
return result;
}
case RfcPackage.LIST_FIELD_META_DATA:
{
ListFieldMetaData listFieldMetaData=(ListFieldMetaData)theEObject;
T result=caseListFieldMetaData(listFieldMetaData);
if (result == null) result=defaultCase(theEObject);
return result;
}
case RfcPackage.ABAP_EXCEPTION:
{
AbapException abapException=(AbapException)theEObject;
T result=caseAbapException(abapException);
if (result == null) result=defaultCase(theEObject);
return result;
}
case RfcPackage.RESPOSITORY_DATA_ENTRY:
{
@SuppressWarnings("unchecked") Map.Entry<String,FunctionTemplate> respositoryDataEntry=(Map.Entry<String,FunctionTemplate>)theEObject;
T result=caseRespositoryDataEntry(respositoryDataEntry);
if (result == null) result=defaultCase(theEObject);
return result;
}
case RfcPackage.REPOSITORY_DATA:
{
RepositoryData repositoryData=(RepositoryData)theEObject;
T result=caseRepositoryData(repositoryData);
if (result == null) result=defaultCase(theEObject);
return result;
}
case RfcPackage.REPOSITORY_DATA_STORE:
{
RepositoryDataStore repositoryDataStore=(RepositoryDataStore)theEObject;
T result=caseRepositoryDataStore(repositoryDataStore);
if (result == null) result=defaultCase(theEObject);
return result;
}
case RfcPackage.RESPOSITORY_DATA_STORE_ENTRY:
{
@SuppressWarnings("unchecked") Map.Entry<String,RepositoryData> respositoryDataStoreEntry=(Map.Entry<String,RepositoryData>)theEObject;
T result=caseRespositoryDataStoreEntry(respositoryDataStoreEntry);
if (result == null) result=defaultCase(theEObject);
return result;
}
default :
return defaultCase(theEObject);
}
}
