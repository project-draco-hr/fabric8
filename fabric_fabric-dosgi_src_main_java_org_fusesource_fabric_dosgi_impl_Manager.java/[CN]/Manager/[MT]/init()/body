{
  this.client=new ClientInvokerImpl(queue,timeout,serializationStrategies);
  this.server=new ServerInvokerImpl(uri,queue,serializationStrategies);
  this.client.start();
  this.server.start();
  try {
    create(curator,DOSGI_REGISTRY,CreateMode.PERSISTENT);
  }
 catch (  KeeperException.NodeExistsException e) {
  }
  this.tree=new TreeCache(curator,DOSGI_REGISTRY,true);
  this.tree.getListenable().addListener(this);
  this.tree.start();
  this.uuid=Utils.getUUID(this.bundleContext);
  String filter="(" + RemoteConstants.SERVICE_EXPORTED_INTERFACES + "=*)";
  this.bundleContext.addServiceListener(this,filter);
  this.registration=this.bundleContext.registerService(new String[]{ListenerHook.class.getName(),EventHook.class.getName(),FindHook.class.getName()},this,null);
  ServiceReference[] references=this.bundleContext.getServiceReferences((String)null,filter);
  if (references != null) {
    for (    ServiceReference reference : references) {
      exportService(reference);
    }
  }
}
