{
  assertValid();
  Set<Feature> installed=new HashSet<Feature>();
  try {
    Map<String,Map<String,Feature>> allFeatures=getFeatures(installedRepositories);
    for (    String featureName : fabricService.get().getCurrentContainer().getOverlayProfile().getFeatures()) {
      try {
        Feature f;
        if (featureName.contains("/")) {
          String[] parts=featureName.split("/");
          String name=parts[0];
          String version=parts[1];
          f=allFeatures.get(name).get(version);
        }
 else {
          TreeMap<String,Feature> versionMap=(TreeMap<String,Feature>)allFeatures.get(featureName);
          f=versionMap.lastEntry().getValue();
        }
        addFeatures(f,installed);
      }
 catch (      Exception ex) {
        LOGGER.debug("Error while adding {} to the features list");
      }
    }
  }
 catch (  Exception e) {
    LOGGER.error("Error retrieving features.",e);
  }
  return installed.toArray(new Feature[installed.size()]);
}
