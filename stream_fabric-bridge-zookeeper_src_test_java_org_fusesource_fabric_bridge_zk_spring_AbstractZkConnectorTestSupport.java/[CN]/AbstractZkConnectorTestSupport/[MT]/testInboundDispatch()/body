{
  applicationContext.getBean("myzkbridge",ZkBridgeConnector.class);
  applicationContext.getBean("myzkgateway",ZkGatewayConnector.class);
  ZkGatewayConnector bean=applicationContext.getBean("myzkgateway",ZkGatewayConnector.class);
  if (bean.getRemoteBridges().isEmpty()) {
    Thread.sleep(TEST_CONNECT_TIMEOUT);
  }
  assertFalse("Bridge did not connect to Gateway",bean.getRemoteBridges().isEmpty());
  for (  String sourceName : TEST_SOURCES) {
    super.sendMessages(TEST_LOCAL_BROKER_URL,sourceName,TEST_NUM_MESSAGES,null);
  }
  for (  final String sourceName : TEST_SOURCES) {
    super.receiveMessages(TEST_REMOTE_BROKER_URL,sourceName,TEST_NUM_MESSAGES,new BaseMatcher<TextMessage>(){
      @Override public boolean matches(      Object message){
        boolean retVal=false;
        try {
          retVal=((TextMessage)message).getStringProperty(BridgeDestinationsConfig.DEFAULT_DESTINATION_NAME_HEADER).matches(sourceName);
        }
 catch (        JMSException e) {
          fail(e.getMessage());
        }
        return retVal;
      }
      @Override public void describeTo(      Description description){
        description.appendText("TextMessage containing " + BridgeDestinationsConfig.DEFAULT_DESTINATION_NAME_HEADER + " property");
      }
    }
);
  }
}
