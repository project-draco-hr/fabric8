{
  ConfigurationAdmin configurationAdmin=createNiceMock(ConfigurationAdmin.class);
  Configuration ops4j=createNiceMock(Configuration.class);
  expect(ops4j.getProperties()).andReturn(createDictionary("key1","value1","key2","value2"));
  replay(ops4j);
  Configuration fusesource=createNiceMock(Configuration.class);
  expect(fusesource.getProperties()).andReturn(createDictionary("key1","override-value1","key3","value3"));
  replay(fusesource);
  expect(configurationAdmin.getConfiguration("org.ops4j.pax.url.mvn")).andReturn(ops4j);
  expect(configurationAdmin.getConfiguration("io.fabric8.fab.osgi.url")).andReturn(fusesource);
  replay(configurationAdmin);
  BundleContext context=createNiceMock(BundleContext.class);
  ConfigurationImpl configuration=newInstance(configurationAdmin,context);
  assertNotNull("We should have a non-null configuration object",configuration);
  assertEquals("FuseSource configuration value should override OPS4J one","override-value1",configuration.getPropertyResolver().get("key1"));
  assertEquals("OPS4J configuration values should be available","value2",configuration.getPropertyResolver().get("key2"));
  assertEquals("FuseSource configuration values should be available","value3",configuration.getPropertyResolver().get("key3"));
}
