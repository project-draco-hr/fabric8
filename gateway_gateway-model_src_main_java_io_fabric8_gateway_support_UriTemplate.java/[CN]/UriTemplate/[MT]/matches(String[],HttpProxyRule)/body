{
  int actualLength=requestUriPaths.length;
  int processedPaths=0;
  boolean joinedPath=false;
  Map<String,String> parameterNameValues=new HashMap<String,String>();
  for (int lastIndex=paths.length - 1; processedPaths <= lastIndex; processedPaths++) {
    String actualSegment=null;
    if (processedPaths < actualLength) {
      actualSegment=requestUriPaths[processedPaths];
    }
    if (actualSegment == null) {
      return null;
    }
    String parameterName=getWildcardParameterName(processedPaths);
    if (parameterName != null) {
      if (processedPaths == lastIndex) {
        actualSegment=joinPath(processedPaths,requestUriPaths);
        joinedPath=true;
      }
      parameterNameValues.put(parameterName,actualSegment);
    }
 else {
      String pathSegment=paths[processedPaths];
      if (pathSegment == null || !actualSegment.equals(pathSegment)) {
        return null;
      }
    }
  }
  if (!joinedPath && processedPaths < actualLength) {
    return null;
  }
  return new MappingResult(parameterNameValues,requestUriPaths,proxyRule);
}
