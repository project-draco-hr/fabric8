{
  if (path == null || path.trim().length() == 0) {
    throw new MalformedURLException("Path cannot be null or empty. Syntax " + SYNTAX);
  }
  if (path.startsWith(INSTRUCTIONS_SEPARATOR) || path.endsWith(INSTRUCTIONS_SEPARATOR)) {
    throw new MalformedURLException("Path cannot start or end with " + INSTRUCTIONS_SEPARATOR + ". Syntax "+ SYNTAX);
  }
  m_wrappingProperties=new Properties();
  Matcher matcher=SYNTAX_JAR_BND_INSTR.matcher(path);
  if (matcher.matches()) {
    m_wrappedJarURL=new URL(matcher.group(1));
    parseInstructionsFile(new URL(matcher.group(2)));
    m_wrappingProperties.putAll(BndUtils.parseInstructions(matcher.group(3)));
  }
 else   if ((matcher=SYNTAX_JAR_INSTR.matcher(path)).matches()) {
    m_wrappedJarURL=new URL(matcher.group(1));
    m_wrappingProperties.putAll(BndUtils.parseInstructions(matcher.group(2)));
  }
 else   if ((matcher=SYNTAX_JAR_BND.matcher(path)).matches()) {
    m_wrappedJarURL=new URL(matcher.group(1));
    parseInstructionsFile(new URL(matcher.group(2)));
  }
 else {
    m_wrappedJarURL=new URL(path);
  }
  OverwriteMode overwriteMode;
  try {
    overwriteMode=OverwriteMode.valueOf(m_wrappingProperties.getProperty("overwrite",OverwriteMode.KEEP.name()).toUpperCase());
  }
 catch (  Exception e) {
    overwriteMode=OverwriteMode.KEEP;
  }
  m_overwriteMode=overwriteMode;
}
