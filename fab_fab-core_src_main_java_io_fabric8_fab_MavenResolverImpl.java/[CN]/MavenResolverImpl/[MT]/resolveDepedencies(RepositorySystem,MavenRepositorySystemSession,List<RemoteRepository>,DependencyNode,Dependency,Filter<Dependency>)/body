{
  if (!DependencyFilters.matches(dependency,shouldExclude)) {
    CollectRequest cr=new CollectRequest(dependency,repos);
    try {
      DependencyNode node=repositorySystem.collectDependencies(session,cr).getRoot();
      DependencyFilter filter=new DependencyFilter(){
        public boolean accept(        DependencyNode node,        List<DependencyNode> parents){
          return !DependencyFilters.matches(node,shouldExclude);
        }
      }
;
      DependencyRequest request=new DependencyRequest(cr,filter);
      repositorySystem.resolveDependencies(session,request);
      return node;
    }
 catch (    DependencyCollectionException e) {
      handleDependencyResolveFailure(pomNode,dependency,e);
    }
catch (    DependencyResolutionException e) {
      handleDependencyResolveFailure(pomNode,dependency,e);
    }
  }
  return null;
}
