{
  Class<?> targetClass=target.getClass();
  return Proxy.newProxyInstance(targetClass.getClassLoader(),targetClass.getInterfaces(),new InvocationHandler(){
    @Override public Object invoke(    Object proxy,    Method method,    Object[] args) throws Throwable {
      retain();
      try {
        return method.invoke(target,args);
      }
 catch (      InvocationTargetException e) {
        throw e.getCause();
      }
 finally {
        release();
      }
    }
  }
);
}
