{
  super.doParse(element,parserContext,builder);
  String dispatchPolicyReference=element.getAttribute(DISPATCH_POLICY_REF_ATTRIBUTE);
  if (StringUtils.hasText(dispatchPolicyReference)) {
    if (element.getElementsByTagNameNS(BridgeNamespaceHandler.BRIDGE_NS,DISPATCH_POLICY_ELEMENT).getLength() > 0) {
      throw new BeanCreationException(builder.getBeanDefinition().getResourceDescription(),element.getAttribute(ID_ATTRIBUTE),"Only one of " + DISPATCH_POLICY_REF_ATTRIBUTE + " or "+ DISPATCH_POLICY_ELEMENT+ " is allowed");
    }
 else {
      builder.addPropertyValue(DISPATCH_POLICY_REF_ATTRIBUTE,dispatchPolicyReference);
      builder.addPropertyReference(DISPATCH_POLICY_PROPERTY,dispatchPolicyReference);
    }
  }
 else {
    NodeList elements=element.getElementsByTagNameNS(BridgeNamespaceHandler.BRIDGE_NS,DISPATCH_POLICY_ELEMENT);
    if (elements != null && elements.getLength() == 1) {
      builder.addPropertyValue(DISPATCH_POLICY_PROPERTY,dispatchPolicyParser.parse((Element)elements.item(0),parserContext));
    }
  }
  NodeList elements=element.getElementsByTagNameNS(BridgeNamespaceHandler.BRIDGE_NS,DESTINATION_ELEMENT);
  ManagedList<BeanDefinition> destinations=new ManagedList<BeanDefinition>();
  for (int i=0; i < elements.getLength(); i++) {
    Element destinationElement=(Element)elements.item(i);
    destinations.add(destinationParser.parse(destinationElement,parserContext));
  }
  if (!destinations.isEmpty()) {
    builder.addPropertyValue(DESTINATIONS_PROPERTY,destinations);
  }
}
