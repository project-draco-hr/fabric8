{
  initDestination();
  System.out.println("Using destination: " + destination + ", on broker: "+ brokerUrl);
  ArrayList<ProducerThread> producerThreads=new ArrayList();
  ArrayList<ConsumerThread> consumerThreads=new ArrayList();
  ActiveMQService activeMQService;
  ProducerThread producerThread;
  ConsumerThread consumerThread;
  for (int i=1; i <= parallelThreads; i++) {
    activeMQService=new ActiveMQService(user,password,brokerUrl);
    activeMQService.setTransacted(batchSize > 0);
    try {
      if ("producer".equals(action)) {
        producerThread=new ProducerThread(activeMQService,destination);
        producerThread.setMessageCount(count);
        producerThread.setMessageSize(size);
        producerThread.setTextMessageSize(textSize);
        producerThread.setSleep(sleep);
        producerThread.setPersistent(persistent);
        producerThread.setTransactionBatchSize(batchSize);
        producerThread.setTTL(ttl);
        producerThread.setMsgGroupID(groupID);
        producerThread.start();
        producerThreads.add(producerThread);
      }
 else       if ("consumer".equals(action)) {
        activeMQService.setClientId(clientId);
        activeMQService.start();
        consumerThread=new ConsumerThread(activeMQService,destination);
        consumerThread.setMessageCount(count);
        consumerThread.setSleep(sleep);
        consumerThread.setTransactionBatchSize(batchSize);
        consumerThread.start();
        consumerThreads.add(consumerThread);
      }
 else {
        displayHelpAndExit(1);
      }
    }
 catch (    JMSException error) {
      System.err.println(Thread.currentThread().getName() + "Execution failed with: " + error);
      error.printStackTrace(System.err);
      System.exit(2);
    }
  }
  while (true) {
    Iterator<?> itr=null;
    if (producerThreads.size() > 0) {
      itr=producerThreads.iterator();
    }
    if (consumerThreads.size() > 0) {
      itr=consumerThreads.iterator();
    }
    int running=0;
    while (itr.hasNext()) {
      Thread thread=(Thread)itr.next();
      if (thread.isAlive()) {
        running++;
      }
    }
    if (running <= 0) {
      System.out.println("All threads completed their work");
      break;
    }
    try {
      Thread.sleep(1000);
    }
 catch (    Exception e) {
    }
  }
}
