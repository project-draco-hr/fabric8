{
  if (request.method().equals("PUT")) {
    String contentType=request.headers().get("Content-Type");
    if (contentType == null || !contentType.startsWith("application/json")) {
      request.response().setStatusCode(403);
      request.response().end("Expecting Content-Type of 'application/json'");
      request.response().close();
      return;
    }
    if (contentType == null || !contentType.endsWith("UTF-8")) {
      request.response().setStatusCode(403);
      request.response().end("Expecting charset of 'UTF-8'");
      request.response().close();
      return;
    }
  }
  request.bodyHandler(new Handler<Buffer>(){
    @Override public void handle(    Buffer event){
      String body=event.getString(0,event.length());
      String uri=request.uri().substring(0,request.uri().lastIndexOf("/") + 1);
switch (uri) {
case "/rest/apimanager/api/applications/":
        ApplicationResource applicationResource=new ApplicationResource(engine);
      try {
        if (request.method().equals("PUT")) {
          Application application=getObjectMapper().readValue(body,Application.class);
          applicationResource.register(application);
          request.response().setStatusCode(200);
        }
 else         if (request.method().equals("DELETE")) {
          String applicationId=request.params().get("applicationId");
          String organizationId=request.params().get("organizationId");
          String version=request.params().get("version");
          applicationResource.unregister(organizationId,applicationId,version);
        }
 else {
          request.response().setStatusCode(404);
          request.response().setStatusMessage("Method not Supported");
        }
        request.response().end();
        request.response().close();
      }
 catch (      Throwable e) {
        LOG.error(e.getMessage(),e);
        request.response().setStatusCode(500);
        request.response().setStatusMessage(e.getMessage());
        request.response().end();
        request.response().close();
      }
    break;
case "/rest/apimanager/api/services/":
  ServiceResource serviceResource=new ServiceResource(engine);
try {
  if (request.method().equals("PUT")) {
    Service service=getObjectMapper().readValue(body,Service.class);
    serviceResource.publish(service);
    request.response().setStatusCode(200);
  }
 else   if (request.method().equals("DELETE")) {
    String serviceId=request.params().get("serviceId");
    String organizationId=request.params().get("organizationId");
    String version=request.params().get("version");
    serviceResource.retire(organizationId,serviceId,version);
    request.response().setStatusCode(200);
  }
 else {
    request.response().setStatusCode(404);
    request.response().setStatusMessage("Method not Supported");
  }
  request.response().end();
  request.response().close();
}
 catch (Throwable e) {
  LOG.error(e.getMessage(),e);
  request.response().setStatusCode(500);
  request.response().setStatusMessage(e.getMessage());
  request.response().close();
}
break;
default :
request.response().setStatusCode(404);
request.response().setStatusMessage("No Such Service");
request.response().end();
request.response().close();
break;
}
}
}
);
}
