{
  if (request.method().equals("PUT")) {
    String contentType=request.headers().get("Content-Type");
    if (contentType == null || !contentType.startsWith("application/json")) {
      request.response().setStatusCode(403);
      request.response().end("Expecting Content-Type of 'application/json'");
      return;
    }
    if (contentType == null || !contentType.endsWith("UTF-8")) {
      request.response().setStatusCode(403);
      request.response().end("Expecting charset of 'UTF-8'");
      request.response().close();
      return;
    }
  }
  request.bodyHandler(new Handler<Buffer>(){
    @Override public void handle(    Buffer event){
      try {
        String body=event.getString(0,event.length());
        String uri=request.uri().substring(1);
        if (uri.contains("?"))         uri=uri.substring(0,uri.indexOf("?"));
        String[] pathSegment=uri.split("/");
        if (uri.startsWith("rest/apimanager/applications")) {
          ApplicationResource applicationResource=new ApplicationResource(engine);
          if (request.method().equals("PUT")) {
            Application application=getObjectMapper().readValue(body,Application.class);
            applicationResource.register(application);
          }
 else           if (request.method().equals("DELETE")) {
            if (pathSegment.length < 6)             throw new UserException("Query Parse Exception , " + "expecting /rest/apimanager/applications/{organizationId}/{applicationId}/{version}");
            String organizationId=pathSegment[3];
            String applicationId=pathSegment[4];
            String version=pathSegment[5];
            applicationResource.unregister(organizationId,applicationId,version);
          }
 else {
            throw new UserException("Method not Supported");
          }
        }
 else         if (uri.startsWith("rest/apimanager/services")) {
          ServiceResource serviceResource=new ServiceResource(engine);
          if (request.method().equals("PUT")) {
            Service service=getObjectMapper().readValue(body,Service.class);
            serviceResource.publish(service);
          }
 else           if (request.method().equals("DELETE")) {
            if (pathSegment.length < 6)             throw new UserException("Query Parse Exception , " + "expecting /rest/apimanager/applications/{organizationId}/{serviceId}/{version}");
            String organizationId=pathSegment[3];
            String serviceId=pathSegment[4];
            String version=pathSegment[5];
            serviceResource.retire(organizationId,serviceId,version);
            request.response().setStatusCode(200);
          }
 else           if (request.method().equals("GET")) {
            if (pathSegment.length < 7)             throw new UserException("Query Parse Exception , " + "expecting /rest/apimanager/applications/{organizationId}/{serviceId}/{version}/endpoint");
            String organizationId=pathSegment[3];
            String serviceId=pathSegment[4];
            String version=pathSegment[5];
            String json=getObjectMapper().writeValueAsString(serviceResource.getServiceEndpoint(organizationId,serviceId,version));
            request.response().headers().set("ContentType","application/json");
            request.response().headers().set("Content-Length",String.valueOf(json.length()));
            request.response().write(json);
          }
 else {
            throw new UserException("Method not Supported");
          }
        }
 else         if (uri.startsWith("rest/apimanager/system/status")) {
          SystemResource systemResource=new SystemResource(engine);
          String json=getObjectMapper().writeValueAsString(systemResource.getStatus());
          request.response().headers().set("ContentType","application/json");
          request.response().headers().set("Content-Length",String.valueOf(json.length()));
          request.response().write(json);
        }
 else {
          throw new UserException("No Such Service");
        }
        request.response().setStatusCode(200);
        request.response().end();
      }
 catch (      UserException e) {
        LOG.error(e.getMessage(),e);
        request.response().setStatusCode(404);
        request.response().setStatusMessage(e.getMessage());
        request.response().end();
      }
catch (      Throwable e) {
        LOG.error(e.getMessage(),e);
        request.response().setStatusCode(500);
        request.response().setStatusMessage(e.getMessage());
        request.response().end();
      }
    }
  }
);
}
