{
  checkReadOnlyBody();
  if (this.dataOut == null) {
    this.bytesOut=new ByteArrayOutputStream();
    OutputStream os=bytesOut;
    if (Settings.enable_compression()) {
      try {
        os.write(new byte[4]);
      }
 catch (      IOException e) {
        throw new OpenwireException(e);
      }
      length=0;
      compressed=true;
      final Deflater deflater=new Deflater(Deflater.BEST_SPEED);
      os=new FilterOutputStream(new DeflaterOutputStream(os,deflater)){
        public void write(        byte[] arg0) throws IOException {
          length+=arg0.length;
          out.write(arg0);
        }
        public void write(        byte[] arg0,        int arg1,        int arg2) throws IOException {
          length+=arg2;
          out.write(arg0,arg1,arg2);
        }
        public void write(        int arg0) throws IOException {
          length++;
          out.write(arg0);
        }
        @Override public void close() throws IOException {
          super.close();
          deflater.end();
        }
      }
;
    }
    this.dataOut=new DataOutputStream(os);
  }
}
