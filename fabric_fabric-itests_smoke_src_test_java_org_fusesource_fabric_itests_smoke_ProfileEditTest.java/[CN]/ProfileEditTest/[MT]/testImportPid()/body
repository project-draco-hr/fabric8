{
  System.err.println(executeCommands("config:edit my.pid","config:propset key1 value1","config:propset key2 value2","config:update"));
  System.err.println(executeCommand("fabric:create -n"));
  FabricService fabricService=getFabricService();
  assertNotNull(fabricService);
  System.err.println(executeCommand("fabric:profile-edit --pid my.pid --import-pid default"));
  Profile profile=fabricService.getDefaultVersion().getProfile("default");
  Assert.assertNotNull(profile);
  Map<String,Map<String,String>> configurations=profile.getConfigurations();
  Assert.assertNotNull(configurations);
  Assert.assertTrue(configurations.containsKey("my.pid"));
  Map<String,String> myPid=configurations.get("my.pid");
  Assert.assertNotNull(myPid);
  Assert.assertTrue(myPid.containsKey("key1"));
  Assert.assertEquals("value1",myPid.get("key1"));
  Assert.assertTrue(myPid.containsKey("key2"));
  Assert.assertEquals("value2",myPid.get("key2"));
  System.err.println(executeCommand("fabric:profile-edit --pid my.pid/key1 --delete default"));
  Map<String,String> configuration=profile.getConfiguration("my.pid");
  Assert.assertFalse(configuration.containsKey("key1"));
  System.err.println(executeCommand("fabric:profile-edit --pid my.pid --delete default"));
  configurations=profile.getConfigurations();
  Assert.assertFalse(configurations.containsKey("my.pid"));
}
