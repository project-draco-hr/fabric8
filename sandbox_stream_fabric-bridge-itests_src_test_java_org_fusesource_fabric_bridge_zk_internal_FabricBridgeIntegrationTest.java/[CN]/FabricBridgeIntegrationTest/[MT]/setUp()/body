{
  configurationAdmin=getOsgiService(ConfigurationAdmin.class,DEFAULT_TIMEOUT);
  Thread.sleep(DEFAULT_TIMEOUT);
  assertNotNull("fabric-commands bundle not started",getInstalledBundle(FABRIC_COMMANDS_BUNDLE));
  commandProcessor=getOsgiService(CommandProcessor.class,DEFAULT_TIMEOUT);
  ByteArrayOutputStream bos=new ByteArrayOutputStream();
  CommandSession session=commandProcessor.createSession(System.in,new PrintStream(bos),System.err);
  try {
    assertNotNull("FabricService not found",getOsgiService(FabricService.class));
    session.execute("fabric:create --clean root");
    Thread.sleep(DEFAULT_TIMEOUT);
    IZKClient zooKeeper=getOsgiService(IZKClient.class,DEFAULT_TIMEOUT);
    bundle=getInstalledBundle(FABRIC_BRIDGE_ZOOKEEPER_BUNDLE);
    assertNotNull("Bridge ZK bundle not started",bundle);
    location=bundle.getLocation();
    assertNotNull("Fabric Bridge service factory not started",getOsgiService(ManagedServiceFactory.class,"(" + Constants.SERVICE_PID + "="+ TEST_BRIDGE_PID+ ")",DEFAULT_TIMEOUT));
    assertNotNull("Fabric Gateway service factory not started",getOsgiService(ManagedServiceFactory.class,"(" + Constants.SERVICE_PID + "="+ TEST_GATEWAY_PID+ ")",DEFAULT_TIMEOUT));
    bos.reset();
    session.execute("fabric:profile-list");
    if (!bos.toString().contains("test-gateway")) {
      session.execute("fabric:profile-create --parents default test-gateway");
    }
    session.execute("zk:create -o -r /fabric/configs/versions/base/profiles/default/io.fabric8.bridge.bridgeDestinationsConfig.upstream.xml " + getDestinationsConfig("upstream.xml"));
    session.execute("zk:create -o -r /fabric/configs/versions/base/profiles/default/io.fabric8.bridge.bridgeDestinationsConfig.downstream.xml " + getDestinationsConfig("downstream.xml"));
  }
  finally {
    session.close();
  }
}
