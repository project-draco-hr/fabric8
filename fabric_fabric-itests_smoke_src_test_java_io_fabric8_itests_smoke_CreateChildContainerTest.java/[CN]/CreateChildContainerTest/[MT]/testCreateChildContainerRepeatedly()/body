{
  System.err.println(executeCommand("fabric:create --clean -n"));
  ServiceProxy<FabricService> fabricProxy=ServiceProxy.createServiceProxy(bundleContext,FabricService.class);
  try {
    Set<ContainerProxy> containers=ContainerBuilder.child(fabricProxy,1).withName("child").assertProvisioningResult().build();
    try {
      Assert.assertEquals("One container",1,containers.size());
      Container child=containers.iterator().next();
      Assert.assertEquals("child1",child.getId());
      Assert.assertEquals("root",child.getParent().getId());
    }
  finally {
      ContainerBuilder.destroy(containers);
    }
    System.err.println(executeCommand("fabric:create --clean -n"));
    containers=ContainerBuilder.child(fabricProxy,1).withName("child").assertProvisioningResult().build();
    try {
      Assert.assertEquals("One container",1,containers.size());
      Container child=containers.iterator().next();
      Assert.assertEquals("child1",child.getId());
      Assert.assertEquals("root",child.getParent().getId());
    }
  finally {
      ContainerBuilder.destroy(containers);
    }
  }
  finally {
    fabricProxy.close();
  }
}
