{
  BridgeDestinationsConfig config=new BridgeDestinationsConfig();
  properties.put("id",getId());
  Set<String> prefixSet=new HashSet<String>();
  for (  String key : properties.keySet()) {
    if (key.endsWith(NAME_SUFFIX)) {
      String prefix=key.substring(0,key.length() - NAME_SUFFIX.length() + 1);
      if (prefix.matches("^[0-9]+\\.")) {
        prefixSet.add(prefix);
      }
 else {
        String msg="Invalid destination name " + key + ", must be of the form [0-9]+\\.name";
        LOG.error(msg);
        throw new BeanCreationException(msg);
      }
    }
  }
  Map<String,String> configProperties=new HashMap<String,String>();
  for (  String key : properties.keySet()) {
    boolean skip=false;
    for (    String prefix : prefixSet) {
      if (key.startsWith(prefix)) {
        skip=true;
        break;
      }
    }
    if (!skip) {
      configProperties.put(key,properties.get(key));
    }
  }
  ConfigurablePropertyAccessor accessor=PropertyAccessorFactory.forDirectFieldAccess(config);
  accessor.setPropertyValues(configProperties);
  Map<String,DispatchPolicy> dispatchPolicies=new HashMap<String,DispatchPolicy>();
  config.setDestinations(getDestinations(properties,prefixSet,getId(),profiles,dispatchPolicies));
  String dispatchPolicyRef=config.getDispatchPolicyRef();
  if (StringUtils.hasText(dispatchPolicyRef)) {
    config.setDispatchPolicy(getDispatchPolicy(dispatchPolicies,profiles,dispatchPolicyRef,getId() + "." + dispatchPolicyRef));
  }
  return config;
}
