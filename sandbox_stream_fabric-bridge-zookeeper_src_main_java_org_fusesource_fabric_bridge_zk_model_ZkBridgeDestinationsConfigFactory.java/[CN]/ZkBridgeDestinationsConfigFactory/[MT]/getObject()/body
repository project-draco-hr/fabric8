{
  Container container=fabricService.getContainer(System.getProperty("karaf.name"));
  String bridgeDestinationsXml=BRIDGE_DESTINATIONS_PID + "." + getId()+ PID_XML_EXTENSION;
  String bridgeDestinationsProperties=BRIDGE_DESTINATIONS_PID + "." + getId();
  List<Profile> profiles=new ArrayList<Profile>();
  for (  Profile profile : container.getProfiles()) {
    if (profile.getParents().length > 0) {
      profile=profile.getOverlay();
    }
    profiles.add(profile);
  }
  for (  Profile profile : profiles) {
    Map<String,byte[]> configs=profile.getFileConfigurations();
    byte[] bytes=configs.get(bridgeDestinationsXml);
    if (bytes != null) {
      Object object=jaxbContext.createUnmarshaller().unmarshal(new ByteArrayInputStream(bytes));
      if (object instanceof BridgeDestinationsConfig) {
        return (BridgeDestinationsConfig)object;
      }
 else {
        String msg="Object at " + bridgeDestinationsXml + " is not of type "+ BridgeDestinationsConfig.class.getName()+ ", but instead of type "+ object.getClass().getName();
        LOG.error(msg);
        throw new IllegalArgumentException(msg);
      }
    }
 else {
      Map<String,String> properties=profile.getConfiguration(bridgeDestinationsProperties);
      if (properties != null) {
        try {
          return getBridgeDestinationsProperties(profiles,properties);
        }
 catch (        BeansException e) {
          String msg="Error parsing config properties " + bridgeDestinationsProperties + ": "+ e.getMessage();
          LOG.error(msg,e);
          throw new BeanCreationException(msg,e);
        }
      }
    }
  }
  String msg="No configuration " + bridgeDestinationsXml + " or "+ bridgeDestinationsProperties+ " found in container profiles";
  LOG.error(msg);
  throw new BeanCreationException(msg);
}
