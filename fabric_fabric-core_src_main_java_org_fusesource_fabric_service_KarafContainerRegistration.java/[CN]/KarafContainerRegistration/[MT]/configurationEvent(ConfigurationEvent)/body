{
  try {
    Container current=getContainer();
    String name=System.getProperty(SystemProperties.KARAF_NAME);
    if (event.getPid().equals(SSH_PID) && event.getType() == ConfigurationEvent.CM_UPDATED) {
      Configuration config=configurationAdmin.getConfiguration(SSH_PID);
      int sshPort=Integer.parseInt((String)config.getProperties().get(SSH_BINDING_PORT_KEY));
      int sshConnectionPort=getSshConnectionPort(current,sshPort);
      String sshUrl=getSshUrl(name,sshConnectionPort);
      setData(curator,CONTAINER_SSH.getPath(name),sshUrl);
      if (fabricService.getPortService().lookupPort(current,SSH_PID,SSH_BINDING_PORT_KEY) != sshPort) {
        fabricService.getPortService().unRegisterPort(current,SSH_PID);
        fabricService.getPortService().registerPort(current,SSH_PID,SSH_BINDING_PORT_KEY,sshPort);
      }
    }
    if (event.getPid().equals(HTTP_PID) && event.getType() == ConfigurationEvent.CM_UPDATED) {
      Configuration config=configurationAdmin.getConfiguration(HTTP_PID);
      boolean httpEnabled=isHttpEnabled();
      boolean httpsEnabled=isHttpsEnabled();
      String protocol=httpsEnabled && !httpEnabled ? "https" : "http";
      int httpPort=httpsEnabled && !httpEnabled ? Integer.parseInt((String)config.getProperties().get(HTTPS_BINDING_PORT_KEY)) : Integer.parseInt((String)config.getProperties().get(HTTP_BINDING_PORT_KEY));
      int httpConnectionPort=httpsEnabled && !httpEnabled ? getHttpsConnectionPort(current) : getHttpConnectionPort(current,httpPort);
      String httpUrl=getHttpUrl(protocol,name,httpConnectionPort);
      setData(curator,CONTAINER_HTTP.getPath(name),httpUrl);
      if (fabricService.getPortService().lookupPort(current,HTTP_PID,HTTP_BINDING_PORT_KEY) != httpPort) {
        fabricService.getPortService().unRegisterPort(current,HTTP_PID);
        fabricService.getPortService().registerPort(current,HTTP_PID,HTTP_BINDING_PORT_KEY,httpPort);
      }
    }
    if (event.getPid().equals(MANAGEMENT_PID) && event.getType() == ConfigurationEvent.CM_UPDATED) {
      Configuration config=configurationAdmin.getConfiguration(MANAGEMENT_PID);
      int rmiServerPort=Integer.parseInt((String)config.getProperties().get(RMI_SERVER_BINDING_PORT_KEY));
      int rmiServerConnectionPort=getRmiServerConnectionPort(current,rmiServerPort);
      int rmiRegistryPort=Integer.parseInt((String)config.getProperties().get(RMI_REGISTRY_BINDING_PORT_KEY));
      int rmiRegistryConnectionPort=getRmiRegistryConnectionPort(current,rmiRegistryPort);
      String jmxUrl=getJmxUrl(name,rmiServerConnectionPort,rmiRegistryConnectionPort);
      setData(curator,CONTAINER_JMX.getPath(name),jmxUrl);
      System.setProperty(SystemProperties.JAVA_RMI_SERVER_HOSTNAME,current.getIp());
      if (fabricService.getPortService().lookupPort(current,MANAGEMENT_PID,RMI_REGISTRY_BINDING_PORT_KEY) != rmiRegistryPort || fabricService.getPortService().lookupPort(current,MANAGEMENT_PID,RMI_SERVER_BINDING_PORT_KEY) != rmiServerPort) {
        fabricService.getPortService().unRegisterPort(current,MANAGEMENT_PID);
        fabricService.getPortService().registerPort(current,MANAGEMENT_PID,RMI_SERVER_BINDING_PORT_KEY,rmiServerPort);
        fabricService.getPortService().registerPort(current,MANAGEMENT_PID,RMI_REGISTRY_BINDING_PORT_KEY,rmiRegistryPort);
      }
    }
  }
 catch (  Exception e) {
  }
}
