{
  return new Iterable<String>(){
    public Iterator<String> iterator(){
      return new Iterator<String>(){
        LinkedList<File> files=new LinkedList<File>(Collections.singletonList(directory));
        public boolean hasNext(){
          return !files.isEmpty();
        }
        public String next(){
          File file=files.removeFirst();
          if (file.isDirectory()) {
            File[] children=file.listFiles();
            if (children != null) {
              for (              File f : children) {
                files.add(f);
              }
            }
          }
          return root.relativize(file.toURI()).toString();
        }
        public void remove(){
          throw new UnsupportedOperationException();
        }
      }
;
    }
  }
;
}
