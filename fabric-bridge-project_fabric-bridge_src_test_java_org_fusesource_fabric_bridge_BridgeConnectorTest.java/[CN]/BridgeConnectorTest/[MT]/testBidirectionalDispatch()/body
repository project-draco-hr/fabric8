{
  for (  BridgedDestination destination : connector.getOutboundDestinations().getDestinations()) {
    destination.setTargetName(destination.getName() + INBOUND_SUFFIX);
  }
  connector.afterPropertiesSet();
  connector.start();
  final BridgeConnector targetConnector=new BridgeConnector();
  BrokerConfig localBrokerConfig=new BrokerConfig();
  localBrokerConfig.setBrokerUrl(TEST_REMOTE_BROKER_URL);
  targetConnector.setLocalBrokerConfig(localBrokerConfig);
  BrokerConfig remoteBrokerConfig=new BrokerConfig();
  remoteBrokerConfig.setBrokerUrl(TEST_LOCAL_BROKER_URL);
  targetConnector.setRemoteBrokerConfig(remoteBrokerConfig);
  BridgeDestinationsConfig inboundDestinations=new BridgeDestinationsConfig();
  targetConnector.setInboundDestinations(inboundDestinations);
  BridgeDestinationsConfig outboundDestinations=new BridgeDestinationsConfig();
  outboundDestinations.setDestinations(createNewDestinations(INBOUND_SUFFIX,null));
  targetConnector.setOutboundDestinations(outboundDestinations);
  targetConnector.afterPropertiesSet();
  targetConnector.start();
  for (  String sourceName : TEST_SOURCES) {
    sendMessages(TEST_LOCAL_BROKER_URL,sourceName,TEST_BATCH_SIZE,null);
  }
  for (  final String destinationName : TEST_SOURCES) {
    receiveMessages(TEST_LOCAL_BROKER_URL,destinationName + INBOUND_SUFFIX,TEST_BATCH_SIZE,new BaseMatcher<Message>(){
      @Override public boolean matches(      Object message){
        boolean retVal=false;
        try {
          retVal=(destinationName + INBOUND_SUFFIX).matches(((TextMessage)message).getStringProperty(BridgeDestinationsConfig.DEFAULT_DESTINATION_NAME_HEADER));
        }
 catch (        JMSException e) {
          fail(e.getMessage());
        }
        return retVal;
      }
      @Override public void describeTo(      Description desc){
        desc.appendText("Message contains property " + BridgeDestinationsConfig.DEFAULT_DESTINATION_NAME_HEADER);
      }
    }
);
  }
  targetConnector.destroy();
}
