{
  Map<String,Map<String,String>> publishConfigurations=Profiles.getOverlayFactoryConfigurations(fabricService,options.getProfiles(),options.getVersion(),ZooKeeperPublishConfig.PROCESS_CONTAINER_ZK_PUBLISH_PID);
  Set<Map.Entry<String,Map<String,String>>> entries=publishConfigurations.entrySet();
  for (  Map.Entry<String,Map<String,String>> entry : entries) {
    String configName=entry.getKey();
    Map<String,String> exportConfig=entry.getValue();
    if (exportConfig != null && !exportConfig.isEmpty()) {
      JolokiaAgentHelper.substituteEnvironmentVariableExpressions(exportConfig,environmentVariables,fabricService,curator,true);
      ZooKeeperPublishConfig config=new ZooKeeperPublishConfig();
      try {
        configurer.configure(exportConfig,config);
        config.publish(curator,options,processConfig,container,environmentVariables);
      }
 catch (      Exception e) {
        LOG.warn("Failed to publish configuration " + configName + " of "+ config+ " due to: "+ e,e);
      }
    }
  }
}
