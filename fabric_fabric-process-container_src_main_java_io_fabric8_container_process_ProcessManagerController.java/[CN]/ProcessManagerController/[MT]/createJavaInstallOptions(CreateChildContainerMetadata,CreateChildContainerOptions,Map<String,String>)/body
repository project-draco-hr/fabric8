{
  Set<String> profileIds=options.getProfiles();
  String versionId=options.getVersion();
  Map<String,?> javaContainerConfig=Profiles.getOverlayConfiguration(fabricService,options.getProfiles(),options.getVersion(),ChildConstants.JAVA_CONTAINER_PID);
  JavaContainerConfig javaConfig=new JavaContainerConfig();
  configurer.configure(javaContainerConfig,javaConfig);
  javaConfig.updateEnvironmentVariables(environmentVariables);
  List<Profile> profiles=Profiles.getProfiles(fabricService,profileIds,versionId);
  Map<String,File> javaArtifacts=JavaContainers.getJavaContainerArtifactsFiles(fabricService,profiles,downloadExecutor);
  Container container=fabricService.getContainer(options.getName());
  if (container != null) {
    List<String> provisionList=new ArrayList<String>();
    for (    String name : javaArtifacts.keySet()) {
      int idx=name.indexOf(":mvn:");
      if (idx > 0) {
        name=name.substring(idx + 1);
      }
      provisionList.add(name);
    }
    Collections.sort(provisionList);
    container.setProvisionList(provisionList);
  }
  InstallOptions.InstallOptionsBuilder builder=InstallOptions.builder();
  builder.jarFiles(javaArtifacts.values());
  builder.id(options.getName());
  builder.environment(environmentVariables);
  String mainClass=environmentVariables.get(ChildConstants.JAVA_CONTAINER_ENV_VARS.FABRIC8_JAVA_MAIN);
  String name="java";
  if (!Strings.isNullOrBlank(mainClass)) {
    name+=" " + mainClass;
  }
  builder.name(name);
  metadata.setContainerType(name);
  builder.mainClass(mainClass);
  return builder.build();
}
