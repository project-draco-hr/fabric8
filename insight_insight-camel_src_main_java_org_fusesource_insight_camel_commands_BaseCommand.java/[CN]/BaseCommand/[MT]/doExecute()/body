{
  Configuration cfg=getConfiguration();
  Dictionary<String,Object> props=cfg.getProperties();
  if (props == null) {
    props=new Hashtable<String,Object>();
  }
  if (!reset && !clear && enabled == null && context == null && route == null) {
    Map<String,String> map=new TreeMap<String,String>();
    for (Enumeration<String> e=props.keys(); e.hasMoreElements(); ) {
      String s=e.nextElement();
      if (s.startsWith(getStrategy())) {
        map.put(s.substring(getStrategy().length() + 1),props.get(s).toString());
      }
    }
    if (map.isEmpty()) {
      System.out.println("No configuration set");
    }
    for (    Map.Entry<String,String> e : map.entrySet()) {
      System.out.println(e.getKey() + " = " + e.getValue());
    }
    return null;
  }
  if (reset) {
    Set<String> keys=new HashSet<String>();
    for (Enumeration<String> e=props.keys(); e.hasMoreElements(); ) {
      String s=e.nextElement();
      if (s.startsWith(getStrategy())) {
        keys.add(s);
      }
    }
    for (    String s : keys) {
      props.remove(s);
    }
  }
  String key;
  if (context != null) {
    key=getStrategy() + ".context." + context;
  }
 else   if (route != null) {
    key=getStrategy() + ".route." + route;
  }
 else {
    key=getStrategy() + ".enabled";
  }
  if (clear) {
    props.remove(key);
  }
 else   if (enabled != null) {
    props.put(key,enabled.toString());
  }
  cfg.update(props);
  return null;
}
