{
  if (LOG.isDebugEnabled()) {
    LOG.debug("Handling request for RFC '{}'",jcoFunction.getName());
  }
  SAPServerEndpoint sapEndpoint=(SAPServerEndpoint)getEndpoint();
  Exchange exchange=getEndpoint().createExchange(sapEndpoint.getMep());
  Structure request=RfcUtil.getRequest(serverContext.getRepository(),jcoFunction.getName());
  RfcUtil.extractJCoParameterListsIntoRequest(jcoFunction,request);
  if (LOG.isDebugEnabled()) {
    try {
      LOG.debug("Request: " + (request == null ? request : RfcUtil.marshal(request)));
    }
 catch (    IOException e) {
      LOG.warn("Failed to log request",e);
    }
  }
  try {
    Message message=exchange.getIn();
    message.setHeader("sap.sessionData",sessionData);
    message.setBody(request);
    getProcessor().process(exchange);
    if (exchange.getPattern().isOutCapable()) {
      if (exchange.hasOut()) {
        message=exchange.getOut();
      }
 else {
        message=exchange.getIn();
      }
      Structure response=message.getBody(Structure.class);
      if (LOG.isDebugEnabled()) {
        try {
          LOG.debug("Response: " + (response == null ? response : RfcUtil.marshal(response)));
        }
 catch (        Exception e) {
          LOG.warn("Failed to log response",e);
        }
      }
      RfcUtil.fillJCoParameterListsFromResponse(response,jcoFunction);
    }
  }
 catch (  IOException e) {
    getExceptionHandler().handleException("Failed to marshal request",e);
  }
catch (  Exception e) {
    getExceptionHandler().handleException("Failed to process request",e);
  }
}
