{
  try {
    String path=req.getPathInfo();
    if (path == null) {
      resp.setStatus(HttpServletResponse.SC_BAD_REQUEST);
      return;
    }
    if (path.startsWith("/")) {
      path=path.substring(1);
    }
    String location=req.getHeader(LOCATION_HEADER);
    if (location != null) {
      UploadContext result=move(location,path);
      addHeaders(resp,result.headers());
      resp.setStatus(HttpServletResponse.SC_ACCEPTED);
      return;
    }
    UploadContext result=doUpload(req.getInputStream(),path);
    if (result.status()) {
      addHeaders(resp,result.headers());
      String profile=req.getParameter("profile");
      String version=req.getParameter("version");
      if (profile != null && version != null) {
        ProjectRequirements requirements=toProjectRequirements(result);
        requirements.setProfileId(profile);
        requirements.setVersion(version);
        DeployResults deployResults=addToProfile(requirements);
        LOGGER.info(String.format("Deployed artifact %s to profile: %s",result.toArtifact(),deployResults));
      }
      resp.setStatus(HttpServletResponse.SC_ACCEPTED);
    }
 else {
      resp.setStatus(HttpServletResponse.SC_NOT_ACCEPTABLE);
    }
  }
 catch (  InvalidMavenArtifactRequest ex) {
    resp.setStatus(HttpServletResponse.SC_BAD_REQUEST);
    resp.setContentLength(0);
    resp.flushBuffer();
  }
catch (  Exception ex) {
    resp.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
    resp.setContentLength(0);
    resp.flushBuffer();
  }
}
