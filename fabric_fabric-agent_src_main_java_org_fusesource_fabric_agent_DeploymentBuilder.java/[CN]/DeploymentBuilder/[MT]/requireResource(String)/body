{
  Resource res=resources.get(location);
  if (res == null) {
    throw new IllegalStateException("Could not find resource for " + location);
  }
  List<Capability> caps=res.getCapabilities(IdentityNamespace.IDENTITY_NAMESPACE);
  if (caps.size() != 1) {
    throw new IllegalStateException("Resource does not have a single " + IdentityNamespace.IDENTITY_NAMESPACE + " capability");
  }
  Capability cap=caps.get(0);
  Map<String,Object> attrs=new HashMap<String,Object>();
  attrs.put(IdentityNamespace.IDENTITY_NAMESPACE,cap.getAttributes().get(IdentityNamespace.IDENTITY_NAMESPACE));
  attrs.put(IdentityNamespace.CAPABILITY_TYPE_ATTRIBUTE,cap.getAttributes().get(IdentityNamespace.CAPABILITY_TYPE_ATTRIBUTE));
  attrs.put(IdentityNamespace.CAPABILITY_VERSION_ATTRIBUTE,new VersionRange((Version)cap.getAttributes().get(IdentityNamespace.CAPABILITY_VERSION_ATTRIBUTE),true));
  requirements.addRequirement(new RequirementImpl(requirements,IdentityNamespace.IDENTITY_NAMESPACE,Collections.<String,String>emptyMap(),attrs));
}
