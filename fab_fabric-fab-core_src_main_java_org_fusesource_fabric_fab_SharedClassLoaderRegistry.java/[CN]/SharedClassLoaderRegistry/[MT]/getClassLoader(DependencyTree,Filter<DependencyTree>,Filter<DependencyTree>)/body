{
  DependencyClassLoader answer=null;
  if (excludeFilter != null && excludeFilter.matches(tree)) {
  }
 else   if (sharedFilter != null && sharedFilter.matches(tree)) {
synchronized (cache) {
      answer=cache.get(tree);
      if (answer == null) {
        answer=createClassLoader(tree,sharedFilter,excludeFilter);
        cache.put(tree,answer);
      }
    }
  }
 else {
    answer=createClassLoader(tree,sharedFilter,excludeFilter);
  }
  return answer;
}
