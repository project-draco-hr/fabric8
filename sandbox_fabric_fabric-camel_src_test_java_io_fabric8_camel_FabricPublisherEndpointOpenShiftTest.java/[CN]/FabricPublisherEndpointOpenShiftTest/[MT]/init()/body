{
  karafName=System.setProperty("karaf.name","root");
  FabricComponent component=new FabricComponent(){
    @Override public CuratorFramework getCurator(){
      return null;
    }
    @Override public Group<CamelNodeState> createGroup(    String path){
      return new Group<CamelNodeState>(){
        @Override public boolean isConnected(){
          return false;
        }
        @Override public void start(){
        }
        @Override public void close() throws IOException {
        }
        @Override public void add(        GroupListener<CamelNodeState> listener){
        }
        @Override public void remove(        GroupListener<CamelNodeState> listener){
        }
        @Override public void update(        CamelNodeState state){
        }
        @Override public Map<String,CamelNodeState> members(){
          return null;
        }
        @Override public boolean isMaster(){
          return false;
        }
        @Override public CamelNodeState master(){
          return null;
        }
        @Override public List<CamelNodeState> slaves(){
          return null;
        }
        @Override public CamelNodeState getLastState(){
          return null;
        }
      }
;
    }
  }
;
  endpoint=new FabricPublisherEndpoint("http://localhost",component,null,"child"){
    @Override protected int publicPort(    URI uri){
      return uri.getPort() + 42;
    }
  }
;
}
