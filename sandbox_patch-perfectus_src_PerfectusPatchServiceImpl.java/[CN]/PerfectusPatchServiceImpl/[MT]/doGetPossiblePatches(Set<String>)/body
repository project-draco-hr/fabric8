{
  Set<Patch> perfectusPatches=loadPerfectusPatches(false);
  Set<Patch> possiblePatches=new TreeSet<Patch>();
  Set<String> otherArtifacts=new TreeSet<String>();
  for (  String artifact : artifacts) {
    String mvn=getMavenArtifact(artifact);
    if (mvn == null) {
      continue;
    }
    String[] parts=mvn.split(":");
    String ga=parts[0] + ":" + parts[1];
    org.osgi.framework.Version artifactVersion=VersionTable.getVersion(parts[2]);
    boolean found=false;
    for (    Patch patch : perfectusPatches) {
      if (patch.getArtifacts().contains(ga)) {
        org.osgi.framework.Version ver=VersionTable.getVersion(patch.getVersion());
        if (isInMajorRange(artifactVersion,ver)) {
          possiblePatches.add(patch);
        }
        found=true;
      }
    }
    if (!found) {
      otherArtifacts.add(artifact);
    }
  }
  if (!otherArtifacts.isEmpty()) {
    Map<String,Set<String>> upgrades=doGetPossibleUpgrades(otherArtifacts);
    for (    Map.Entry<String,Set<String>> entry : upgrades.entrySet()) {
      String artifact=entry.getKey();
      for (      String version : entry.getValue()) {
        Patch patch=new PatchImpl(artifact + ":" + version,"|" + artifact.replace(':','|') + "|"+ version,Collections.singleton(artifact),Collections.<Issue>emptyList());
        possiblePatches.add(patch);
      }
    }
  }
  return possiblePatches;
}
