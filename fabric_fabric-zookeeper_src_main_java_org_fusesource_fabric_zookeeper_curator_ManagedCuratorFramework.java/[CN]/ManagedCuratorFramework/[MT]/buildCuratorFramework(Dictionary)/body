{
  String connectionString=readString(properties,ZOOKEEPER_URL,"");
  ensembleProvider.update(connectionString);
  String aclProviderId=readString(properties,ACL_PROVIDER,"");
  int sessionTimeoutMs=readInt(properties,SESSION_TIMEOUT,DEFAULT_SESSION_TIMEOUT_MS);
  int connectionTimeoutMs=readInt(properties,CONNECTION_TIMEOUT,DEFAULT_CONNECTION_TIMEOUT_MS);
  CuratorFrameworkFactory.Builder builder=CuratorFrameworkFactory.builder().ensembleProvider(ensembleProvider).connectionTimeoutMs(connectionTimeoutMs).sessionTimeoutMs(sessionTimeoutMs).retryPolicy(buildRetryPolicy(properties));
  if (isAuthorizationConfigured(properties)) {
    String scheme="digest";
    String password=readString(properties,ZOOKEEPER_PASSWORD,"");
    byte[] auth=("fabric:" + password).getBytes();
    builder=builder.authorization(scheme,auth);
  }
  if (!Strings.isNullOrEmpty(aclProviderId) && aclProviders.containsKey(aclProviderId)) {
    builder=builder.aclProvider(aclProviders.get(aclProviderId));
  }
  CuratorFramework framework=builder.build();
  framework.start();
  return framework;
}
