{
  final AtomicReference<MetaTypeObjectDTO> answer=new AtomicReference<>(null);
  MetadataHandler handler=new MetadataHandler(){
    @Override public void invoke(    MetaData metadata,    Properties resources){
      Map<String,Object> map=metadata.getDesignates();
      Map<String,Object> objects=metadata.getObjectClassDefinitions();
      Set<Map.Entry<String,Object>> entries=map.entrySet();
      for (      Map.Entry<String,Object> entry : entries) {
        String aPid=entry.getKey();
        Object value=objects.get(aPid);
        if (Objects.equal(pid,aPid) && value instanceof OCD) {
          OCD ocd=(OCD)value;
          answer.set(createMetaTypeObjectDTO(resources,ocd));
        }
      }
    }
  }
;
  findMetadataForProfile(versionId,profileId,handler);
  return answer.get();
}
