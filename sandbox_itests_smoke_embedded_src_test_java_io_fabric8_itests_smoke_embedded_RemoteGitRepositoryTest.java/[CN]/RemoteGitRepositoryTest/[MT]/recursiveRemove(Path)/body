{
  final AtomicInteger fileCount=new AtomicInteger();
  if (rootPath.toFile().exists()) {
    Files.walkFileTree(rootPath,new SimpleFileVisitor<Path>(){
      public FileVisitResult visitFile(      Path path,      BasicFileAttributes attrs) throws IOException {
        Path pattern=remoteRoot.toPath().relativize(path);
        try {
          git.rm().addFilepattern(pattern.toString()).call();
          fileCount.incrementAndGet();
        }
 catch (        Exception ex) {
          throw new IllegalStateException(ex);
        }
        return FileVisitResult.CONTINUE;
      }
    }
);
  }
  return fileCount.get() > 0;
}
