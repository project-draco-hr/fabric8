{
  if (!this.shouldRun) {
    return;
  }
  this.shouldRun=false;
  this.unRegisterMXBean();
  if (infoServer != null) {
    try {
      infoServer.stop();
    }
 catch (    Exception e) {
      LOG.warn("Exception shutting down DataNode",e);
    }
  }
  if (ipcServer != null) {
    ipcServer.stop();
  }
  if (dataXceiverServer != null) {
    ((DataXceiverServer)this.dataXceiverServer.getRunnable()).kill();
    this.dataXceiverServer.interrupt();
    if (this.threadGroup != null) {
      while (true) {
        this.threadGroup.interrupt();
        LOG.info("Waiting for threadgroup to exit, active threads is " + this.threadGroup.activeCount());
        if (this.threadGroup.activeCount() == 0) {
          break;
        }
        try {
          Thread.sleep(1000);
        }
 catch (        InterruptedException e) {
        }
      }
    }
    try {
      this.dataXceiverServer.join();
    }
 catch (    InterruptedException ie) {
    }
  }
  RPC.stopProxy(namenode);
  if (upgradeManager != null)   upgradeManager.shutdownUpgrade();
  if (blockScannerThread != null) {
    blockScannerThread.interrupt();
    try {
      blockScannerThread.join(3600000L);
    }
 catch (    InterruptedException ie) {
    }
  }
  if (storage != null) {
    try {
      this.storage.unlockAll();
    }
 catch (    IOException ie) {
    }
  }
  if (dataNodeThread != null) {
    dataNodeThread.interrupt();
    try {
      dataNodeThread.join();
    }
 catch (    InterruptedException ie) {
    }
  }
  if (data != null) {
    data.shutdown();
  }
  if (myMetrics != null) {
    myMetrics.shutdown();
  }
}
