{
  preCreateContainer(name);
  FabricValidations.validateProfileNames(profiles);
  if (isEnsembleServer && newUserPassword == null) {
    newUserPassword=zookeeperPassword != null ? zookeeperPassword : fabricService.getZookeeperPassword();
  }
  CreateJCloudsContainerOptions.Builder builder=CreateJCloudsContainerOptions.builder().name(name).bindAddress(bindAddress).resolver(resolver).manualIp(manualIp).ensembleServer(isEnsembleServer).credential(credential).group(group).hardwareId(hardwareId).identity(identity).osFamily(osFamily).osVersion(osVersion).imageId(imageId).instanceType(instanceType).locationId(locationId).number(number).nodeOptions(CloudUtils.parseProviderOptions(options)).owner(owner).adminAccess(!disableAdminAccess).publicKeyFile(publicKeyFile).contextName(contextName).providerName(providerName).apiName(apiName).user(user).password(password).proxyUri(proxyUri != null ? proxyUri : fabricService.getMavenRepoURI()).zookeeperUrl(fabricService.getZookeeperUrl()).zookeeperPassword(isEnsembleServer && zookeeperPassword != null ? zookeeperPassword : fabricService.getZookeeperPassword()).jvmOpts(jvmOpts).environmentalVariable(environmentalVariables).version(version).withUser(newUser,newUserPassword,newUserRole).profiles(getProfileNames()).dataStoreProperties(getDataStoreProperties()).dataStoreType(dataStoreType != null && isEnsembleServer ? dataStoreType : fabricService.getDataStore().getType()).uploadDistribution(!distributionUploadDisable);
  if (path != null && !path.isEmpty()) {
    builder.path(path);
  }
  CreateContainerMetadata[] metadatas=fabricService.createContainers(builder.build(),new PrintStreamCreationStateListener(System.out));
  if (isEnsembleServer && metadatas != null && metadatas.length > 0 && metadatas[0].isSuccess()) {
    ShellUtils.storeZookeeperPassword(session,metadatas[0].getCreateOptions().getZookeeperPassword());
  }
  displayContainers(metadatas);
  return null;
}
