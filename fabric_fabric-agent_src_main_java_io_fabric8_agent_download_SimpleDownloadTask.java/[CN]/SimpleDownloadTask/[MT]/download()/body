{
  LOG.trace("Downloading [" + url + "]");
  if (url.startsWith(BLUEPRINT_PREFIX) || url.startsWith(SPRING_PREFIX)) {
    return downloadBlueprintOrSpring();
  }
  try {
    URL urlObj=new URL(url);
    File file=new File(getFileName(urlObj.getFile()));
    if (file.exists()) {
      return file;
    }
    File dir=new File(System.getProperty("karaf.data"),"fabric-agent");
    dir.mkdirs();
    if (!dir.isDirectory()) {
      throw new IOException("Unable to create directory " + dir.toString());
    }
    File tmpFile=File.createTempFile("download-",null,dir);
    InputStream is=urlObj.openStream();
    try {
      OutputStream os=new FileOutputStream(tmpFile);
      try {
        copy(is,os);
      }
  finally {
        os.close();
      }
    }
  finally {
      is.close();
    }
    if (file.exists() && !file.delete()) {
      throw new IOException("Unable to delete file: " + file.toString());
    }
    if (!tmpFile.renameTo(file)) {
      throw new IOException("Unable to rename file " + tmpFile.toString() + " to "+ file.toString());
    }
    return file;
  }
 catch (  IOException ignore) {
    LOG.debug(Ix2 + "Could not download [" + url+ "]");
    LOG.trace(Ix2 + "Reason [" + ignore.getClass().getName()+ ": "+ ignore.getMessage()+ "]");
  }
  throw new IOException("URL [" + url + "] could not be resolved.");
}
