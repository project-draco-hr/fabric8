{
  Project project=getSelectedProject(builder.getUIContext());
  final ResourcesFacet resourcesFacet=project.getFacet(ResourcesFacet.class);
  WebResourcesFacet webResourcesFacet=null;
  if (project.hasFacet(WebResourcesFacet.class)) {
    webResourcesFacet=project.getFacet(WebResourcesFacet.class);
  }
  componentNameFilter.setValueChoices(CamelCommandsHelper.createComponentNameValues(project));
  componentNameFilter.setDefaultValue("<all>");
  componentName.setValueChoices(CamelCommandsHelper.createComponentNameValues(project,componentNameFilter,false));
  componentName.addValueChangeListener(new ValueChangeListener(){
    @Override public void valueChanged(    ValueChangeEvent event){
      String component=event.getNewValue() != null ? event.getNewValue().toString() : null;
      if (component != null) {
        String description=CamelCatalogHelper.getComponentDescription(component);
        componentName.setNote(description != null ? description : "");
      }
 else {
        componentName.setNote("");
      }
    }
  }
);
  instanceName.setDefaultValue(new Callable<String>(){
    @Override public String call() throws Exception {
      String value=componentName.getValue();
      if (value != null) {
        value=value.replaceAll("-","");
      }
      List<CamelEndpointDetails> endpoints=new ArrayList<>();
      ResourceVisitor visitor=new XmlResourcesCamelEndpointsVisitor(resourcesFacet,endpoints);
      resourcesFacet.visitResources(visitor);
      Iterator<CamelEndpointDetails> it=endpoints.iterator();
      while (it.hasNext()) {
        CamelEndpointDetails det=it.next();
        if (det.getEndpointInstance() != null) {
          if (det.getEndpointInstance().equals(instanceName)) {
            return null;
          }
        }
      }
      return value;
    }
  }
);
  xml.setValueChoices(new XmlFileCompleter(resourcesFacet,webResourcesFacet).getFiles());
  builder.add(componentNameFilter).add(componentName).add(instanceName).add(xml);
}
