{
  RepositorySystem repositorySystem=RepositorySystemFactory.newRepositorySystem();
  File rootPom=new File(getClass().getClassLoader().getResource("test.pom").getPath());
  DefaultRepositorySystemSession session=new DefaultRepositorySystemSession();
  session.setLocalRepositoryManager(new SimpleLocalRepositoryManager(PathHelper.getUserMavenRepository()));
  session.setOffline(false);
  session.setDependencySelector(new AndDependencySelector(new ScopeDependencySelector("test","provided"),new OptionalDependencySelector(),new ExclusionDependencySelector()));
  List<RemoteRepository> repositories=null;
  Map<String,String> props=new HashMap<String,String>();
  props.put(ArtifactProperties.LOCAL_PATH,rootPom.toString());
  Artifact root=new DefaultArtifact("#groupId","#artifactId",null,"pom","#version",props,rootPom);
  ArtifactDescriptorResult artifactDescriptorResult=repositorySystem.readArtifactDescriptor(session,new ArtifactDescriptorRequest(root,repositories,null));
  CollectRequest request=new CollectRequest(artifactDescriptorResult.getDependencies(),null,repositories);
  DependencyFilter filter=new AndDependencyFilter();
  List<ArtifactResult> results=repositorySystem.resolveDependencies(session,request,filter);
  assertNotNull(results);
  assertEquals(1,results.size());
  assertTrue(results.get(0).getArtifact().getFile().toString().contains("org.osgi.core-4.2.0.jar"));
}
