{
  CamelCatalog catalog=new DefaultCamelCatalog();
  catalog.setSuggestionStrategy(new LuceneSuggestionStrategy());
  List<CamelEndpointDetails> endpoints=new ArrayList<>();
  Set<File> javaFiles=new LinkedHashSet<File>();
  Set<File> xmlFiles=new LinkedHashSet<File>();
  if (includeJava) {
    for (    String dir : project.getCompileSourceRoots()) {
      findJavaFiles(new File(dir),javaFiles);
    }
    if (includeTest) {
      for (      String dir : project.getTestCompileSourceRoots()) {
        findJavaFiles(new File(dir),javaFiles);
      }
    }
  }
  if (includeXml) {
    for (    Resource dir : project.getResources()) {
      findXmlFiles(new File(dir.getDirectory()),xmlFiles);
    }
    if (includeTest) {
      for (      Resource dir : project.getTestResources()) {
        findXmlFiles(new File(dir.getDirectory()),xmlFiles);
      }
    }
  }
  for (  File file : javaFiles) {
    try {
      String fqn=file.getPath();
      String baseDir=".";
      JavaClassSource clazz=(JavaClassSource)Roaster.parse(file);
      if (clazz != null) {
        RouteBuilderParser.parseRouteBuilder(clazz,baseDir,fqn,endpoints);
      }
    }
 catch (    Exception e) {
      getLog().warn("Error parsing java file " + file + " code due "+ e.getMessage());
    }
  }
  for (  File file : xmlFiles) {
    try {
      String fqn=file.getPath();
      String baseDir=".";
      InputStream is=new FileInputStream(file);
      XmlRouteParser.parseXmlRoute(is,baseDir,fqn,endpoints);
      is.close();
    }
 catch (    Exception e) {
      getLog().warn("Error parsing xml file " + file + " code due "+ e.getMessage());
    }
  }
  boolean allOk=true;
  for (  CamelEndpointDetails detail : endpoints) {
    EndpointValidationResult result=catalog.validateEndpointProperties(detail.getEndpointUri());
    if (!result.isSuccess()) {
      allOk=false;
      StringBuilder sb=new StringBuilder();
      sb.append("Camel endpoint validation error: ").append(asRelativeFile(detail.getFileName()));
      if (detail.getLineNumber() != null) {
        sb.append(" at line: ").append(detail.getLineNumber());
      }
      sb.append("\n\n");
      String out=result.summaryErrorMessage(false);
      sb.append(out);
      sb.append("\n\n");
      getLog().warn(sb.toString());
    }
  }
  if (failOnError && !allOk) {
    throw new MojoExecutionException("Camel endpoint validation failed");
  }
  if (allOk) {
    getLog().info("Camel endpoint validation successful");
  }
}
