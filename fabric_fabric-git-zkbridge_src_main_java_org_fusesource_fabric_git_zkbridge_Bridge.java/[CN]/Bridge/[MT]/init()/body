{
  singleton.add(this);
  executors=Executors.newSingleThreadScheduledExecutor();
  executors.scheduleWithFixedDelay(new Runnable(){
    @Override public void run(){
      try {
        if (gitService != null) {
          String login=getContainerLogin();
          String token=generateContainerToken(curator);
          CredentialsProvider cp=new UsernamePasswordCredentialsProvider(login,token);
          if (singleton.isMaster()) {
            update(gitService.get(),curator,cp);
          }
 else {
            updateLocal(gitService.get(),curator,cp);
          }
        }
      }
 catch (      Exception e) {
        if (LOGGER.isDebugEnabled()) {
          LOGGER.debug("Unable to sync git/zookeeper",e);
        }
 else {
          LOGGER.info("Unable to sync git / zookeeper: " + e.getClass().getName() + ": "+ e.getMessage());
        }
      }
    }
  }
,period,period,TimeUnit.MILLISECONDS);
}
