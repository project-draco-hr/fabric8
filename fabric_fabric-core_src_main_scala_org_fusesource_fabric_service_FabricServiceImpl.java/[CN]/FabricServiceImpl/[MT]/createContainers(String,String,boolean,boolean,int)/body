{
  Container[] containers=new Container[number];
  try {
    URI uri=URI.create(url);
    ContainerProvider provider=getProvider(uri.getScheme());
    if (provider == null) {
      throw new FabricException("Unable to find an container provider supporting uri '" + url + "'");
    }
    if (!isEnsembleServer) {
      final String zooKeeperUrl=getZooKeeperUrl();
      for (int i=0; i < number; i++) {
        String containerName=name;
        if (number > 1) {
          containerName+=i + 1;
        }
        String parent="";
        if (provider instanceof ChildContainerProvider) {
          parent=getParentFromURI(uri);
        }
        createContainerConfig(parent,containerName);
        containers[i]=new ContainerImpl(null,containerName,FabricServiceImpl.this);
      }
      provider.create(getMavenRepoURI(),uri,name,zooKeeperUrl,isEnsembleServer,debugContainer,number);
    }
 else {
      provider.create(getMavenRepoURI(),uri,name,null,isEnsembleServer,debugContainer,number);
    }
  }
 catch (  FabricException e) {
    throw e;
  }
catch (  Exception e) {
    throw new FabricException(e);
  }
  return containers;
}
