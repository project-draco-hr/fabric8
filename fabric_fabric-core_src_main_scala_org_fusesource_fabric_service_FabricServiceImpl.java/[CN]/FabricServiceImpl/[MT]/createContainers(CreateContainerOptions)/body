{
  if (options.getZookeeperUrl() == null && !options.isDebugContainer()) {
    options.setZookeeperUrl(getZookeeperUrl());
  }
  if (options.getProxyUri() == null) {
    options.setProxyUri(getMavenRepoURI());
  }
  try {
    ContainerProvider provider=getProvider(options.getProviderType());
    if (provider == null) {
      throw new FabricException("Unable to find a container provider supporting '" + options.getProviderType() + "'");
    }
    Container parent=options.getParent() != null ? getContainer(options.getParent()) : null;
    Set<? extends CreateContainerMetadata> metadatas=provider.create(options);
    for (    CreateContainerMetadata metadata : metadatas) {
      if (metadata.isSuccess()) {
        if (!options.isEnsembleServer()) {
          createContainerConfig(parent != null ? parent.getId() : "",metadata.getContainerName());
          ByteArrayOutputStream baos=new ByteArrayOutputStream();
          ObjectOutputStream oos=new ObjectOutputStream(baos);
          oos.writeObject(metadata);
          oos.close();
          ZooKeeperUtils.set(zooKeeper,ZkPath.CONTAINER_METADATA.getPath(metadata.getContainerName()),baos.toByteArray());
        }
        ((CreateContainerBasicMetadata)metadata).setContainer(new ContainerImpl(parent,metadata.getContainerName(),FabricServiceImpl.this));
        ((ContainerImpl)metadata.getContainer()).setMetadata(metadata);
        logger.info("The container " + metadata.getContainerName() + " has been successfully created");
      }
 else {
        logger.info("The creation of the container " + metadata.getContainerName() + " has failed",metadata.getFailure());
      }
    }
    return metadatas.toArray(new CreateContainerMetadata[metadatas.size()]);
  }
 catch (  FabricException e) {
    throw e;
  }
catch (  Exception e) {
    throw new FabricException(e);
  }
}
