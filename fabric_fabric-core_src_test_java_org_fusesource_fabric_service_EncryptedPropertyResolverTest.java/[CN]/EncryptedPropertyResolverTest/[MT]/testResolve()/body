{
  CuratorFramework curator=createMock(CuratorFramework.class);
  GetDataBuilder getDataBuilder=createMock(GetDataBuilder.class);
  expect(curator.getData()).andReturn(getDataBuilder).anyTimes();
  expect(getDataBuilder.forPath(AUTHENTICATION_CRYPT_ALGORITHM.getPath())).andReturn("PBEWithMD5AndDES".getBytes()).anyTimes();
  expect(getDataBuilder.forPath(AUTHENTICATION_CRYPT_PASSWORD.getPath())).andReturn("mypassword".getBytes()).anyTimes();
  replay(curator);
  replay(getDataBuilder);
  EncryptedPropertyResolver resolver=new EncryptedPropertyResolver();
  resolver.bindCurator(curator);
  resolver.activate(createMock(ComponentContext.class));
  assertEquals("encryptedpassword",resolver.resolve(null,null,"crypt:URdoo9++D3tsoC9ODrTfLNK5WzviknO3Ig6qbI2HuvQ="));
  verify(curator);
  verify(getDataBuilder);
}
