{
  super.populateRoutes();
  List<EcaRouteDefinition> ecaRouteDefinitions=new ArrayList<EcaRouteDefinition>();
  List<RouteDefinition> routes=getRouteCollection().getRoutes();
  for (  RouteDefinition route : routes) {
    if (route instanceof EcaRouteDefinition) {
      EcaRouteDefinition ecaRouteDefinition=(EcaRouteDefinition)route;
      if (ecaRouteDefinition.getEcaDefinition() != null) {
        ecaRouteDefinition.getEcaDefinition().validate(getContext());
        ecaRouteDefinitions.add(ecaRouteDefinition);
      }
    }
  }
  for (  EcaRouteDefinition ecaRouteDefinition : ecaRouteDefinitions) {
    List<String> targetIds=ecaRouteDefinition.getEcaDefinition().getTargetIds(getContext());
    for (    final String targetId : targetIds) {
      RouteDefinition rd=getRouteCollection().getRouteDefinition(targetId);
      if (rd != null) {
        if (!isWired(ecaRouteDefinition.getEcaDefinition(),rd)) {
          rd.getOutputs().add(new ToDefinition(ecaRouteDefinition.getEcaDefinition().getUri()));
        }
      }
 else {
        Endpoint endpoint=resolveEndpoint(targetId);
        if (endpoint != null) {
          String routeId=EndpointHelper.getRouteIdFromEndpoint(endpoint);
          if (routeId != null) {
            rd=getRouteCollection().getRouteDefinition(targetId);
            if (!isWired(ecaRouteDefinition.getEcaDefinition(),rd)) {
              rd.getOutputs().add(new ToDefinition(ecaRouteDefinition.getEcaDefinition().getUri()));
            }
          }
 else {
            RouteDefinition newRoute=getRouteCollection().from(endpoint);
            newRoute.setId(targetId);
            RoutePolicy routePolicy=new RoutePolicy(){
              public void onInit(              Route route){
              }
              public void onExchangeBegin(              Route route,              Exchange exchange){
                exchange.setFromRouteId(targetId);
              }
              public void onExchangeDone(              Route route,              Exchange exchange){
              }
            }
;
            List<RoutePolicy> routePolicies=new ArrayList<RoutePolicy>();
            routePolicies.add(routePolicy);
            newRoute.setRoutePolicies(routePolicies);
            newRoute.getOutputs().add(new ToDefinition(ecaRouteDefinition.getEcaDefinition().getUri()));
            getRouteCollection().getRoutes().add(newRoute);
            getContext().addRouteDefinition(newRoute);
          }
        }
 else {
          throw new IllegalArgumentException("Target " + targetId + " isn't a routeId or an endpoint");
        }
      }
    }
  }
}
