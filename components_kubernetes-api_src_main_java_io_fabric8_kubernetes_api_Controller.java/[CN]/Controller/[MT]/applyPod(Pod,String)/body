{
  String namespace=getNamespace();
  String id=getName(pod);
  Objects.notNull(id,"No name for " + pod + " "+ sourceName);
  if (isServicesOnlyMode()) {
    LOG.debug("Only processing Services right now so ignoring Pod: " + namespace + ":"+ id);
    return;
  }
  if (podMap == null) {
    podMap=getPodMap(kubernetes,namespace);
  }
  Pod old=podMap.get(id);
  if (isRunning(old)) {
    if (UserConfigurationCompare.configEqual(pod,old)) {
      LOG.info("Pod hasn't changed so not doing anything");
    }
 else {
      if (isRecreateMode()) {
        kubernetes.deletePod(pod,namespace);
        doCreatePod(pod,namespace,sourceName);
      }
 else {
        LOG.info("Updating a pod from " + sourceName + " namespace "+ namespace+ " name "+ getName(pod));
        try {
          Object answer=kubernetes.updatePod(id,pod);
          LOG.info("Updated pod result: " + answer);
        }
 catch (        Exception e) {
          onApplyError("Failed to update pod from " + sourceName + ". "+ e+ ". "+ pod,e);
        }
      }
    }
  }
 else {
    if (!isAllowCreate()) {
      LOG.warn("Creation disabled so not creating a pod from " + sourceName + " namespace "+ namespace+ " name "+ getName(pod));
    }
 else {
      doCreatePod(pod,namespace,sourceName);
    }
  }
}
