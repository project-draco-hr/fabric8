{
  String namespace=getNamespace();
  String id=getName(service);
  Objects.notNull(id,"No name for " + service + " "+ sourceName);
  if (isIgnoreServiceMode()) {
    LOG.debug("Ignoring Service: " + namespace + ":"+ id);
    return;
  }
  Service old=kubernetes.services().inNamespace(namespace).withName(id).get();
  if (isRunning(old)) {
    if (UserConfigurationCompare.configEqual(service,old)) {
      LOG.info("Service hasn't changed so not doing anything");
    }
 else {
      if (isRecreateMode()) {
        kubernetes.services().inNamespace(namespace).withName(id).delete();
        doCreateService(service,namespace,sourceName);
      }
 else {
        LOG.info("Updating a service from " + sourceName);
        try {
          Object answer=kubernetes.services().inNamespace(namespace).withName(id).update(service);
          logGeneratedEntity("Updated service: ",namespace,service,answer);
        }
 catch (        Exception e) {
          onApplyError("Failed to update controller from " + sourceName + ". "+ e+ ". "+ service,e);
        }
      }
    }
  }
 else {
    if (!isAllowCreate()) {
      LOG.warn("Creation disabled so not creating a service from " + sourceName + " namespace "+ namespace+ " name "+ getName(service));
    }
 else {
      doCreateService(service,namespace,sourceName);
    }
  }
}
