{
  String id=getName(entity);
  Objects.notNull(id,"No name for " + entity + " "+ sourceName);
  if (isServicesOnlyMode()) {
    LOG.debug("Only processing Services right now so ignoring OAuthClient: " + id);
    return;
  }
  OAuthClient old=kubernetes.getOAuthClient(id);
  if (isRunning(old)) {
    if (ConfigurationCompare.configEqual(entity,old)) {
      LOG.info("OAuthClient hasn't changed so not doing anything");
    }
 else {
      if (isRecreateMode()) {
        kubernetes.deleteOAuthClient(id);
        doCreateOAuthClient(entity,sourceName);
      }
 else {
        try {
          Object answer=kubernetes.updateOAuthClient(id,entity);
          LOG.info("Updated pod result: " + answer);
        }
 catch (        Exception e) {
          onApplyError("Failed to update pod from " + sourceName + ". "+ e+ ". "+ entity,e);
        }
      }
    }
  }
 else {
    if (!isAllowCreate()) {
      LOG.warn("Creation disabled so not creating an OAuthClient from " + sourceName + " name "+ getName(entity));
    }
 else {
      doCreateOAuthClient(entity,sourceName);
    }
  }
}
