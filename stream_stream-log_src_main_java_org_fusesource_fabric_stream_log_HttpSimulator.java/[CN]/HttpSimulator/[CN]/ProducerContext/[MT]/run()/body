{
  CamelContext context=new DefaultCamelContext();
  try {
    PipedInputStream in=new PipedInputStream();
    out=new PrintStream(new PipedOutputStream(in));
    LogStreamProducer p=new LogStreamProducer();
    p.setBatchSize(batchSize);
    p.setBatchTimeout(batchTimeout);
    p.setCompress(compress);
    String broker=brokers.get(id % brokers.size());
    p.setBroker(broker);
    String destination=destinations.get(id % destinations.size());
    p.setDestination(destination);
    p.setIs(in);
    p.configure(context);
    context.start();
    System.out.println(format("Started HTTP log event simulator #" + id + " generating %,.2f events/sec",randomEntriesPerSec));
    startedLatch.countDown();
    long nextMealTime=System.currentTimeMillis() + nextFeedDelay();
    while (!done) {
      long now=System.currentTimeMillis();
      if (now >= nextMealTime) {
        feedTheCamel(now);
        nextMealTime=now + nextFeedDelay();
      }
      long remaining=nextMealTime - now;
      if (remaining > 0) {
        Thread.sleep(Math.min(remaining,1000));
      }
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
 finally {
    try {
      context.stop();
    }
 catch (    Exception e) {
    }
  }
}
