{
  System.out.println("Create test profile:" + profileId + " in datastore.");
  ProfileService profileService=fabricService.adapt(ProfileService.class);
  List<String> versions=profileService.getVersions();
  if (!versions.contains(versionId)) {
    Version version=VersionBuilder.Factory.create(versionId).getVersion();
    profileService.createVersion(version);
  }
  Profile profile=ProfileBuilder.Factory.create(versionId,profileId).getProfile();
  fabricService.adapt(ProfileRegistry.class).createProfile(profile);
  GitUtils.waitForBranchUpdate(curator,versionId);
  GitUtils.checkoutBranch(git,"origin",versionId);
  PullResult pullResult=git.pull().setCredentialsProvider(getCredentialsProvider()).setRebase(true).call();
  assertTrue(pullResult.isSuccessful());
  String relativeProfileDir="fabric/profiles/" + profileId + ".profile";
  File testProfileDir=new File(git.getRepository().getWorkTree(),relativeProfileDir);
  assertTrue(testProfileDir.exists());
  File testProfileConfig=new File(testProfileDir,"io.fabric8.agent.properties");
  assertTrue(testProfileConfig.exists());
}
