{
  System.out.println("Create test profile:" + profile + " in git.");
  GitUtils.checkoutBranch(git,"origin",version);
  String relativeProfileDir="fabric/profiles/" + profile + ".profile";
  File testProfileDir=new File(git.getRepository().getWorkTree(),relativeProfileDir);
  testProfileDir.mkdirs();
  File testProfileConfig=new File(testProfileDir,"io.fabric8.agent.properties");
  testProfileConfig.createNewFile();
  Files.writeToFile(testProfileConfig,"",Charset.defaultCharset());
  git.add().addFilepattern(relativeProfileDir).call();
  git.commit().setAll(true).setMessage("Create " + profile).call();
  PullResult pullResult=git.pull().setCredentialsProvider(getCredentialsProvider()).setRebase(true).call();
  git.push().setCredentialsProvider(getCredentialsProvider()).setPushAll().setRemote("origin").call();
  GitUtils.waitForBranchUpdate(curator,version);
  for (int i=0; i < 5; i++) {
    if (fabricService.getDataStore().hasProfile(version,profile)) {
      return;
    }
 else {
      Thread.sleep(1000);
    }
  }
  fail("Expected to find profile " + profile + " in version "+ version);
}
