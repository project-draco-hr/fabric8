{
  connect();
  try {
    Map<String,Object> embeddedResources=new HashMap<String,Object>();
    Properties instructions=createInstructions(embeddedResources);
    PreConditionException.validateNotNull(instructions,"Instructions");
    String fabUri=instructions.getProperty(ServiceConstants.INSTR_FAB_URL);
    if (fabUri == null || fabUri.trim().length() == 0) {
      throw new IOException("Instructions file must contain a property named " + ServiceConstants.INSTR_FAB_URL);
    }
    String extraImportPackages=classPathResolver.getExtraImportPackages();
    HashSet<String> actualImports=new HashSet<String>();
    InputStream rc=BndUtils.createBundle(URLUtils.prepareInputStream(new URL(fabUri),configuration.getCertificateCheck()),instructions,fabUri,OverwriteMode.MERGE,embeddedResources,extraImportPackages,actualImports,this);
    if (getConfiguration().isInstallMissingDependencies()) {
      installMissingDependencies(actualImports);
    }
 else {
      LOG.info("Not installing dependencies as not enabled");
    }
    return rc;
  }
 catch (  IOException e) {
    throw e;
  }
catch (  Exception e) {
    throw new IOException(e.getMessage(),e);
  }
}
