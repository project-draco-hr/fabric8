{
  if (LOG.isDebugEnabled()) {
    LOG.debug("Creating containers from JSON data: " + options);
  }
  String providerType=(String)options.get("providerType");
  if (providerType == null) {
    throw new RuntimeException("No providerType provided");
  }
  CreateContainerBasicOptions.Builder builder=null;
  ObjectMapper mapper=new ObjectMapper();
  mapper.configure(DeserializationConfig.Feature.FAIL_ON_UNKNOWN_PROPERTIES,false);
  mapper.configure(DeserializationConfig.Feature.ACCEPT_SINGLE_VALUE_AS_ARRAY,true);
  if (providerType.equals("child")) {
    builder=mapper.convertValue(options,CreateChildContainerOptions.Builder.class);
    builder.resolver(null);
  }
 else   if (providerType.equals("ssh")) {
    builder=mapper.convertValue(options,CreateSshContainerOptions.Builder.class);
  }
 else   if (providerType.equals("jclouds")) {
    builder=mapper.convertValue(options,CreateJCloudsContainerOptions.Builder.class);
  }
  if (builder == null) {
    throw new RuntimeException("Unknown provider type : " + providerType);
  }
  builder.zookeeperPassword(getFabricService().getZookeeperPassword());
  builder.zookeeperUrl(getFabricService().getZookeeperUrl());
  Object profileObject=options.get("profiles");
  if (profileObject != null) {
    List profiles=mapper.convertValue(profileObject,List.class);
    builder.profiles(profiles);
  }
  CreateContainerBasicOptions build=builder.build();
  if (LOG.isDebugEnabled()) {
    LOG.debug("Created container options: " + build + " with profiles "+ build.getProfiles());
  }
  CreateContainerMetadata<?> metadatas[]=getFabricService().createContainers(build);
  Map<String,String> rc=new HashMap<String,String>();
  for (  CreateContainerMetadata<?> metadata : metadatas) {
    if (!metadata.isSuccess()) {
      rc.put(metadata.getContainerName(),metadata.getFailure().getMessage());
    }
  }
  return rc;
}
