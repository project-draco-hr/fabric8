{
  String expctedMaster="http://expected.master:80";
  String expectedNamespace="expected.namespace";
  String expectedDomain="expected.domain";
  String expectedConfigUrl="http://expected.env.config/kubernetes.json";
  System.setProperty(KUBERNETES_MASTER,expctedMaster);
  System.setProperty(KUBERNETES_DOMAIN,expectedDomain);
  System.setProperty(KUBERNETES_NAMESPACE,expectedNamespace);
  System.setProperty(NAMESPACE_LAZY_CREATE_ENABLED,"true");
  System.setProperty(NAMESPACE_CLEANUP_TIMEOUT,"0");
  System.setProperty(NAMESPACE_CLEANUP_CONFIRM_ENABLED,"true");
  System.setProperty(NAMESPACE_CLEANUP_ENABLED,"true");
  System.setProperty(NAMESPACE_TO_USE,expectedNamespace);
  System.setProperty(ENVIRONMENT_INIT_ENABLED,"true");
  System.setProperty(ENVIRONMENT_CONFIG_URL,expectedConfigUrl);
  System.setProperty(ENVIRONMENT_CONFIG_RESOURCE_NAME,"");
  System.setProperty(ENVIRONMENT_DEPENDENCIES,"");
  System.setProperty(WAIT_TIMEOUT,"0");
  System.setProperty(WAIT_POLL_INTERVAL,"0");
  System.setProperty(WAIT_FOR_SERVICE_LIST,"");
  System.setProperty(WAIT_FOR_SERVICE_CONNECTION_ENABLED,"true");
  System.setProperty(WAIT_FOR_SERVICE_CONNECTION_TIMEOUT,"0");
  System.setProperty(ANSI_LOGGER_ENABLED,"true");
  System.setProperty(GOFABRIC8_ENABLED,"true");
  Configuration configuration=Configuration.fromMap(new HashMap<String,String>());
  assertEquals(expctedMaster,configuration.getMasterUrl());
  assertEquals(expectedNamespace,configuration.getNamespaceToUse());
  assertEquals(expectedDomain,configuration.getKubernetesDomain());
  assertEquals(0L,configuration.getWaitForServiceConnectionTimeout());
  assertEquals(0L,configuration.getWaitTimeout());
  assertEquals(0L,configuration.getWaitPollInterval());
  assertEquals(0L,configuration.getNamespaceCleanupTimeout());
  assertTrue(configuration.isAnsiLoggerEnabled());
  assertTrue(configuration.getGofabric8Enabled());
  assertTrue(configuration.isEnvironmentInitEnabled());
  assertTrue(configuration.isNamespaceCleanupEnabled());
  assertTrue(configuration.isNamespaceLazyCreateEnabled());
  assertTrue(configuration.isWaitForServiceConnectionEnabled());
}
