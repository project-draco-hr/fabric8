{
  deleteSafe(curator,ZkPath.CONFIG_VERSIONS.getPath());
  setData(curator,ZkPath.CONFIG_VERSION.getPath("1.0"),"description = default version\n");
  setData(curator,ZkPath.CONFIG_VERSIONS_PROFILE.getPath("1.0","p1") + "/thepid.properties","foo = bar\n");
  setData(curator,ZkPath.CONFIG_VERSIONS_PROFILE.getPath("1.0","p1") + "/thexml.xml","<hello/>\n");
  setData(curator,ZkPath.CONFIG_VERSIONS_CONTAINER.getPath("1.0","root"),"p1");
  ObjectId rev1=git.getRepository().getRef("HEAD").getObjectId();
  Bridge.update(git,curator);
  ObjectId rev2=git.getRepository().getRef("HEAD").getObjectId();
  Bridge.update(git,curator);
  ObjectId rev3=git.getRepository().getRef("HEAD").getObjectId();
  assertFalse(rev1.equals(rev2));
  assertTrue(rev2.equals(rev3));
  remote.checkout().setName("1.0").call();
  File tree=remote.getRepository().getWorkTree();
  Files.writeToFile(new File(tree,"p2/.metadata"),"\n",Charset.forName("UTF-8"));
  Files.writeToFile(new File(tree,"p2/anotherpid.properties"),"key = value\n",Charset.forName("UTF-8"));
  remote.add().addFilepattern(".").call();
  remote.commit().setMessage("Add p2 profile").call();
  setData(curator,ZkPath.CONFIG_VERSIONS_PROFILE.getPath("1.0","p3") + "/thepid.properties","foo = bar\n");
  rev1=git.getRepository().getRef("HEAD").getObjectId();
  Bridge.update(git,curator);
  rev2=git.getRepository().getRef("HEAD").getObjectId();
  Bridge.update(git,curator);
  rev3=git.getRepository().getRef("HEAD").getObjectId();
  assertFalse(rev1.equals(rev2));
  assertTrue(rev2.equals(rev3));
}
