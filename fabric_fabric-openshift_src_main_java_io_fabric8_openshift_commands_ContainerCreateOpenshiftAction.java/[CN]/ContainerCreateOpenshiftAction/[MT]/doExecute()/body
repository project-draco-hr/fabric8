{
  validateOpenShiftContainerName(name);
  preCreateContainer(name);
  FabricValidations.validateProfileNames(profiles);
  if (session != null) {
    if (Strings.isNullOrBlank(login)) {
      login=(String)session.get(OPENSHIFT_USER);
    }
    if (Strings.isNullOrBlank(password)) {
      password=(String)session.get(OPENSHIFT_USER_PASSWORD);
    }
  }
  CreateOpenshiftContainerOptions.Builder builder=CreateOpenshiftContainerOptions.builder().name(name).serverUrl(serverUrl).login(login).password(password).version(versionId).number(number).resolver("publichostname").ensembleServer(isEnsembleServer).zookeeperUrl(fabricService.getZookeeperUrl()).zookeeperPassword(isEnsembleServer && zookeeperPassword != null ? zookeeperPassword : fabricService.getZookeeperPassword()).proxyUri(proxyUri != null ? proxyUri : fabricService.getMavenRepoURI()).profiles(getProfileNames()).dataStoreProperties(getDataStoreProperties());
  if (gearSize != null) {
    builder.gearProfile(gearSize);
  }
  CreateContainerMetadata[] metadatas=fabricService.createContainers(builder.build());
  if (isEnsembleServer && metadatas != null && metadatas.length > 0 && metadatas[0].isSuccess()) {
    ShellUtils.storeZookeeperPassword(session,metadatas[0].getCreateOptions().getZookeeperPassword());
    if (session != null) {
      session.put(OPENSHIFT_USER,login);
      session.put(OPENSHIFT_USER_PASSWORD,password);
    }
  }
  displayContainers(metadatas);
  return null;
}
