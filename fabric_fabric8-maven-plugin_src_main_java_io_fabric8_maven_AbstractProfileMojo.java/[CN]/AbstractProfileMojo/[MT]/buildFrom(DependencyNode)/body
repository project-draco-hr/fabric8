{
  Artifact artifact=node.getArtifact();
  if (artifact != null) {
    DependencyDTO answer=new DependencyDTO();
    answer.setGroupId(artifact.getGroupId());
    answer.setArtifactId(artifact.getArtifactId());
    answer.setVersion(artifact.getVersion());
    answer.setClassifier(artifact.getClassifier());
    answer.setScope(artifact.getScope());
    answer.setType(artifact.getType());
    answer.setOptional(artifact.isOptional());
    String type=answer.getType();
    if (type != null && type.equals("pom")) {
      getLog().debug("Ignoring pom.xml for " + answer);
      return null;
    }
    int state=node.getState();
    if (state != DependencyNode.INCLUDED) {
      getLog().debug("Ignoring " + node);
      return null;
    }
    List children=node.getChildren();
    for (    Object child : children) {
      if (child instanceof DependencyNode) {
        DependencyNode childNode=(DependencyNode)child;
        if (childNode.getState() == DependencyNode.INCLUDED) {
          DependencyDTO childDTO=buildFrom(childNode);
          if (childDTO != null) {
            answer.addChild(childDTO);
          }
        }
      }
    }
    return answer;
  }
  return null;
}
