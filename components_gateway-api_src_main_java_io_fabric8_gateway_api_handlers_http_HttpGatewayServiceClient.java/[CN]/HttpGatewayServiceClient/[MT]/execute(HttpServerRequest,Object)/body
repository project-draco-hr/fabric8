{
  try {
    IMappedServices mappedServices=HttpMapping.getMapping(request,httpGateway.getMappedServices());
    ProxyMappingDetails proxyMappingDetails=mappedServices.getProxyMappingDetails();
    HttpClient client=null;
    if (proxyMappingDetails != null && proxyMappingDetails.getProxyServiceUrl() != null) {
      client=createClient(new URL(proxyMappingDetails.getProxyServiceUrl()));
    }
    if (client != null) {
      LOG.info("Proxying request " + request.uri() + " to service path: "+ proxyMappingDetails.getServicePath()+ " on service: "+ proxyMappingDetails.getProxyServiceUrl()+ " reverseServiceUrl: "+ proxyMappingDetails.getReverseServiceUrl());
      final HttpClient finalClient=client;
      Handler<HttpClientResponse> serviceResponseHandler=null;
      if (httpGateway.getApiManager().isApiManagerEnabled()) {
        serviceResponseHandler=httpGateway.getApiManager().getService().createServiceResponseHandler(finalClient,apiManagerResponseHandler);
      }
 else {
        serviceResponseHandler=new HttpServiceResponseHandler(finalClient,request);
      }
      if (mappedServices != null) {
        serviceResponseHandler=mappedServices.wrapResponseHandlerInPolicies(request,serviceResponseHandler,proxyMappingDetails);
      }
      final HttpClientRequest serviceRequest=client.request(request.method(),proxyMappingDetails.getServicePath(),serviceResponseHandler);
      serviceRequest.headers().set(request.headers());
      serviceRequest.setChunked(true);
      return serviceRequest;
    }
 else {
      LOG.info("Could not find matching proxy path for " + request.uri() + " from paths: "+ httpGateway.getMappedServices().keySet());
      HttpServerResponse httpServerResponse=request.response();
      httpServerResponse.setStatusCode(404);
      httpServerResponse.setStatusMessage("Could not find matching proxy path for " + request.uri() + " from paths: "+ httpGateway.getMappedServices().keySet());
      httpServerResponse.end();
    }
  }
 catch (  Throwable e) {
    LOG.error("Caught: " + e,e);
    request.response().setStatusCode(404);
    StringWriter buffer=new StringWriter();
    e.printStackTrace(new PrintWriter(buffer));
    request.response().setStatusMessage("Error: " + e + "\nStack Trace: "+ buffer);
    request.response().end();
  }
  return null;
}
