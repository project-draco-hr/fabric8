{
  sb.append(key);
  if (val instanceof Version) {
    sb.append(":Version=");
    sb.append(val);
  }
 else   if (val instanceof Long) {
    sb.append(":Long=");
    sb.append(val);
  }
 else   if (val instanceof Double) {
    sb.append(":Double=");
    sb.append(val);
  }
 else   if (val instanceof Iterable) {
    Iterable it=(Iterable)val;
    String scalar=null;
    for (    Object o : it) {
      String ts;
      if (o instanceof String) {
        ts="String";
      }
 else       if (o instanceof Long) {
        ts="Long";
      }
 else       if (o instanceof Double) {
        ts="Double";
      }
 else       if (o instanceof Version) {
        ts="Version";
      }
 else {
        throw new IllegalArgumentException("Unsupported scalar type: " + o);
      }
      if (scalar == null) {
        scalar=ts;
      }
 else       if (!scalar.equals(ts)) {
        throw new IllegalArgumentException("Unconsistent list type for attribute " + key);
      }
    }
    sb.append(":List<").append(scalar).append(">=");
    sb.append("\"");
    boolean first=true;
    for (    Object o : it) {
      if (first) {
        first=false;
      }
 else {
        sb.append(",");
      }
      sb.append(o.toString().replace("\"","\\\"").replace(",","\\,"));
    }
    sb.append("\"");
  }
 else {
    sb.append(attribute ? "=" : ":=");
    String s=val.toString();
    if (s.matches("[0-9a-zA-Z_\\-.]*")) {
      sb.append(s);
    }
 else {
      sb.append("\"").append(s.replace("\"","\\\\")).append("\"");
    }
  }
}
