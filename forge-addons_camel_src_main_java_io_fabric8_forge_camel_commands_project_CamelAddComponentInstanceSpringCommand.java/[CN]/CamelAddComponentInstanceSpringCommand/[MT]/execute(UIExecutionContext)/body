{
  Project project=getSelectedProject(context);
  JavaSourceFacet facet=project.getFacet(JavaSourceFacet.class);
  Dependency core=findCamelCoreDependency(project);
  if (core == null) {
    return Results.fail("The project does not include camel-core");
  }
  String camelComponentName=componentName.getValue();
  CamelComponentDetails details=new CamelComponentDetails();
  Result result=loadCamelComponentDetails(camelComponentName,details);
  if (result != null) {
    return result;
  }
  result=ensureCamelArtifactIdAdded(project,details,dependencyInstaller);
  if (result != null) {
    return result;
  }
  String generatePackageName=targetPackage.getValue();
  String generateClassName=className.getValue();
  String fqn=generatePackageName != null ? generatePackageName + "." + generateClassName : generateClassName;
  JavaResource existing=facet.getJavaResource(fqn);
  if (existing != null && existing.exists()) {
    return Results.fail("A class with name " + fqn + " already exists");
  }
  final JavaClassSource javaClass=Roaster.create(JavaClassSource.class);
  javaClass.setName(generateClassName);
  if (generatePackageName != null) {
    javaClass.setPackage(generatePackageName);
  }
  javaClass.addAnnotation("Component");
  javaClass.addImport("org.springframework.beans.factory.config.BeanDefinition");
  javaClass.addImport("org.springframework.beans.factory.annotation.Qualifier");
  javaClass.addImport("org.springframework.context.annotation.Bean");
  javaClass.addImport("org.springframework.context.annotation.Scope");
  javaClass.addImport("org.springframework.stereotype.Component");
  javaClass.addImport(details.getComponentClassQName());
  String componentClassName=details.getComponentClassName();
  String methodName="create" + Strings.capitalize(instanceName.getValue()) + "Component";
  String body=componentClassName + " component = new " + componentClassName+ "();\n/* TODO configure component here */\nreturn component;";
  MethodSource<JavaClassSource> method=javaClass.addMethod().setPublic().setReturnType(componentClassName).setName(methodName).setBody(body).addThrows(Exception.class);
  method.addAnnotation("Qualifier").setStringValue(camelComponentName);
  method.addAnnotation("Bean");
  method.addAnnotation("Scope").setLiteralValue("BeanDefinition.SCOPE_SINGLETON");
  facet.saveJavaSource(javaClass);
  return Results.success("Added spring factory class " + generateClassName + " to the project");
}
