{
  String content=null;
  String encoding=null;
  boolean isFile=file.isFile();
  if (includeContent && isFile) {
    try {
      byte[] bytes=Files.readBytes(file);
      content=toBase64(bytes);
      encoding=DEFAULT_ENCODING;
    }
 catch (    IOException e) {
      LOG.warn("Failed to load: " + file.getPath() + ". "+ e,e);
    }
  }
  String type=file.isDirectory() ? DIR_TYPE : FILE_TYPE;
  long size=0;
  if (isFile) {
    size=file.length();
  }
  String name=file.getName();
  String path=name;
  if (Strings.isNotBlank(parentPath)) {
    String separator=path.endsWith("/") ? "" : "/";
    path=parentPath + separator + name;
  }
  FileDTO fileDTO=new FileDTO(type,size,name,path,encoding,content);
  if (isFile && name.endsWith(".xml")) {
    try {
      Set<String> uris=XmlHelper.getNamespaces(file);
      if (uris.size() > 0) {
        String[] namespaces=uris.toArray(new String[uris.size()]);
        fileDTO.setXmlNamespaces(namespaces);
      }
    }
 catch (    Exception e) {
      LOG.warn("Failed to parse the XML namespaces in " + file + " due: "+ e.getMessage()+ ". This exception is ignored.",e);
    }
  }
  return fileDTO;
}
