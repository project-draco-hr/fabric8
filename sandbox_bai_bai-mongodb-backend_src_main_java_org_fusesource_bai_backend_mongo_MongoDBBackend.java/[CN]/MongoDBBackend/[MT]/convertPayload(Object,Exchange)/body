{
  Expression expression=getStoreBodyExpression();
  if (expression != null) {
    payload=expression.evaluate(exchange,Object.class);
  }
  if (payload == null) {
    return null;
  }
  String s=typeConverter.convertTo(String.class,payload);
  if (s.startsWith("{")) {
    Object answer=null;
    try {
      answer=JSON.parse(s);
    }
 catch (    JSONParseException ex) {
      LOG.warn("Attempt to convert " + payload + " to JSON failed: "+ ex,ex);
    }
    if (answer != null) {
      return answer;
    }
  }
  if (s.startsWith("<")) {
    ByteArrayOutputStream baos=new ByteArrayOutputStream();
    try {
      xmlJson.marshal(exchange,payload,baos);
      if (baos != null && baos.size() > 0) {
        String json=typeConverter.convertTo(String.class,baos);
        return JSON.parse(json);
      }
    }
 catch (    Exception e) {
      System.out.println(e);
    }
  }
  if (payload instanceof String) {
    return payload;
  }
  return typeConverter.convertTo(DBObject.class,payload);
}
