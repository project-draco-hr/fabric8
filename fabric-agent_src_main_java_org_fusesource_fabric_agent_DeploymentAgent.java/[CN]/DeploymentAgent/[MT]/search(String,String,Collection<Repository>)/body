{
  VersionRange range=new VersionRange(version,false,true);
  Feature bestFeature=null;
  Version bestVersion=null;
  for (  Repository repo : repositories) {
    Feature[] features;
    try {
      features=repo.getFeatures();
    }
 catch (    Exception e) {
      throw new IllegalStateException(e);
    }
    for (    Feature feature : features) {
      if (name.equals(feature.getName())) {
        Version v=new Version(VersionCleaner.clean(feature.getVersion()));
        if (range.contains(v)) {
          if (bestVersion == null || bestVersion.compareTo(v) < 0) {
            bestFeature=feature;
            bestVersion=v;
          }
        }
      }
    }
  }
  return bestFeature;
}
