{
  String uri=request.uri();
  String uri2=null;
  if (!uri.endsWith("/")) {
    uri2=uri + "/";
  }
  if (LOG.isDebugEnabled()) {
    LOG.debug("Proxying request: " + uri);
  }
  String remaining=null;
  String prefix=null;
  String proxyServiceUrl=null;
  String reverseServiceUrl=null;
  IMappedServices mappedServices=null;
  URL clientURL=null;
  Set<Map.Entry<String,IMappedServices>> entries=mappingRules.entrySet();
  for (  Map.Entry<String,IMappedServices> entry : entries) {
    String path=entry.getKey();
    mappedServices=entry.getValue();
    String pathPrefix=path;
    if (uri.startsWith(pathPrefix) || (uri2 != null && uri2.startsWith(pathPrefix))) {
      int pathPrefixLength=pathPrefix.length();
      if (pathPrefixLength < uri.length()) {
        remaining=uri.substring(pathPrefixLength + 1);
      }
 else {
        remaining=null;
      }
      proxyServiceUrl=mappedServices.chooseService(request);
      if (proxyServiceUrl != null) {
        try {
          clientURL=new URL(proxyServiceUrl);
          prefix=clientURL.getPath();
          reverseServiceUrl=request.absoluteURI().resolve(pathPrefix).toString();
          if (reverseServiceUrl.endsWith("/")) {
            reverseServiceUrl=reverseServiceUrl.substring(0,reverseServiceUrl.length() - 1);
          }
          String servicePath=prefix != null ? prefix : "";
          if (servicePath.length() > 0 && !servicePath.endsWith("/")) {
            servicePath+="/";
          }
          if (remaining != null) {
            servicePath+=remaining;
          }
          mappedServices.setProxyMappingDetails(new ProxyMappingDetails(proxyServiceUrl,reverseServiceUrl,servicePath));
          break;
        }
 catch (        MalformedURLException e) {
          LOG.warn("Failed to parse URL: " + proxyServiceUrl + ". "+ e,e);
        }
      }
    }
  }
  return mappedServices;
}
