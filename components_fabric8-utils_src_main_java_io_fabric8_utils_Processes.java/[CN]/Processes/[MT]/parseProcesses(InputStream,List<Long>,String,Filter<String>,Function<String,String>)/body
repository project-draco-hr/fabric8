{
  BufferedReader reader=new BufferedReader(new InputStreamReader(inputStream));
  try {
    while (true) {
      String line=reader.readLine();
      if (line == null)       break;
      if (preFunction != null) {
        line=preFunction.apply(line);
      }
      if (lineFilter.matches(line)) {
        StringTokenizer tokenizer=new StringTokenizer(line);
        boolean found=false;
        while (tokenizer.hasMoreTokens() && !found) {
          String pidText=tokenizer.nextToken();
          try {
            long pid=Long.parseLong(pidText);
            answer.add(pid);
            found=true;
          }
 catch (          NumberFormatException e) {
            LOG.debug("Could not parse pid " + pidText + " from command: "+ message);
          }
        }
      }
    }
  }
 catch (  Exception e) {
    LOG.debug("Failed to process stdin for " + message + ": "+ e,e);
    throw e;
  }
 finally {
    Closeables.closeQuietly(reader);
  }
}
