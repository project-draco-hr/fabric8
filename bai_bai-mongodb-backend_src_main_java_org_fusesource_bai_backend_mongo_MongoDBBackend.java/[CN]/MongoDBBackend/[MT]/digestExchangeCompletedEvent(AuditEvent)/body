{
  DBObject filter=BasicDBObjectBuilder.start().append("_id",ev.breadCrumbId).append("input.endpointUri",ev.endpointURI).append("input.exchangeId",ev.getExchange().getExchangeId()).append("exchanges.dispatchId",ev.event.getExchange().getProperty(AuditConstants.DISPATCH_ID,String.class)).get();
  DBObject toApply=new BasicDBObject();
  toApply.put("$set",new BasicDBObject());
  DBObject toSet=(BasicDBObject)toApply.get("$set");
  toSet.put("input.$.endTimestamp",ev.timestamp);
  toSet.put("input.$.status","finished");
  if (ev.event.getExchange().getPattern() == ExchangePattern.InOut) {
    Object outBody=null;
    try {
      outBody=ev.getExchange().hasOut() ? ev.getExchange().getOut().getBody() : ev.getExchange().getIn().getBody();
      toSet.put("input.$.out",convertPayload(outBody,ev.getExchange()));
      toSet.put("input.$.originalOut",typeConverter.convertTo(String.class,outBody));
    }
 catch (    Exception e) {
    }
  }
  collectionFor(ev).update(filter,toApply);
}
