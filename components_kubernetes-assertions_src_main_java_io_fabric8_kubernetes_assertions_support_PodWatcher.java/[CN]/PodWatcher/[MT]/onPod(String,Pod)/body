{
  PodAsserter asserter=podAsserts.get(name);
  if (asserter == null) {
    asserter=new PodAsserter(this,name,pod);
    podAsserts.put(name,asserter);
  }
 else {
    asserter.updated(pod);
  }
  int restartCount=getRestartCount(pod);
  PodSpec spec=pod.getSpec();
  if (spec != null) {
    if (KubernetesHelper.isPodRunning(pod)) {
      List<Container> containers=spec.getContainers();
      for (      Container container : containers) {
        File logFileName=LogHelpers.getLogFileName(getBaseDir(),name,container,restartCount);
        String key=logFileName.getName();
        PodLogWatcher logWatcher=podLogWatchers.get(key);
        if (logWatcher == null) {
          try {
            String containerName=container.getName();
            logWatcher=new PodLogWatcher(this,name,pod,containerName,logFileName);
            podLogWatchers.put(key,logWatcher);
            LOG.info("Watching pod " + name + " container "+ containerName+ " log at file: "+ logFileName.getAbsolutePath());
          }
 catch (          Exception e) {
            LOG.warn("Failed to create PodLogWatcher: " + e,e);
          }
        }
      }
    }
  }
  File yamlFile=new File(getBaseDir(),"target/test-pod-status/" + name + ".yml");
  yamlFile.getParentFile().mkdirs();
  try {
    KubernetesHelper.saveYaml(pod,yamlFile);
  }
 catch (  IOException e) {
    LOG.warn("Failed to write " + yamlFile + ". "+ e,e);
  }
}
