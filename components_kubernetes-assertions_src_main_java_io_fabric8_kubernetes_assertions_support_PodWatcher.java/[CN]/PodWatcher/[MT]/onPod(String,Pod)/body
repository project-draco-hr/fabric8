{
  PodAsserter asserter=podAsserts.get(name);
  if (asserter == null) {
    asserter=new PodAsserter(this,name,pod);
    podAsserts.put(name,asserter);
  }
 else {
    asserter.updated(pod);
  }
  PodLogWatcher logWatcher=podLogWatchers.get(name);
  if (logWatcher == null) {
    String logName=name;
    int counter=2;
    File logFile;
    while (true) {
      logFile=new File(getBaseDir(),"target/test-pod-logs/" + logName + ".log");
      if (!logFile.exists()) {
        break;
      }
      logName=name + "-" + counter++;
    }
    try {
      logWatcher=new PodLogWatcher(this,name,pod,logFile);
      podLogWatchers.put(name,logWatcher);
      LOG.info("Watching pod " + name + " log at file: "+ logFile.getAbsolutePath());
    }
 catch (    FileNotFoundException e) {
      LOG.warn("Failed to create PodLogWatcher: " + e,e);
    }
  }
  File yamlFile=new File(getBaseDir(),"target/test-pod-status/" + name + ".yml");
  yamlFile.getParentFile().mkdirs();
  try {
    KubernetesHelper.saveYaml(pod,yamlFile);
  }
 catch (  IOException e) {
    LOG.warn("Failed to write " + yamlFile + ". "+ e,e);
  }
}
