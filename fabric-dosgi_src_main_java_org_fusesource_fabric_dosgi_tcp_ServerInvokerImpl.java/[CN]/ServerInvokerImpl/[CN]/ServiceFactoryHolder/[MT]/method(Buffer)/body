{
  MethodMetadata rc=method_cache.get(data);
  if (rc == null) {
    String[] parts=data.utf8().toString().split(",");
    String name=parts[0];
    Class params[]=new Class[parts.length - 1];
    for (int i=0; i < params.length; i++) {
      params[i]=decodeClass(parts[i + 1]);
    }
    Method method=clazz.getMethod(name,params);
    SerializationStrategy serializationStrategy=new ObjectSerializationStrategy();
    final InvocationStrategy strategy;
    if (AsyncInvocationStrategy.isAsyncMethod(method)) {
      strategy=new AsyncInvocationStrategy(serializationStrategy);
    }
 else {
      strategy=new BlockingInvocationStrategy(serializationStrategy);
    }
    rc=new MethodMetadata(strategy,method);
    method_cache.put(data,rc);
  }
  return rc;
}
