{
  try {
    final DataByteArrayInputStream bais=new DataByteArrayInputStream((Buffer)data);
    final int size=bais.readInt();
    final long correlation=bais.readVarLong();
    final UTF8Buffer service=readBuffer(bais).utf8();
    final Buffer encoded_method=readBuffer(bais);
    final ServiceFactoryHolder holder=holders.get(service);
    final Method method=holder.method(encoded_method);
    final RequestCodecStrategy strategy=new ObjectSerializationStrategy();
    executor.submit(new Runnable(){
      public void run(){
        final DataByteArrayOutputStream baos=new DataByteArrayOutputStream();
        try {
          baos.writeInt(0);
          baos.writeVarLong(correlation);
        }
 catch (        IOException e) {
          throw new RuntimeException(e);
        }
        Object svc=holder.factory.get();
        strategy.service(holder.loader,method,svc,bais,baos,new Runnable(){
          public void run(){
            holder.factory.unget();
            final Buffer command=baos.toBuffer();
            BufferEditor editor=command.buffer().bigEndianEditor();
            editor.writeInt(command.length);
            queue.execute(new Runnable(){
              public void run(){
                transport.offer(command);
              }
            }
);
          }
        }
);
      }
    }
);
  }
 catch (  Exception e) {
    LOGGER.info("Error while reading request",e);
  }
}
