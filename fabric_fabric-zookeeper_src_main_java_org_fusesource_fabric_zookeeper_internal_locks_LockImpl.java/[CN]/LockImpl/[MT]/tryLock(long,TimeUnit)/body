{
  long waitFor=unit.toMillis(time);
  long start=System.currentTimeMillis();
  try {
    ZooKeeperUtils.createDefault(zooKeeper,path,"");
    Thread current=Thread.currentThread();
    LockData lockData=threadLocks.get(current);
    if (lockData == null) {
      String lockPath=zooKeeper.create(ZkPath.LOCK.getPath(path),CreateMode.EPHEMERAL_SEQUENTIAL);
      lockData=new LockData(current,lockPath);
      threadLocks.put(current,lockData);
    }
    lockData.getCount().incrementAndGet();
    while (start + waitFor >= System.currentTimeMillis()) {
      List<String> children=zooKeeper.getChildren(path);
      String id=stripPath(lockData.getLockPath());
      if (hasLock(id,children)) {
        return true;
      }
 else {
        doWaitForPath(path,start + waitFor - System.currentTimeMillis());
      }
    }
  }
 catch (  Exception ex) {
    LOGGER.warn("Error while trying to acquire lock on: {}.",path,ex);
    return false;
  }
  return false;
}
