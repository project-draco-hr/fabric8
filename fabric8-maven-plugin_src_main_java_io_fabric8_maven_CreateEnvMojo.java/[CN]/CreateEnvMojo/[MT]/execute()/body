{
  try {
    String basedir=System.getProperty("basedir",".");
    File propertiesFile=new File(basedir + "/target/" + envPropertiesFileName).getCanonicalFile();
    File scriptFile=new File(basedir + "/target/" + envScriptFileName).getCanonicalFile();
    File dockerRunFile=new File(basedir + "/target/" + dockerRunScriptFileName).getCanonicalFile();
    Object config=loadKubernetesJson();
    List<HasMetadata> list=KubernetesHelper.toItemList(config);
    Map<String,String> env=getEnvFromConfig(list);
    String namespace=getNamespace();
    env.putAll(getNamespaceServiceEnv(namespace));
    displayEnv(env);
    if (name == null) {
      name=findFirstImageName(list);
    }
    StringBuilder sb=new StringBuilder();
    List<VolumeMount> volumeMount=getVolumeMountsFromConfig(list);
    DockerCommandPlainPrint dockerCommandPlainPrint=new DockerCommandPlainPrint(sb);
    dockerCommandPlainPrint.appendParameters(env,IDockerCommandPlainPrintCostants.EXPRESSION_FLAG);
    dockerCommandPlainPrint.appendVolumeMounts(volumeMount,IDockerCommandPlainPrintCostants.VOLUME_FLAG);
    dockerCommandPlainPrint.appendImageName(name);
    displayDockerRunCommand(dockerCommandPlainPrint);
    Properties properties=getProject().getProperties();
    if (properties == null) {
      properties=new Properties();
    }
    for (    Map.Entry<String,String> entry : env.entrySet()) {
      String key=entry.getKey();
      String value=entry.getValue();
      if (key == null) {
        getLog().warn("Ignoring null key!");
      }
 else       if (value == null) {
        getLog().warn("Ignoring null value for key: " + key);
      }
 else {
        properties.setProperty(DOCKE_ENV_PREFIX + key,value);
      }
    }
    if (name != null) {
      properties.setProperty(DOCKER_NAME,name);
    }
    String scriptFileAbsolutePath=scriptFile.getAbsolutePath();
    if (scriptFileAbsolutePath != null) {
      properties.setProperty(EXEC_ENV_SCRIPT,scriptFileAbsolutePath);
    }
    Properties envProperties=new OrderedProperties();
    Set<Map.Entry<String,String>> entries=env.entrySet();
    for (    Map.Entry<String,String> entry : entries) {
      String key=entry.getKey();
      String value=entry.getValue();
      if (key == null) {
        getLog().warn("Ignoring null key!");
      }
 else       if (value == null) {
        getLog().warn("Ignoring null value for key: " + key);
      }
 else {
        envProperties.put(key,value);
      }
    }
    saveEnvScript(env,scriptFile);
    saveDockerRunScript(dockerCommandPlainPrint,dockerRunFile);
    saveProperties(envProperties,propertiesFile);
  }
 catch (  IOException e) {
    throw new MojoExecutionException("Failed to load environment schemas: " + e,e);
  }
}
