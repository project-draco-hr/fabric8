{
  checkFabricAvailable();
  validateContainersName(containerName);
  if (!containerExists(containerName)) {
    System.out.println("Container " + containerName + " does not exists!");
    return null;
  }
  Container container=fabricService.getContainer(containerName);
  System.out.println(String.format(FORMAT,"Name:",container.getId()));
  System.out.println(String.format(FORMAT,"Version:",container.getVersion()));
  System.out.println(String.format(FORMAT,"Alive:",container.isAlive()));
  System.out.println(String.format(FORMAT,"Resolver:",container.getResolver()));
  System.out.println(String.format(FORMAT,"Network Address:",container.getIp()));
  System.out.println(String.format(FORMAT,"SSH Url:",container.getSshUrl()));
  System.out.println(String.format(FORMAT,"JMX Url:",container.getJmxUrl()));
  System.out.println(String.format(FORMAT,"Process ID:",container.getProcessId()));
  StringBuilder sb=new StringBuilder();
  Profile[] profiles=container.getProfiles();
  for (int i=0; i < profiles.length; i++) {
    if (i != 0) {
      sb.append(" ");
    }
    sb.append(profiles[i].getId());
  }
  System.out.println(String.format(FORMAT,"Profiles:",sb.toString()));
  System.out.println(String.format(FORMAT,"Provision Status:",container.getProvisionStatus()));
  if (container.getProvisionException() != null) {
    System.out.println(String.format(FORMAT,"Provision Error:",container.getProvisionException()));
  }
  return null;
}
