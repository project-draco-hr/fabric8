{
  boolean answer=false;
  if (tree.isValidLibrary()) {
    File file=tree.getJarFile();
    if (file.exists()) {
      File sharedResourceFile=null;
      JarOutputStream out=null;
      JarFile jarFile=new JarFile(file);
      String[] sharedPaths=connection.getConfiguration().getSharedResourcePaths();
      String pathPrefix=tree.getGroupId() + "." + tree.getArtifactId()+ "-resources";
      String path=pathPrefix + ".jar";
      if (sharedPaths != null) {
        for (        String sharedPath : sharedPaths) {
          Enumeration<JarEntry> entries=jarFile.entries();
          while (entries.hasMoreElements()) {
            JarEntry jarEntry=entries.nextElement();
            String name=jarEntry.getName();
            if (name.startsWith(sharedPath)) {
              if (sharedResourceFile == null) {
                sharedResourceFile=File.createTempFile(pathPrefix + "-",".jar");
                out=new JarOutputStream(new FileOutputStream(sharedResourceFile));
              }
              out.putNextEntry(new ZipEntry(jarEntry.getName()));
              if (!jarEntry.isDirectory()) {
                IOHelpers.writeTo(out,jarFile.getInputStream(jarEntry),false);
              }
              out.closeEntry();
            }
          }
        }
      }
      if (sharedResourceFile != null) {
        out.finish();
        out.close();
        if (!bundleClassPath.contains(path)) {
          embeddedResources.put(path,sharedResourceFile);
          addBundleClassPath(path);
          LOG.info("Adding shared resources jar: " + path);
          answer=true;
        }
      }
    }
  }
  return answer;
}
