{
  System.out.println("Create test profile:" + profileId + " in git.");
  GitUtils.checkoutBranch(git,"origin",versionId);
  String relativeProfileDir="fabric/profiles/" + profileId + ".profile";
  File testProfileDir=new File(git.getRepository().getWorkTree(),relativeProfileDir);
  testProfileDir.mkdirs();
  File testProfileConfig=new File(testProfileDir,"io.fabric8.agent.properties");
  testProfileConfig.createNewFile();
  Files.writeToFile(testProfileConfig,"",Charset.defaultCharset());
  git.add().addFilepattern(relativeProfileDir).call();
  git.commit().setAll(true).setMessage("Create " + profileId).call();
  git.pull().setCredentialsProvider(getCredentialsProvider()).setRebase(true).call();
  git.push().setCredentialsProvider(getCredentialsProvider()).setPushAll().setRemote("origin").call();
  GitUtils.waitForBranchUpdate(curator,versionId);
  for (int i=0; i < 5; i++) {
    if (fabricService.adapt(ProfileRegistry.class).hasProfile(versionId,profileId)) {
      return;
    }
 else {
      Thread.sleep(1000);
    }
  }
  fail("Expected to find profile " + profileId + " in version "+ versionId);
}
