{
  final ClusteredSingleton<TextNodeState> cluster=getCluster();
  TextNodeState state=new TextNodeState();
  state.setId(endpoint.getId());
  cluster.join(state);
  cluster.add(new ChangeListener(){
    @Override public void connected(){
    }
    @Override public void changed(){
      if (cluster.connected()) {
        if (cluster.isMaster()) {
          if (LOG.isDebugEnabled()) {
            LOG.debug("Master starting for endpoint: " + endpoint);
          }
          onLockOwned();
        }
 else {
          if (LOG.isDebugEnabled()) {
            LOG.debug("Master stopping for endpoint: " + endpoint);
          }
        }
      }
    }
    @Override public void disconnected(){
      try {
        stopConsumer();
      }
 catch (      Exception e) {
        LOG.error("Failed to stop master consumer for: " + endpoint + ". Reason: "+ e,e);
      }
    }
  }
);
}
