{
  try {
    if (port < 0) {
      Set<ObjectName> objectNames=findObjectNames(null,"Catalina:type=Connector,*","Tomcat:type=Connector,*");
      for (      ObjectName objectName : objectNames) {
        Object protocol=mBeanServer.getAttribute(objectName,"protocol");
        if (protocol != null && protocol instanceof String && protocol.toString().toLowerCase().startsWith("http/")) {
          Object portValue=mBeanServer.getAttribute(objectName,"port");
          if (portValue instanceof Number) {
            port=((Number)portValue).intValue();
            if (port > 0) {
              break;
            }
          }
        }
      }
    }
    if (port > 0 && curator != null) {
      Set<ObjectName> objectNames=findObjectNames(null,"Catalina:j2eeType=WebModule,*","Tomcat:j2eeType=WebModule,*");
      for (      ObjectName objectName : objectNames) {
        Object pathValue=mBeanServer.getAttribute(objectName,"path");
        if (pathValue != null && pathValue instanceof String) {
          String path=pathValue.toString();
          String url="http://" + host + ":"+ port+ path;
          String name=path;
          while (name.startsWith("/")) {
            name=name.substring(1);
          }
          String version="unknown";
          String[] versionSplit=name.split("-\\d\\.\\d");
          if (versionSplit.length < 2) {
            versionSplit=name.split("-SNAPSHOT");
          }
          if (versionSplit.length > 1) {
            String justName=versionSplit[0];
            version=name.substring(justName.length() + 1);
            name=justName;
          }
          LOGGER.info("Found name " + name + " version "+ version+ " url "+ url+ " from path "+ path);
          if (name.length() > 0) {
            registerWebapp(name,version,url);
          }
        }
      }
    }
  }
 catch (  Throwable e) {
    LOGGER.warn("Failed to poll for web app mbeans " + e,e);
  }
}
