{
  int count=request.getDelta();
  String profile=request.getProfile();
  String version=request.getVersion();
  FabricService fabricService=request.getFabricService();
  CreateOpenshiftContainerOptions.Builder builder=null;
  if (fabricService != null) {
    builder=createAutoScaleOptions(fabricService);
  }
  if (builder != null) {
    for (int i=0; i < count; i++) {
      Container[] containers=fabricService.getContainers();
      final CreateOpenshiftContainerOptions.Builder configuredBuilder=builder.number(1).version(version).profiles(profile);
      NameValidator openShiftValidator=containerProvider.createNameValidator(configuredBuilder.build());
      NameValidator fabricNameValidator=Containers.createNameValidator(fabricService.getContainers());
      NameValidator nameValidator=Containers.joinNameValidators(openShiftValidator,fabricNameValidator);
      String name=Containers.createContainerName(containers,profile,containerProvider.getScheme(),nameValidator);
      CreateOpenshiftContainerOptions options=configuredBuilder.name(name).build();
      LOG.info("Creating container name " + name + " version "+ version+ " profile "+ profile+ " "+ count+ " container(s)");
      fabricService.createContainers(options);
    }
  }
 else {
    LOG.warn("Could not create version " + version + " profile "+ profile+ " due to missing autoscale configuration");
  }
}
