{
  LOG.info("Starting Jolokia Keep Alive for " + metadata.getId());
  jolokiaKeepAliveContainers.put(metadata.getId(),metadata);
  if (keepAliveTimer == null) {
    keepAliveTimer=new Timer("fabric8-docker-container-keepalive");
    TimerTask timerTask=new TimerTask(){
      @Override public void run(){
        List<CreateKubernetesContainerMetadata> list=new ArrayList<>(jolokiaKeepAliveContainers.values());
        for (        CreateKubernetesContainerMetadata containerMetadata : list) {
          try {
            String jolokiaUrl=containerMetadata.getJolokiaUrl();
            String containerName=containerMetadata.getContainerName();
            JolokiaAgentHelper.jolokiaKeepAliveCheck(zkMasterCache,getFabricService(),jolokiaUrl,containerName);
          }
 catch (          Exception e) {
            LOG.warn("Jolokia keep alive check failed for container " + containerMetadata.getId() + ". "+ e,e);
          }
        }
      }
    }
;
    keepAliveTimer.schedule(timerTask,jolokiaKeepAlivePollTime,jolokiaKeepAlivePollTime);
  }
}
