{
  final InjectionPoint injectionPoint=event.getInjectionPoint();
  if (isServiceInjectionPoint(injectionPoint)) {
    Annotated annotated=injectionPoint.getAnnotated();
    Alias alias=annotated.getAnnotation(Alias.class);
    ServiceName serviceName=annotated.getAnnotation(ServiceName.class);
    Protocol protocol=annotated.getAnnotation(Protocol.class);
    String serviceId=serviceName.value();
    String serviceProtocol=protocol != null ? protocol.value() : "tcp";
    String serviceAlias=alias != null ? alias.value() : null;
    Type type=annotated.getBaseType();
    if (type.equals(String.class)) {
      ServiceUrlBean.getBean(serviceId,serviceProtocol,serviceAlias);
    }
 else {
      ServiceBean.getBean(serviceId,serviceProtocol,serviceAlias,(Class)type);
    }
    if (protocol == null) {
      event.setInjectionPoint(new DelegatingInjectionPoint(injectionPoint){
        @Override public Set<Annotation> getQualifiers(){
          Set<Annotation> qualifiers=new LinkedHashSet<>(super.getQualifiers());
          qualifiers.add(new ProtocolQualifier("tcp"));
          return Collections.unmodifiableSet(qualifiers);
        }
      }
);
    }
  }
 else   if (isConfigurationInjectionPoint(injectionPoint)) {
    Annotated annotated=injectionPoint.getAnnotated();
    Configuration configuration=annotated.getAnnotation(Configuration.class);
    Type type=injectionPoint.getType();
    String configurationId=configuration.value();
    ConfigurationBean.getBean(configurationId,(Class)type);
  }
}
