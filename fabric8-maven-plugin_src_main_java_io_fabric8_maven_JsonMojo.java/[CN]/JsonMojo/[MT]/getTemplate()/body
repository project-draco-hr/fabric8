{
  List<io.fabric8.openshift.api.model.Parameter> parameters=new ArrayList<>();
  MavenProject project=getProject();
  Properties projectProperties=getProjectAndFabric8Properties(getProject());
  Set<String> paramNames=new HashSet<>();
  if (templateParametersPropertiesFile != null && templateParametersPropertiesFile.isFile() && templateParametersPropertiesFile.exists()) {
    final String valuePostfix=".value";
    final String descriptionPostfix=".description";
    try {
      Properties properties=new Properties();
      properties.load(new FileInputStream(templateParametersPropertiesFile));
      Set<Object> keys=properties.keySet();
      Properties prefixedProperties=new Properties();
      for (      Object key : keys) {
        if (key != null) {
          String name=key.toString();
          String value=properties.getProperty(name);
          prefixedProperties.put(PARAMETER_PREFIX + "." + name,value);
        }
      }
      loadParametersFromProperties(prefixedProperties,parameters,paramNames);
    }
 catch (    IOException e) {
      throw new MojoExecutionException("Failed to load templateParameters properties file " + templateParametersPropertiesFile + ". "+ e,e);
    }
  }
  loadParametersFromProperties(projectProperties,parameters,paramNames);
  String templateName=projectProperties.containsKey(TEMPLATE_NAME) ? String.valueOf(projectProperties.getProperty(TEMPLATE_NAME)) : project.getArtifactId();
  Template template=new Template();
  template.setMetadata(new ObjectMetaBuilder().withName(templateName).withAnnotations(getTemplateAnnotations()).build());
  template.setParameters(parameters);
  return template;
}
