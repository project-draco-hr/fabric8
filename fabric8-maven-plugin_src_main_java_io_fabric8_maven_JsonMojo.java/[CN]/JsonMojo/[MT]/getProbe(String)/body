{
  Probe answer=new Probe();
  boolean added=false;
  Properties properties=getProject().getProperties();
  String httpGetPath=properties.getProperty(prefix + ".httpGet.path");
  String httpGetPort=properties.getProperty(prefix + ".httpGet.port");
  String httpGetHost=properties.getProperty(prefix + ".httpGet.host");
  if (Strings.isNotBlank(httpGetPath)) {
    added=true;
    HTTPGetAction httpGet=new HTTPGetAction();
    httpGet.setPath(httpGetPath);
    httpGet.setHost(httpGetHost);
    if (Strings.isNotBlank(httpGetPort)) {
      IntOrString httpGetPortIntOrString=KubernetesHelper.createIntOrString(httpGetPort);
      httpGet.setPort(httpGetPortIntOrString);
    }
    answer.setHttpGet(httpGet);
  }
  Long initialDelaySeconds=PropertiesHelper.getLong(properties,prefix + ".initialDelaySeconds");
  if (initialDelaySeconds != null) {
    answer.setInitialDelaySeconds(initialDelaySeconds);
  }
  Long timeoutSeconds=PropertiesHelper.getLong(properties,prefix + ".timeoutSeconds");
  if (timeoutSeconds != null) {
    answer.setTimeoutSeconds(timeoutSeconds);
  }
  return added ? answer : null;
}
