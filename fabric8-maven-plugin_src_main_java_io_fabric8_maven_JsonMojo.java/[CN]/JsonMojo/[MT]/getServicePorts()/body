{
  if (servicePorts == null) {
    servicePorts=new ArrayList<>();
  }
  if (servicePorts.isEmpty()) {
    Properties properties1=getProjectAndFabric8Properties(getProject());
    Map<String,String> servicePortProperties=findPropertiesWithPrefix(properties1,FABRIC8_PORT_SERVICE_PREFIX);
    Map<String,String> serviceContainerPortProperties=findPropertiesWithPrefix(properties1,FABRIC8_CONTAINER_PORT_SERVICE_PREFIX);
    Map<String,String> serviceProtocolProperties=findPropertiesWithPrefix(properties1,FABRIC8_PROTOCOL_SERVICE_PREFIX);
    for (    Map.Entry<String,String> entry : servicePortProperties.entrySet()) {
      String name=entry.getKey();
      String servicePortText=entry.getValue();
      Integer servicePortNumber=parsePort(servicePortText,FABRIC8_PORT_SERVICE_PREFIX + name);
      if (servicePortNumber != null) {
        String containerPort=serviceContainerPortProperties.get(name);
        if (Strings.isNullOrBlank(containerPort)) {
          getLog().warn("Missing container port for service - need to specify " + FABRIC8_CONTAINER_PORT_SERVICE_PREFIX + name+ " property");
        }
 else {
          ServicePort servicePort=new ServicePort();
          servicePort.setName(name);
          servicePort.setPort(servicePortNumber);
          IntOrString containerPortSpec=new IntOrString();
          Integer containerPortNumber=parsePort(containerPort,FABRIC8_CONTAINER_PORT_SERVICE_PREFIX + name);
          if (containerPortNumber != null) {
            containerPortSpec.setIntVal(containerPortNumber);
          }
 else {
            containerPortSpec.setStrVal(containerPort);
          }
          servicePort.setTargetPort(containerPortSpec);
          String portProtocol=serviceProtocolProperties.get(name);
          if (portProtocol != null) {
            servicePort.setProtocol(portProtocol);
          }
          servicePorts.add(servicePort);
        }
      }
    }
    if (serviceContainerPort != null && servicePort != null) {
      if (servicePorts.size() > 0) {
        throw new MojoExecutionException("Multi-port services must use the " + FABRIC8_PORT_SERVICE_PREFIX + "<name> format");
      }
      ServicePort actualServicePort=new ServicePort();
      Integer containerPortNumber=parsePort(serviceContainerPort,FABRIC8_CONTAINER_PORT_SERVICE);
      IntOrString containerPort=new IntOrString();
      if (containerPortNumber != null) {
        containerPort.setIntVal(containerPortNumber);
      }
 else {
        containerPort.setStrVal(serviceContainerPort);
      }
      actualServicePort.setTargetPort(containerPort);
      actualServicePort.setPort(servicePort);
      if (serviceProtocol != null) {
        actualServicePort.setProtocol(serviceProtocol);
        servicePorts.add(actualServicePort);
      }
    }
  }
  return servicePorts;
}
