{
  try {
    MavenProject project=getProject();
    Set<File> jsonFiles=new LinkedHashSet<>();
    List<Dependency> dependencies=project.getDependencies();
    Set<Artifact> dependencyArtifacts=project.getDependencyArtifacts();
    for (    Artifact artifact : dependencyArtifacts) {
      String classifier=artifact.getClassifier();
      String type=artifact.getType();
      File file=artifact.getFile();
      if (isKubernetesJsonArtifact(classifier,type)) {
        if (file != null) {
          System.out.println("Found kubernetes JSON dependency: " + artifact);
          jsonFiles.add(file);
        }
 else {
          Set<Artifact> artifacts=resolveArtifacts(artifact);
          for (          Artifact resolvedArtifact : artifacts) {
            classifier=resolvedArtifact.getClassifier();
            type=resolvedArtifact.getType();
            file=resolvedArtifact.getFile();
            if (isKubernetesJsonArtifact(classifier,type) && file != null) {
              System.out.println("Resolved kubernetes JSON dependency: " + artifact);
              jsonFiles.add(file);
            }
          }
        }
      }
    }
    List<Object> jsonObjectList=new ArrayList<>();
    for (    File file : jsonFiles) {
      addKubernetesJsonFileToList(jsonObjectList,file);
    }
    if (jsonObjectList.isEmpty()) {
      throw new MojoExecutionException("Could not find any dependent kubernetes JSON files!");
    }
    Object combinedJson=null;
    if (jsonObjectList.size() == 1) {
      combinedJson=jsonObjectList.get(0);
    }
 else {
      combinedJson=KubernetesHelper.combineJson(jsonObjectList.toArray());
    }
    if (combinedJson instanceof Template) {
      Template template=(Template)combinedJson;
      setName(template,getKubernetesName());
    }
    json.getParentFile().mkdirs();
    KubernetesHelper.saveJson(json,combinedJson);
    getLog().info("Saved as :" + json.getAbsolutePath());
  }
 catch (  Exception e) {
    throw new MojoExecutionException("Failed to save combined JSON files " + json + " and "+ kubernetesExtraJson+ " as "+ json+ ". "+ e,e);
  }
}
