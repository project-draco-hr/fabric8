{
  String json=DtoHelper.getMapper().writeValueAsString(requirements);
  ObjectName mbeanName=ProjectDeployerImpl.OBJECT_NAME;
  getLog().info("Updating profile: " + requirements.getProfileId() + " with parent profile(s): "+ requirements.getParentProfiles());
  getLog().info("About to invoke mbean " + mbeanName + " on jolokia URL: "+ jolokiaUrl+ " with user: "+ fabricServer.getUsername());
  getLog().debug("JSON: " + json);
  try {
    J4pExecRequest request=new J4pExecRequest(mbeanName,"deployProjectJson",json);
    J4pResponse<J4pExecRequest> response=client.execute(request,"POST");
    Object value=response.getValue();
    if (value == null) {
      return null;
    }
 else {
      DeployResults answer=DtoHelper.getMapper().reader(DeployResults.class).readValue(value.toString());
      if (answer != null) {
        String profileUrl=answer.getProfileUrl();
        if (profileUrl != null) {
          getLog().info("");
          getLog().info("Profile page: " + profileUrl);
          getLog().info("");
        }
 else {
          getLog().info("Result: " + answer);
        }
      }
 else {
        getLog().info("Result: " + value);
      }
      return answer;
    }
  }
 catch (  J4pException e) {
    if (e.getMessage().contains(".InstanceNotFoundException")) {
      throw new MojoExecutionException("Could not find the mbean " + mbeanName + " in the JVM for "+ jolokiaUrl+ ". Are you sure this JVM is running the Fabric8 console?");
    }
 else {
      throw e;
    }
  }
}
