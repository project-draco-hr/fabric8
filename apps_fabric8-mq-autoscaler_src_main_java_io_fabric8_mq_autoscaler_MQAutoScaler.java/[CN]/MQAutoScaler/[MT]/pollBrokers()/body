{
  List<BrokerVitalSigns> result=new ArrayList<>();
  Map<String,PodSchema> podMap=KubernetesHelper.getPodMap(kubernetes,getSelector());
  Collection<PodSchema> pods=podMap.values();
  LOG.info("Checking " + selector + ": groupSize = "+ pods.size());
  for (  PodSchema pod : pods) {
    String host=KubernetesHelper.getHost(pod);
    List<ManifestContainer> containers=KubernetesHelper.getContainers(pod);
    for (    ManifestContainer container : containers) {
      LOG.info("Checking pod " + pod.getId() + " container: "+ container.getName()+ " image: "+ container.getImage());
      J4pClient client=clients.jolokiaClient(host,container,pod);
      BrokerVitalSigns brokerVitalSigns=getBrokerVitalSigns(client);
      if (brokerVitalSigns != null) {
        LOG.debug("Broker vitals for container " + container.getName() + " is: "+ brokerVitalSigns);
        result.add(brokerVitalSigns);
      }
    }
  }
  return result;
}
