{
  int totalConnections=0;
  int totalDestinations=0;
  if (!brokers.isEmpty()) {
    boolean brokerLimitsExceeded=false;
    boolean destinationLimitsExceeded=false;
    boolean lazyBroker=false;
    boolean orphanedConsumers=false;
    for (    BrokerVitalSigns brokerVitalSigns : brokers) {
      brokerLimitsExceeded|=brokerVitalSigns.areLimitsExceeded(brokerLimits);
      destinationLimitsExceeded|=brokerVitalSigns.areLimitsExceeded(destinationLimits);
      lazyBroker|=inactiveBrokers.isInactive(brokerVitalSigns,(getPollTime() * 1000 * 2));
      totalConnections+=brokerVitalSigns.getTotalConnections();
      totalDestinations+=brokerVitalSigns.getTotalDestinations();
      orphanedConsumers|=(brokerVitalSigns.getTotalConnections() > 0 && brokerVitalSigns.getTotalDestinations() == 0);
    }
    if (brokerLimitsExceeded || destinationLimitsExceeded) {
      boolean exceededConnectionCapacity=((totalConnections / brokers.size())) > brokerLimits.getMaxConnectionsPerBroker();
      boolean exceededDestinationCapacity=((totalDestinations / brokers.size())) > brokerLimits.getMaxDestinationsPerBroker();
      if (exceededConnectionCapacity || exceededDestinationCapacity) {
        if (brokers.size() < getMaximumGroupSize()) {
          try {
            requestDesiredBrokerNumber(brokers.size() + 1);
          }
 catch (          Exception e) {
            LOG.error("Failed to request more brokers ",e);
          }
          if (destinationLimitsExceeded) {
            for (            BrokerVitalSigns broker : brokers) {
              try {
                bounceBroker(broker);
              }
 catch (              Exception e) {
                LOG.error("Failed to bounce broker connectors for " + broker.getBrokerName(),e);
              }
            }
          }
 else {
            int newSize=brokers.size() + 1;
            int averageSize=(totalConnections / newSize) + 1;
            for (            BrokerVitalSigns brokerVitalSigns : brokers) {
              try {
                bounceConnections(brokerVitalSigns,(brokerVitalSigns.getTotalConnections() - averageSize));
              }
 catch (              Exception e) {
                LOG.error("Failed to stop client connections",e);
              }
            }
          }
        }
      }
    }
 else     if (brokers.size() > getMinimumGroupSize()) {
      boolean spareConnectionCapacity=((totalConnections / brokers.size()) + 1) < brokerLimits.getMaxConnectionsPerBroker();
      boolean spareDestinationCapacity=((totalDestinations / brokers.size()) + 1) < brokerLimits.getMaxDestinationsPerBroker();
      if (spareConnectionCapacity && spareDestinationCapacity) {
        LOG.info("Scaling down brokers ");
        try {
          requestDesiredBrokerNumber(brokers.size() - 1);
        }
 catch (        Exception e) {
          LOG.error("Failed to request more brokers ",e);
        }
      }
    }
 else     if (lazyBroker || orphanedConsumers) {
      if (brokers.size() > 1) {
        LOG.info("Brokers detected with no load, redistributing clients");
        for (        BrokerVitalSigns broker : brokers) {
          try {
            bounceBroker(broker);
          }
 catch (          Exception e) {
            LOG.error("Failed to bounce broker connectors for " + broker.getBrokerName(),e);
          }
        }
      }
    }
  }
}
