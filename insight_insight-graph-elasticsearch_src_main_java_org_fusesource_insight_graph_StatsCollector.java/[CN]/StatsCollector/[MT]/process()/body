{
  Container container=fabricService.getCurrentContainer();
  if (container != null) {
    Set<Query> newQueries=new HashSet<Query>();
    Profile[] profiles=container.getProfiles();
    if (profiles != null) {
      for (      Profile profile : profiles) {
        loadProfile(profile,newQueries);
      }
    }
    for (    Query q : queries.keySet()) {
      if (!newQueries.remove(q)) {
        queries.remove(q).close();
      }
    }
    Server server=new Server(container.getId());
    for (    Query q : newQueries) {
      QueryState state=new QueryState();
      state.server=server;
      state.query=q;
      if (q.getLock() != null) {
        state.lock=new ClusteredSingleton<QueryNodeState>(QueryNodeState.class);
        state.lock.start(startGroup(q.getLock()));
        state.lock.join(new QueryNodeState(q.getName(),container.getId()));
      }
      long delay=q.getPeriod() > 0 ? q.getPeriod() : defaultDelay;
      state.future=this.executor.scheduleAtFixedRate(new Task(state),Math.round(Math.random() * 1000),delay * 1000,TimeUnit.MILLISECONDS);
      queries.put(q,state);
    }
  }
}
