{
  m_namespace=namespace;
  m_resource=resource;
  m_dirs=ImmutableMap.newInstance(dirs);
  m_attrs=ImmutableMap.newInstance(attrs);
  List<String> uses=Collections.emptyList();
  String value=m_dirs.get(Constants.USES_DIRECTIVE);
  if (value != null) {
    StringTokenizer tok=new StringTokenizer(value,",");
    uses=new ArrayList<String>(tok.countTokens());
    while (tok.hasMoreTokens()) {
      uses.add(tok.nextToken().trim());
    }
  }
  m_uses=uses;
  value=m_dirs.get(Constants.INCLUDE_DIRECTIVE);
  if (value != null) {
    String[] filters=Parser.parseDelimitedString(value,",");
    m_includeFilter=new ArrayList<String[]>(filters.length);
    for (    String filter : filters) {
      String[] substrings=FilterImpl.parseSubstring(filter);
      m_includeFilter.add(substrings);
    }
  }
 else {
    m_includeFilter=null;
  }
  value=m_dirs.get(Constants.EXCLUDE_DIRECTIVE);
  if (value != null) {
    String[] filters=Parser.parseDelimitedString(value,",");
    m_excludeFilter=new ArrayList<String[]>(filters.length);
    for (    String filter : filters) {
      String[] substrings=FilterImpl.parseSubstring(filter);
      m_excludeFilter.add(substrings);
    }
  }
 else {
    m_excludeFilter=null;
  }
  Set<String> mandatory=Collections.emptySet();
  value=m_dirs.get(Constants.MANDATORY_DIRECTIVE);
  if (value != null) {
    String[] names=Parser.parseDelimitedString(value,",");
    mandatory=new HashSet<String>(names.length);
    for (    String name : names) {
      if (m_attrs.containsKey(name)) {
        mandatory.add(name);
      }
 else {
        throw new IllegalArgumentException("Mandatory attribute '" + name + "' does not exist.");
      }
    }
  }
  m_mandatory=mandatory;
}
