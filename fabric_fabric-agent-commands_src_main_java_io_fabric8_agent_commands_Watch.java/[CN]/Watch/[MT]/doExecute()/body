{
  if (start && stop) {
    System.err.println("Please use only one of --start and --stop options!");
    return null;
  }
  if (interval > 0) {
    System.out.println("Setting watch interval to " + interval + " ms");
    watcher.setInterval(interval);
  }
  if (stop) {
    System.out.println("Stopping watch");
    watcher.stop();
  }
  watcher.setUpload(!noUpload);
  if (urls != null) {
    if (remove) {
      for (      String url : urls) {
        watcher.remove(url);
      }
    }
 else {
      for (      String url : urls) {
        watcher.add(url);
      }
    }
  }
  if (start) {
    System.out.println("Starting watch");
    watcher.start();
  }
  if (list) {
    String format="%-40s %-10s %-6s %-88s";
    System.out.println(String.format(format,"URL","Profile","Version","Bundle Name"));
    for (    String url : watcher.getWatchURLs()) {
      Map<ProfileVersionKey,Map<String,Parser>> profileArtifacts=watcher.getProfileArtifacts();
      if (profileArtifacts.size() > 0) {
        Set<Map.Entry<ProfileVersionKey,Map<String,Parser>>> entries=profileArtifacts.entrySet();
        for (        Map.Entry<ProfileVersionKey,Map<String,Parser>> entry : entries) {
          ProfileVersionKey key=entry.getKey();
          Map<String,Parser> artifactMap=entry.getValue();
          Set<Map.Entry<String,Parser>> artifactMapEntries=artifactMap.entrySet();
          for (          Map.Entry<String,Parser> artifactMapEntry : artifactMapEntries) {
            String location=artifactMapEntry.getKey();
            Parser parser=artifactMapEntry.getValue();
            if (watcher.isSnapshot(parser) || watcher.wildCardMatch(location,url)) {
              System.out.println(String.format(format,url,key.getProfileId(),key.getVersion(),location));
            }
          }
        }
      }
 else {
        System.out.println(String.format(format,url,"","",""));
      }
    }
  }
 else {
    List<String> urls=watcher.getWatchURLs();
    if (urls != null && urls.size() > 0) {
      System.out.println("Watched URLs: ");
      for (      String url : watcher.getWatchURLs()) {
        System.out.println(url);
      }
    }
 else {
      System.out.println("No watched URLs");
    }
  }
  return null;
}
