{
  FabricValidations.validateContainerName(name);
  if (!isEnsembleServer) {
    if (clusterService.getEnsembleContainers().isEmpty()) {
      if (!isEnsembleServer) {
        throw new IllegalStateException("The use of the --ensemble-server option is mandatory when creating an initial container");
      }
      return;
    }
    if (FabricCommand.doesContainerExist(fabricService,name)) {
      throw new IllegalArgumentException("A container with name " + name + " already exists.");
    }
    Version ver=version != null ? profileService.getRequiredVersion(version) : fabricService.getDefaultVersion();
    List<Profile> profiles=ver.getProfiles();
    Set<String> names=getProfileNames();
    for (    String profile : names) {
      Profile prof=getProfile(profiles,profile,ver);
      if (prof == null) {
        throw new IllegalArgumentException("Profile " + profile + " with version "+ ver.getId()+ " does not exist.");
      }
      if (prof.isAbstract()) {
        throw new IllegalArgumentException("Profile " + profile + " with version "+ ver.getId()+ " is abstract and can not be associated to containers.");
      }
    }
  }
  if (!isEnsembleServer && fabricService.getZookeeperUrl() == null) {
    throw new IllegalArgumentException("Either start a zookeeper ensemble or use --ensemble-server.");
  }
}
