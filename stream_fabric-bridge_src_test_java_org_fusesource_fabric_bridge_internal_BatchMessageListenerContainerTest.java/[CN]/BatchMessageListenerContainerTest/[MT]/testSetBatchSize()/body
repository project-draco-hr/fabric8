{
  final CountDownLatch countDownLatch=new CountDownLatch(TEST_NUM_BATCHES);
  final ConcurrentLinkedQueue<Integer> blockingQueue=new ConcurrentLinkedQueue<Integer>();
  listenerContainer.setBatchSize(TEST_BATCH_SIZE);
  listenerContainer.setBatchTimeout(TEST_PSEUDO_DISABLE);
  listenerContainer.setBatchMessageListener(new SessionAwareBatchMessageListener<Message>(){
    public void onMessages(    List<Message> messages,    Session session) throws JMSException {
      countDownLatch.countDown();
      final int nMsgs=messages.size();
      blockingQueue.add(nMsgs);
      logBatch("Batch size [",nMsgs,session);
    }
  }
);
  listenerContainer.afterPropertiesSet();
  sendMessages(TEST_LOCAL_BROKER_URL,TEST_QUEUE,TEST_NUM_MESSAGES,null);
  listenerContainer.start();
  try {
    assertTrue("Test timed out",countDownLatch.await(TEST_TIMEOUT,TimeUnit.SECONDS));
  }
 catch (  InterruptedException e) {
    fail("Batch test interrupted");
  }
  int nResults=blockingQueue.size();
  for (int i=0; i < nResults; i++) {
    assertTrue("Batch size exceeded",blockingQueue.poll() <= TEST_BATCH_SIZE);
  }
}
