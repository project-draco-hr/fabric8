{
  if (Strings.isNotBlank(objectId)) {
    Repository r=git.getRepository();
    String blobPath=trimLeadingSlash(path);
    String content=BlobUtils.getContent(r,objectId,blobPath);
    FileDTO answer=FileDTO.createFileDTO(blobPath,objectId,content);
    return Response.ok(answer).build();
  }
 else {
    final File file=getRelativeFile(path);
    if (LOG.isDebugEnabled()) {
      LOG.debug("reading file: " + file.getPath());
    }
    if (!file.exists() || file.isDirectory()) {
      List<FileDTO> answer=new ArrayList<>();
      if (file.exists()) {
        File[] files=file.listFiles();
        if (files != null) {
          for (          File child : files) {
            FileDTO dto=createFileDTO(child,false);
            if (dto != null) {
              answer.add(dto);
            }
          }
        }
      }
      return Response.ok(answer).build();
    }
 else {
      FileDTO answer=createFileDTO(file,true);
      return Response.ok(answer).build();
    }
  }
}
