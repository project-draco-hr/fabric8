{
  ClassLoader parentClassLoader;
  if (childClassLoaders == null || childClassLoaders.isEmpty()) {
    parentClassLoader=parent;
  }
 else {
    parentClassLoader=new TreeClassLoader(childClassLoaders,parent);
  }
  List<DependencyTree> dependencies=new ArrayList<DependencyTree>();
  if (tree.isValidLibrary()) {
    dependencies.add(tree);
  }
  dependencies.addAll(nonSharedDependencies);
  List<URL> urlList=new ArrayList<URL>();
  for (  DependencyTree dependency : dependencies) {
    if (dependency.isValidLibrary()) {
      URL u=dependency.getJarURL();
      urlList.add(u);
    }
  }
  URL[] urls=urlList.toArray(new URL[urlList.size()]);
  return new DependencyClassLoader(tree,urls,parentClassLoader);
}
