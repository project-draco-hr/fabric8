{
  Map<String,CamelNodeState> members;
  if (event == GroupEvent.DISCONNECTED || !isStarted()) {
    members=Collections.emptyMap();
  }
 else {
    members=group.members();
  }
  Set<String> removed=new LinkedHashSet<String>();
  for (  Map.Entry<String,Processor> entry : processors.entrySet()) {
    String key=entry.getKey();
    if (!members.containsKey(key)) {
      removed.add(key);
    }
  }
  for (  Map.Entry<String,CamelNodeState> entry : members.entrySet()) {
    try {
      String key=entry.getKey();
      if (!processors.containsKey(key)) {
        Processor p=getProcessor(entry.getValue().consumer);
        processors.put(key,p);
        loadBalancer.addProcessor(p);
      }
    }
 catch (    URISyntaxException e) {
      LOG.warn("Unable to add endpoint " + entry.getValue().consumer,e);
    }
  }
  for (  String key : removed) {
    Processor p=processors.remove(key);
    loadBalancer.removeProcessor(p);
  }
}
