{
  running=true;
  MessageConsumer consumer=null;
  String threadName=Thread.currentThread().getName();
  LOG.info(Thread.currentThread().getName() + " Waiting for: " + messageCount+ " messages");
  try {
    consumer=service.createConsumer(dest);
    while (running && received < messageCount) {
      Message msg=consumer.receive(receiveTimeOut);
      if (msg != null) {
        LOG.info(threadName + " Received " + (msg instanceof TextMessage ? ((TextMessage)msg).getText() : msg.getJMSMessageID()));
        received++;
      }
 else {
        if (breakOnNull) {
          break;
        }
      }
      if (transactionBatchSize > 0 && received > 0 && received % transactionBatchSize == 0) {
        LOG.info(threadName + "Committing transaction: " + transactions++);
        service.getDefaultSession().commit();
      }
      if (sleep > 0) {
        Thread.sleep(sleep);
      }
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
 finally {
    if (consumer != null) {
      System.out.println(threadName + " Consumed: " + this.getReceived()+ " messages");
      try {
        consumer.close();
      }
 catch (      JMSException e) {
        e.printStackTrace();
      }
    }
  }
  LOG.info(threadName + " Consumer thread finished");
}
