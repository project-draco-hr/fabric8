{
  CreateJCloudsContainerOptions options=input.updateComputeService(getOrCreateComputeService(input));
  int number=Math.max(options.getNumber(),1);
  final Set<CreateJCloudsContainerMetadata> result=new LinkedHashSet<CreateJCloudsContainerMetadata>();
  StringBuilder overview=new StringBuilder();
  try {
    options.getCreationStateListener().onStateChange("Looking up for compute service.");
    ComputeService computeService=getOrCreateComputeService(options);
    if (computeService == null) {
      throw new IllegalStateException("Compute service could not be found or created.");
    }
    overview.append(String.format("Creating %s nodes in the cloud.",number));
    Template template=ToTemplate.apply(options);
    Set<? extends NodeMetadata> metadatas=null;
    overview.append(" It may take a while ...");
    options.getCreationStateListener().onStateChange(overview.toString());
    metadatas=computeService.createNodesInGroup(options.getGroup(),number,template);
    if (metadatas != null) {
      for (      NodeMetadata metadata : metadatas) {
        options.getCreationStateListener().onStateChange(String.format("Node %s has been created.",metadata.getName()));
      }
    }
    Thread.sleep(5000);
    int suffix=1;
    if (metadatas != null) {
      String originalName=new String(options.getName());
      CountDownLatch countDownLatch=new CountDownLatch(number);
      for (      NodeMetadata nodeMetadata : metadatas) {
        String containerName;
        if (options.getNumber() >= 1) {
          containerName=originalName + (suffix++);
        }
 else {
          containerName=originalName;
        }
        CloudContainerInstallationTask installationTask=new CloudContainerInstallationTask(containerName,nodeMetadata,options,computeService,firewallManagerFactory,template.getOptions(),result,countDownLatch);
        executorService.execute(installationTask);
      }
      countDownLatch.await(10,TimeUnit.MINUTES);
    }
  }
 catch (  Throwable t) {
    for (int i=result.size(); i < number; i++) {
      CreateJCloudsContainerMetadata failureMetdata=new CreateJCloudsContainerMetadata();
      failureMetdata.setCreateOptions(options);
      failureMetdata.setFailure(t);
      result.add(failureMetdata);
    }
  }
  return result;
}
