{
  Set<? extends NodeMetadata> metadata=null;
  CreateJCloudsContainerOptions options=input.updateComputeService(getOrCreateComputeService(input));
  int number=Math.max(options.getNumber(),1);
  int suffix=1;
  final Set<CreateJCloudsContainerMetadata> result=new LinkedHashSet<CreateJCloudsContainerMetadata>();
  try {
    options.getCreationStateListener().onStateChange("Looking up for compute service.");
    ComputeService computeService=getOrCreateComputeService(options);
    if (computeService == null) {
      throw new IllegalStateException("Compute service could not be found or created.");
    }
    Template template=ToTemplate.apply(options);
    options.getCreationStateListener().onStateChange(String.format(OVERVIEW_FORMAT,number,options.getContextName()));
    try {
      metadata=computeService.createNodesInGroup(options.getGroup(),number,template);
      for (      NodeMetadata nodeMetadata : metadata) {
switch (nodeMetadata.getStatus()) {
case RUNNING:
          options.getCreationStateListener().onStateChange(String.format(NODE_CREATED_FORMAT,nodeMetadata.getName()));
        break;
default :
      options.getCreationStateListener().onStateChange(String.format(NODE_ERROR_FORMAT,nodeMetadata.getStatus()));
  }
}
}
 catch (RunNodesException ex) {
CreateJCloudsContainerMetadata failureMetdata=new CreateJCloudsContainerMetadata();
failureMetdata.setCreateOptions(options);
failureMetdata.setFailure(ex);
result.add(failureMetdata);
return result;
}
String originalName=new String(options.getName());
CountDownLatch countDownLatch=new CountDownLatch(number);
for (NodeMetadata nodeMetadata : metadata) {
String containerName;
if (options.getNumber() >= 1) {
  containerName=originalName + (suffix++);
}
 else {
  containerName=originalName;
}
CloudContainerInstallationTask installationTask=new CloudContainerInstallationTask(containerName,nodeMetadata,options,computeService,firewallManagerFactory,template.getOptions(),result,countDownLatch);
executorService.execute(installationTask);
}
if (!countDownLatch.await(15,TimeUnit.MINUTES)) {
throw new FabricException("Error waiting for container installation.");
}
}
 catch (Throwable t) {
for (int i=result.size(); i < number; i++) {
CreateJCloudsContainerMetadata failureMetdata=new CreateJCloudsContainerMetadata();
failureMetdata.setCreateOptions(options);
failureMetdata.setFailure(t);
result.add(failureMetdata);
}
}
return result;
}
