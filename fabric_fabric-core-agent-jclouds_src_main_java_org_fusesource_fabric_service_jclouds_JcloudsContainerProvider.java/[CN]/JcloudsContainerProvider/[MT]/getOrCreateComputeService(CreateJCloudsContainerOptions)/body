{
  ComputeService computeService=null;
  if (options != null) {
    Object object=options.getComputeService();
    if (object instanceof ComputeService) {
      computeService=(ComputeService)object;
    }
    if (computeService == null && options.getContextName() != null) {
      computeService=computeServiceMap.get(options.getContextName());
    }
    if (computeService == null) {
      options.getCreationStateListener().onStateChange("Compute Service not found. Creating ...");
      if (Strings.isNullOrEmpty(options.getProviderName()) || Strings.isNullOrEmpty(options.getIdentity()) || Strings.isNullOrEmpty(options.getCredential())) {
        throw new IllegalArgumentException("Cannot create compute service. A registered cloud provider or the provider name, identity and credential options are required");
      }
      Map<String,String> serviceOptions=options.getServiceOptions();
      try {
        if (options.getProviderName() != null) {
          CloudUtils.registerProvider(zooKeeper,configurationAdmin,options.getContextName(),options.getProviderName(),options.getIdentity(),options.getCredential(),serviceOptions);
        }
 else         if (options.getApiName() != null) {
          CloudUtils.registerApi(zooKeeper,configurationAdmin,options.getContextName(),options.getApiName(),options.getEndpoint(),options.getIdentity(),options.getCredential(),serviceOptions);
        }
        computeService=CloudUtils.waitForComputeService(bundleContext,options.getContextName());
      }
 catch (      Exception e) {
        LOGGER.warn("Did not manage to register compute cloud provider.");
      }
    }
  }
  if (computeService != null) {
    if (Strings.isNullOrEmpty(options.getProviderName())) {
      options.setProviderName(computeService.getContext().unwrap().getProviderMetadata().getId());
    }
    if (Strings.isNullOrEmpty(options.getApiName())) {
      options.setApiName(computeService.getContext().unwrap().getProviderMetadata().getApiMetadata().getId());
    }
  }
  return computeService;
}
