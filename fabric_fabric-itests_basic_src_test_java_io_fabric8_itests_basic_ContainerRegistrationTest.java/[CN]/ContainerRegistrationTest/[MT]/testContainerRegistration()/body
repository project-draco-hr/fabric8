{
  System.err.println(executeCommand("fabric:create -n"));
  waitForFabricCommands();
  System.err.println(executeCommand("fabric:profile-create --parents default child-profile"));
  Assert.assertTrue(Provision.profileAvailable(bundleContext,"child-profile","1.0",DEFAULT_TIMEOUT));
  Set<Container> containers=ContainerBuilder.create(1,1).withName("cnt").withProfiles("child-profile").assertProvisioningResult().build();
  try {
    Container child1=containers.iterator().next();
    System.err.println(executeCommand("fabric:profile-edit --import-pid --pid org.apache.karaf.shell child-profile"));
    System.err.println(executeCommand("fabric:profile-edit --pid org.apache.karaf.shell/sshPort=8105 child-profile"));
    System.err.println(executeCommand("fabric:profile-edit --import-pid --pid org.apache.karaf.management child-profile"));
    System.err.println(executeCommand("fabric:profile-edit --pid org.apache.karaf.management/rmiServerPort=55555 child-profile"));
    System.err.println(executeCommand("fabric:profile-edit --pid org.apache.karaf.management/rmiRegistryPort=1100 child-profile"));
    System.err.println(executeCommand("fabric:profile-edit --pid org.apache.karaf.management/serviceUrl=service:jmx:rmi://localhost:55555/jndi/rmi://localhost:1099/karaf-" + child1.getId() + " child-profile"));
    Thread.sleep(DEFAULT_TIMEOUT);
    String sshUrl=child1.getSshUrl();
    String jmxUrl=child1.getJmxUrl();
    Assert.assertTrue(sshUrl.endsWith("8105"));
    Assert.assertTrue(jmxUrl.contains("55555"));
  }
  finally {
    ContainerBuilder.destroy(containers);
  }
}
