{
  Project project=getSelectedProject(builder.getUIContext());
  final JavaSourceFacet facet=project.getFacet(JavaSourceFacet.class);
  componentNameFilter.setValueChoices(CamelCommandsHelper.createComponentNameValues(project));
  componentNameFilter.setDefaultValue("<all>");
  componentName.setValueChoices(CamelCommandsHelper.createComponentNameValues(project,componentNameFilter,false));
  instanceName.setDefaultValue(new Callable<String>(){
    @Override public String call() throws Exception {
      String value=componentName.getValue();
      if (value != null) {
        value=value.replaceAll("-","");
      }
      List<CamelEndpointDetails> endpoints=new ArrayList<>();
      ResourceVisitor visitor=new XmlResourcesCamelEndpointsVisitor((ResourcesFacet)facet,endpoints);
      ((ResourcesFacet)facet).visitResources(visitor);
      Iterator<CamelEndpointDetails> it=endpoints.iterator();
      while (it.hasNext()) {
        CamelEndpointDetails det=it.next();
        if (det.getEndpointInstance() != null) {
          if (det.getEndpointInstance().equals(instanceName)) {
            return null;
          }
        }
      }
      return value;
    }
  }
);
  targetPackage.setCompleter(new PackageNameCompleter(facet));
  targetPackage.addValidator(new PackageNameValidator());
  targetPackage.setDefaultValue("org.apache.camel.spring.components");
  className.addValidator(new ClassNameValidator(false));
  className.setDefaultValue(new Callable<String>(){
    @Override public String call() throws Exception {
      return getDefaultProducerClassName();
    }
  }
);
  builder.add(componentNameFilter).add(componentName).add(instanceName).add(targetPackage).add(className);
}
