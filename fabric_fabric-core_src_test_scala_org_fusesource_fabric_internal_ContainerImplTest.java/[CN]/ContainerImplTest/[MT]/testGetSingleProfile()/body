{
  String id=CONTAINER_ID;
  String version="1.0";
  String node=ZkPath.CONFIG_VERSIONS_CONTAINER.getPath(version,id);
  GetDataBuilder getBuilder=createMock(GetDataBuilder.class);
  SetDataBuilder setBuilder=createMock(SetDataBuilder.class);
  ExistsBuilder existsBuilder=createMock(ExistsBuilder.class);
  expect(getBuilder.forPath(CONFIG_CONTAINER.getPath(id))).andReturn(version.getBytes()).anyTimes();
  expect(getBuilder.forPath(node)).andReturn("camel".getBytes()).anyTimes();
  expect(setBuilder.forPath(eq(CONFIG_VERSIONS_CONTAINER.getPath(version,id)),(byte[])anyObject())).andReturn(null).anyTimes();
  expect(existsBuilder.forPath(EasyMock.<String>anyObject())).andReturn(new Stat()).anyTimes();
  expect(curator.getData()).andReturn(getBuilder).anyTimes();
  expect(curator.setData()).andReturn(setBuilder).anyTimes();
  expect(curator.checkExists()).andReturn(existsBuilder).anyTimes();
  replay(getBuilder);
  replay(setBuilder);
  replay(existsBuilder);
  replay(curator);
  Profile[] profiles=container.getProfiles();
  assertNotNull(profiles);
  assertEquals(1,profiles.length);
  assertEquals("camel",profiles[0].getId());
  verify(curator);
  verify(getBuilder);
  verify(setBuilder);
  verify(existsBuilder);
}
