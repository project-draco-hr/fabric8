{
  System.setProperty("MY_CONFIG_TEST","value1");
  System.setProperty("MY_OTHER_CONFIG_TEST","value2");
  System.setProperty("FABRIC8_CONSOLE_SERVICE_PROTOCOL","https");
  System.setProperty("KUBERNETES_PROTOCOL","https");
  ROOT_PATHS=Resources.toString(ExtensionTest.class.getResource("/mock/root-paths.json"),Charsets.UTF_8);
  KUBERNETES_SERVICE_JSON=Resources.toString(ExtensionTest.class.getResource("/mock/kubernetes-service.json"),Charsets.UTF_8);
  FABRIC8_CONSOLE_SERVICE_JSON=Resources.toString(ExtensionTest.class.getResource("/mock/kubernetes-service.json"),Charsets.UTF_8);
  APP_LIBRARY_SERVICE_JSON=Resources.toString(ExtensionTest.class.getResource("/mock/app-library-service.json"),Charsets.UTF_8);
  EMPTY_ROUTES_JSON=Resources.toString(ExtensionTest.class.getResource("/mock/empty-routes.json"),Charsets.UTF_8);
  http:   server.setDispatcher(new Dispatcher(){
    @Override public MockResponse dispatch(    RecordedRequest request) throws InterruptedException {
      if (request.getPath().equals("/")) {
        return new MockResponse().setResponseCode(200).setHeader("Content-Type","application/json").setBody(ROOT_PATHS);
      }
 else       if (request.getPath().equals("/api/v1/namespaces/default/services/kubernetes")) {
        return new MockResponse().setResponseCode(200).setHeader("Content-Type","application/json").setBody(KUBERNETES_SERVICE_JSON);
      }
 else       if (request.getPath().matches("/api/[^/]+/namespaces/[^/]+/services/fabric8-console-service")) {
        return new MockResponse().setResponseCode(200).setHeader("Content-Type","application/json").setBody(FABRIC8_CONSOLE_SERVICE_JSON);
      }
 else       if (request.getPath().matches("/api/[^/]+/namespaces/[^/]+/services/app-library[/]?")) {
        return new MockResponse().setResponseCode(200).setHeader("Content-Type","application/json").setBody(APP_LIBRARY_SERVICE_JSON);
      }
 else       if (request.getPath().matches("/oapi/[^/]+/namespaces/[^/]+/routes[/]?")) {
        return new MockResponse().setResponseCode(200).setHeader("Content-Type","application/json").setBody(EMPTY_ROUTES_JSON);
      }
 else       if (request.getPath().matches("/api/[^/]+/namespaces/[^/]+/endpoints[/]?")) {
        return new MockResponse().setResponseCode(200).setHeader("Content-Type","application/json").setBody("{}");
      }
 else {
        return new MockResponse().setResponseCode(404);
      }
    }
  }
);
  server.play();
  System.setProperty(Config.KUBERNETES_MASTER_SYSTEM_PROPERTY,"http://" + server.getHostName() + ":"+ server.getPort());
  System.setProperty(Config.KUBERNETES_TRUST_CERT_SYSTEM_PROPERTY,"true");
}
