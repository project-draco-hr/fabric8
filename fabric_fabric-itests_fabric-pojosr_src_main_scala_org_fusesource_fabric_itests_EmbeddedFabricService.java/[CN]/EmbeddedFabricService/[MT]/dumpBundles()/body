{
  BundleContext bc=registry.getBundleContext();
  for (  Bundle b : bc.getBundles()) {
switch (b.getState()) {
case Bundle.ACTIVE:
      log.debug(String.format("Found bundle : %s with version %s in state ACTIVE",b.getSymbolicName(),b.getVersion()));
    break;
case Bundle.INSTALLED:
  log.debug(String.format("Found bundle : %s with version %s in state INSTALLED",b.getSymbolicName(),b.getVersion()));
break;
case Bundle.RESOLVED:
log.debug(String.format("Found bundle : %s with version %s in state RESOLVED",b.getSymbolicName(),b.getVersion()));
break;
case Bundle.STARTING:
log.debug(String.format("Found bundle : %s with version %s in state STARTING",b.getSymbolicName(),b.getVersion()));
break;
case Bundle.STOPPING:
log.debug(String.format("Found bundle : %s with version %s in state STOPPING",b.getSymbolicName(),b.getVersion()));
break;
case Bundle.UNINSTALLED:
log.debug(String.format("Found bundle : %s with version %s in state UNINSTALLED",b.getSymbolicName(),b.getVersion()));
break;
default :
log.debug(String.format("Found bundle : %s with version %s in state %s",b.getSymbolicName(),b.getVersion(),b.getState()));
break;
}
}
}
