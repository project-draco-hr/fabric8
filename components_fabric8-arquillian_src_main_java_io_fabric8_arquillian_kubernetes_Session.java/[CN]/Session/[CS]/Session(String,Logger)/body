{
  this.id=id;
  this.logger=logger;
  namespacePrefix=Systems.getEnvVarOrSystemProperty("FABRIC8_NAMESPACE_PREFIX","itest-");
  namespace=namespacePrefix + id;
  namespaceDetails=new Namespace();
  KubernetesHelper.getOrCreateMetadata(namespaceDetails).setName(namespace);
  Map<String,String> labels=KubernetesHelper.getOrCreateLabels(namespaceDetails);
  labels.put("provider","fabric8");
  labels.put("component","integrationTest");
  labels.put("framework","arquillian");
  Map<String,String> annotations=KubernetesHelper.getOrCreateAnnotations(namespaceDetails);
  annotations.put("fabric8.devops/arquillianId",id);
  File dir=getBaseDir();
  String gitUrl=findGitUrl(dir);
  if (Strings.isNotBlank(gitUrl)) {
    annotations.put("fabric8.devops/gitUrl",gitUrl);
  }
  File pomProperties=new File(dir,"target/maven-archiver/pom.properties");
  if (pomProperties.isFile()) {
    try {
      Properties properties=new Properties();
      properties.load(new FileInputStream(pomProperties));
      Map<String,String> map=PropertiesHelper.toMap(properties);
      for (      Map.Entry<String,String> entry : map.entrySet()) {
        String key=entry.getKey();
        String value=entry.getValue();
        if (Strings.isNotBlank(key) && Strings.isNotBlank(value)) {
          annotations.put("fabric8.devops/" + key,value);
        }
      }
    }
 catch (    IOException e) {
      logger.warn("Failed to load " + pomProperties + " file to annotate the namespace: "+ e);
    }
  }
}
