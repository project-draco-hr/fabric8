{
  String watchUrl=getAddress().replaceFirst("^http","ws") + "/" + apiPath+ "/namespaces/"+ namespace+ "/"+ entityType+ "?watch=true&resourceVersion="+ resourceVersion;
  String labelsString=toLabelsString(labels);
  if (Strings.isNotBlank(labelsString)) {
    watchUrl+="&labelSelector=" + labelsString;
  }
  String openShiftToken=getFactory().findToken();
  if (openShiftToken != null) {
    watchUrl+="&access_token=" + openShiftToken;
  }
  LOG.debug("Connecting to {}",watchUrl);
  WebSocketClient client=getFactory().createWebSocketClient();
  try {
    URI watchUri=URI.create(watchUrl);
    ClientUpgradeRequest upgradeRequest=new ClientUpgradeRequest();
    upgradeRequest.setRequestURI(watchUri);
    upgradeRequest.setHeader("Origin",watchUri.getHost() + ":" + watchUri.getPort());
    client.start();
    client.connect(watcher,watchUri,upgradeRequest);
    return client;
  }
 catch (  Throwable t) {
    LOG.error("Failed to watch pods",t);
    return null;
  }
}
