{
  OsgiModuleRegistry registry=Activator.registry;
  List<ModuleRegistry.Module> modules=registry.getApplicationModules();
  Map<VersionedDependencyId,Bundle> installed=registry.getInstalled();
  for (  ModuleRegistry.Module module : modules) {
    if (name.equals(module.getName())) {
      HashSet<VersionedDependencyId> s=new HashSet<VersionedDependencyId>(module.getVersionIds());
      s.retainAll(installed.keySet());
      boolean isInstalled=!s.isEmpty();
      if (isInstalled && !force) {
        throw new Exception("The module is already installed");
      }
      ModuleRegistry.VersionedModule versionedModule=null;
      if (version != null) {
        versionedModule=module.getVersions().get(version);
        if (versionedModule == null) {
          throw new Exception("Invalid version: " + version);
        }
      }
 else {
        versionedModule=module.latest();
      }
      VersionedDependencyId id=versionedModule.getId();
      String v=version != null ? version : id.getVersion();
      List<String> extensionAdjustments=Arrays.asList(extensions);
      if (!extensionAdjustments.isEmpty()) {
        List<String> enabled=new ArrayList<String>(versionedModule.getDefaultExtensions());
        for (        String adjustment : extensionAdjustments) {
          if (adjustment.startsWith("+")) {
            String name=adjustment.substring(1);
            enabled.add(name);
          }
 else           if (adjustment.startsWith("-")) {
            String name=adjustment.substring(1);
            enabled.remove(name);
          }
 else {
            throw new IllegalArgumentException("Expected extension argument '" + adjustment + "' to be prefixed with '+' or '-'");
          }
        }
        versionedModule.setEnabledExtensions(enabled);
        if (!enabled.isEmpty()) {
          println("Enabling extensions: " + join(enabled,", "));
        }
      }
      String url="fab:mvn:" + id.getGroupId() + "/"+ id.getArtifactId()+ "/"+ v+ "/"+ id.getExtension()+ (id.getClassifier() == null ? "" : "/" + id.getClassifier());
      println("Installing: " + url);
      Bundle bundle=install(url);
      if (bundle != null) {
        println("Installed bundle: %d",bundle.getBundleId());
        if (!noStart) {
          bundle.start();
        }
      }
    }
  }
  return null;
}
