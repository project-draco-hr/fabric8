{
  ArrayList<AMQPString> payload1=new ArrayList<AMQPString>();
  ArrayList<AMQPString> payload2=new ArrayList<AMQPString>();
  for (int i=0; i < 10; i++) {
    payload1.add(new AMQPString("payload item " + i));
    payload2.add(new AMQPString("and payload item " + (i + 10)));
  }
  AmqpSequence seq1=new AmqpSequence();
  seq1.setValue(payload1);
  AmqpSequence seq2=new AmqpSequence();
  seq2.setValue(payload2);
  List<AmqpSequence> list=new ArrayList<AmqpSequence>();
  list.add(seq1);
  list.add(seq2);
  SequenceMessage msg=MessageFactory.createSequenceMessage(list,new Properties(null,ascii("foo").buffer(),new AMQPString("nowhere"),null,null,null,null,null,null,new Date()));
  AnnotatedMessage in=createAnnotatedMessage(msg);
  in.setDeliveryAnnotations(new DeliveryAnnotations());
  in.getDeliveryAnnotations().setValue(new HashMap<AMQPSymbol,AMQPString>());
  in.getDeliveryAnnotations().getValue().put(new AMQPSymbol(Footer.CONSTRUCTOR.getBuffer()),new AMQPString("Hi!"));
  in.setHeader(new Header());
  in.getHeader().setDurable(true);
  in.getHeader().setDeliveryCount(0L);
  in.setFooter(new Footer());
  in.getFooter().setValue(new HashMap<AMQPSymbol,AMQPString>());
  in.getFooter().getValue().put(new AMQPSymbol(Buffer.ascii("test").buffer()),new AMQPString("value"));
  return in;
}
