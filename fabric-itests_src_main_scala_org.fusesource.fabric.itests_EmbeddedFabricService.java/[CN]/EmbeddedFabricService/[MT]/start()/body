{
  System.setProperty("org.osgi.framework.storage","target/osgi/" + System.currentTimeMillis());
  System.setProperty("karaf.name","root");
  List<BundleDescriptor> bundles=new ClasspathScanner().scanForBundles();
  log.info("Located following bundles on classpath : ");
  for (  BundleDescriptor desc : bundles) {
    log.debug("Bundle : {}",desc);
  }
  Map config=new HashMap();
  config.put(PojoServiceRegistryFactory.BUNDLE_DESCRIPTORS,bundles);
  ServiceLoader<PojoServiceRegistryFactory> loader=ServiceLoader.load(PojoServiceRegistryFactory.class);
  registry=loader.iterator().next().newPojoServiceRegistry(config);
  registry.addServiceListener(new ServiceListener(){
    @Override public void serviceChanged(    ServiceEvent event){
      ServiceReference ref=event.getServiceReference();
      Object service=registry.getService(ref);
switch (event.getType()) {
case ServiceEvent.MODIFIED:
        log.info("Service modified : " + service);
      break;
case ServiceEvent.MODIFIED_ENDMATCH:
    log.info("Service modified endmatch : " + service);
  break;
case ServiceEvent.REGISTERED:
log.info("Service registering : " + service);
break;
case ServiceEvent.UNREGISTERING:
log.info("Service unregistering : " + service);
break;
default :
log.info("Unknown event : " + event.getType() + " service : "+ service);
}
}
}
);
getConfigAdmin();
getService(javax.management.MBeanServer.class,registry);
getZooKeeperClusterService();
createZooKeeperCluster();
IZKClient client=getZooKeeperClient();
if (!client.isConnected()) {
throw new RuntimeException("Not connected to ZK...");
}
getFabricService();
dumpBundles();
dumpServiceReferences();
}
