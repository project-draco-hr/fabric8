{
  try {
    String path=artifact.getPath();
    if (path.endsWith(".fab")) {
      return true;
    }
    if (!path.endsWith(".jar")) {
      return false;
    }
    JarFile jar=new JarFile(artifact);
    try {
      Manifest manifest=jar.getManifest();
      boolean answer=false;
      boolean bundle=false;
      if (manifest != null) {
        Attributes attributes=manifest.getMainAttributes();
        bundle=isBundle(attributes);
        for (        String name : ServiceConstants.FAB_PROPERTY_NAMES) {
          if (attributes.getValue(name) != null) {
            answer=true;
            break;
          }
        }
      }
      if (!answer && isDeployNonBundles()) {
        answer=!bundle;
        if (answer) {
          logger.info("Interpreting the non-bundle jar as a FAB: " + artifact);
        }
      }
      System.out.println("Fab deploy of a jar answer: " + answer + " bundle: "+ bundle+ " isDeployNonBundles: "+ isDeployNonBundles()+ " manifest: "+ manifest);
      return answer;
    }
  finally {
      jar.close();
    }
  }
 catch (  Exception e) {
    logger.error("Unable to parse deployed file " + artifact.getAbsolutePath(),e);
  }
  return false;
}
