{
  String mvnUrl=url;
  if (mvnUrl.startsWith("wrap:")) {
    mvnUrl=mvnUrl.substring("wrap:".length());
    if (mvnUrl.contains("$")) {
      mvnUrl=mvnUrl.substring(0,mvnUrl.lastIndexOf('$') - 1);
    }
  }
  if (mvnUrl.startsWith("blueprint:") || mvnUrl.startsWith("spring:")) {
    mvnUrl=mvnUrl.substring(mvnUrl.indexOf(':') + 1);
  }
  if (mvnUrl.startsWith("mvn:")) {
    MavenDownloadTask task=new MavenDownloadTask(url,system,configuration,executor);
    executor.submit(task);
    if (!mvnUrl.equals(url)) {
      final SimpleDownloadTask download=new SimpleDownloadTask(url,executor);
      task.addListener(new FutureListener<DownloadFuture>(){
        @Override public void operationComplete(        DownloadFuture future){
          executor.submit(download);
        }
      }
);
      return download;
    }
 else {
      return task;
    }
  }
 else {
    final SimpleDownloadTask download=new SimpleDownloadTask(url,executor);
    executor.submit(download);
    return download;
  }
}
