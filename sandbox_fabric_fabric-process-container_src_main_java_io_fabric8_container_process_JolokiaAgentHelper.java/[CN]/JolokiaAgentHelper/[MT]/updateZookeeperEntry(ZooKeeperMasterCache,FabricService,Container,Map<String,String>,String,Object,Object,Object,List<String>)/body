{
  String matchedZkPath=null;
  Map<String,String> configuration=container.getOverlayProfile().getConfiguration(Constants.WEB_CONTEXT_PATHS_PID);
  if (configuration != null) {
    for (    Map.Entry<String,String> entry : configuration.entrySet()) {
      if (entry.getValue().equals(path)) {
        matchedZkPath=entry.getKey();
        break;
      }
    }
  }
  if (matchedZkPath != null) {
    String zkPath=ZkPath.WEBAPPS_CLUSTER.getPath(matchedZkPath);
    if (isWebAppActive(stateName)) {
      String id=container.getId();
      String httpUrl=container.getHttpUrl();
      if (Strings.isNullOrBlank(httpUrl)) {
        if (envVars != null) {
          String portText=envVars.get("FABRIC8_HTTP_PROXY_PORT");
          if (Strings.isNotBlank(portText)) {
            String ip=container.getIp();
            if (Strings.isNotBlank(ip)) {
              httpUrl="http://" + ip + ":"+ portText;
            }
          }
        }
        if (httpUrl == null) {
          httpUrl="";
        }
      }
      String url=httpUrl + path;
      String json="{\"id\":" + JsonHelper.jsonEncodeString(id) + ", \"container\":"+ JsonHelper.jsonEncodeString(id)+ ", \"services\":["+ JsonHelper.jsonEncodeString(url)+ "]"+ "}";
      try {
        zkMasterCache.setStringData(zkPath,json,CreateMode.EPHEMERAL);
        newZkContainerPaths.add(zkPath);
      }
 catch (      Exception e) {
        LOG.warn("Failed to register web app json at path " + path + " json: "+ json+ ". "+ e,e);
      }
    }
 else {
      try {
        zkMasterCache.deleteData(zkPath);
      }
 catch (      Exception e) {
        LOG.warn("Failed to remove web app json at path " + path + ". "+ e,e);
      }
    }
  }
}
