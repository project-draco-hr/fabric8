{
  DiscoveryListener discoveryListener=this.discoveryListener.get();
  if (discoveryListener != null) {
    HashSet<String> activeServices=new HashSet<String>();
    for (    ActiveMQNode m : members) {
      for (      String service : m.services) {
        String resolved=service;
        try {
          resolved=ZooKeeperUtils.getSubstitutedData(curator,service);
        }
 catch (        Exception e) {
        }
        activeServices.add(resolved);
      }
    }
    if (members != null) {
synchronized (discoveredServices) {
        HashSet<String> removedServices=new HashSet<String>(discoveredServices.keySet());
        removedServices.removeAll(activeServices);
        HashSet<String> addedServices=new HashSet<String>(activeServices);
        addedServices.removeAll(discoveredServices.keySet());
        addedServices.removeAll(removedServices);
        for (        String service : addedServices) {
          SimpleDiscoveryEvent e=new SimpleDiscoveryEvent(service);
          discoveredServices.put(service,e);
          discoveryListener.onServiceAdd(e);
        }
        for (        String service : removedServices) {
          SimpleDiscoveryEvent e=discoveredServices.remove(service);
          if (e != null) {
            e.removed.set(true);
          }
          discoveryListener.onServiceRemove(e);
        }
      }
    }
  }
}
