{
  if (startCounter.addAndGet(1) == 1) {
    running.set(true);
    if (curator == null) {
      LOG.info("Using local ZKClient");
      managedZkClient=true;
      CuratorFrameworkFactory.Builder builder=CuratorFrameworkFactory.builder().connectString(System.getProperty("zookeeper.url","localhost:2181")).retryPolicy(new RetryOneTime(1000)).connectionTimeoutMs(10000);
      String password=System.getProperty("zookeeper.password","admin");
      if (password != null && !password.isEmpty()) {
        builder.authorization("digest",("fabric:" + password).getBytes());
      }
      CuratorFramework client=builder.build();
      client.start();
      client.getZookeeperClient().blockUntilConnectedOrTimedOut();
      curator=client;
    }
 else {
      managedZkClient=false;
    }
    getGroup().add(new GroupListener<ActiveMQNode>(){
      @Override public void groupEvent(      Group<ActiveMQNode> group,      GroupEvent event){
        Map<String,ActiveMQNode> masters=new HashMap<String,ActiveMQNode>();
        for (        ActiveMQNode node : group.members().values()) {
          if (!masters.containsKey(node.id)) {
            masters.put(node.id,node);
          }
        }
        update(masters.values());
      }
    }
);
    if (id != null) {
      getGroup().update(createState());
    }
    getGroup().start();
  }
}
