{
  String user=fabricService.get().getZooKeeperUser();
  String password=fabricService.get().getZookeeperPassword();
  URI uploadUri=fabricService.get().getMavenRepoUploadURI();
  URI artifactUri=uploadUri.resolve(parser.getArtifactPath());
  URL url;
  try {
    url=artifactUri.toURL();
  }
 catch (  MalformedURLException e) {
    LOG.warn("Failed to parse URI " + artifactUri + ". "+ e,e);
    return;
  }
  if (fileToUpload == null) {
    return;
  }
  if (!fileToUpload.exists() || !fileToUpload.isFile()) {
    LOG.warn("Artifact file does not exist! " + fileToUpload.getAbsolutePath());
    return;
  }
  LOG.info("Uploading " + fileToUpload.getPath() + " to fabric8 maven repo: "+ url+ " as user: "+ user);
  try {
    FileChannel in=new FileInputStream(fileToUpload).getChannel();
    URLConnection connection=url.openConnection();
    connection.setDoOutput(true);
    connection.setRequestProperty("Authorization","Basic " + Base64Encoder.encode(user + ":" + password));
    WritableByteChannel out=Channels.newChannel(connection.getOutputStream());
    in.transferTo(0,fileToUpload.length(),out);
    if (connection instanceof HttpURLConnection) {
      int code=((HttpURLConnection)connection).getResponseCode();
      if (code < 200 || code >= 300) {
        LOG.warn(String.format("Got response code %s while uploading %s to fabric8 maven repo: %s",code,fileToUpload.getPath(),url));
        return;
      }
    }
    LOG.info("Uploaded  " + fileToUpload.getPath() + " to fabric8 maven repo: "+ url);
  }
 catch (  Exception e) {
    LOG.error("Failed to upload " + fileToUpload.getPath() + " to fabric8 maven repo: "+ url+ ". "+ e,e);
  }
}
