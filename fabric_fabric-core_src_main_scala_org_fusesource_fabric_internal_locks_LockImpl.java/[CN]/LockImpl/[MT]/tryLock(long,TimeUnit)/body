{
  long waitFor=unit.toMillis(time);
  long start=System.currentTimeMillis();
  LockData lockData;
  String lockPath=null;
  try {
    createDefault(zooKeeper,path,"");
    Thread current=Thread.currentThread();
    lockData=threadLocks.get(current);
    if (lockData == null) {
      lockPath=createLockNode(path);
      setData(zooKeeper,lockPath,System.getProperty("karaf.name") + "/" + current.getName());
      lockData=new LockData(current,lockPath);
      threadLocks.put(current,lockData);
    }
 else {
      lockData.getCount().incrementAndGet();
      return true;
    }
    while (start + waitFor >= System.currentTimeMillis()) {
      List<String> children=zooKeeper.getChildren(path,watcher);
      String id=stripPath(lockData.getLockPath());
      if (hasLock(id,children)) {
        return true;
      }
 else {
synchronized (this) {
          wait(start + waitFor - System.currentTimeMillis());
        }
      }
    }
    threadLocks.remove(current);
    deleteLockNode(lockPath);
    return false;
  }
 catch (  Exception ex) {
    LOGGER.warn("Error while trying to acquire lock on: {}.",path,ex);
    deleteLockNode(lockPath);
    return false;
  }
}
