{
  String version=System.getProperty("fabric.version");
  System.err.println(executeCommand("fabric:create -n"));
  System.err.println(executeCommand("fabric:profile-create --parents camel example-camel-cxf"));
  System.err.println(executeCommand("fabric:profile-edit --repositories mvn:org.fusesource.fabric.examples/fabric-camel-cxf/" + version + "/xml/features example-camel-cxf"));
  System.err.println(executeCommand("fabric:profile-edit --features fabric-camel-cxf example-camel-cxf"));
  createAndAssertChildContainer("child1","root","example-camel-cxf");
  System.err.println(executeCommand("fabric:container-list"));
  Thread.sleep(5000);
  System.err.println(executeCommand("fabric:container-connect -u admin -p admin child1 osgi:list"));
  System.err.println(executeCommand("fabric:container-connect -u admin -p admin child1 camel:route-list"));
  String response=new AnsiString(executeCommand("fabric:container-connect -u admin -p admin child1 camel:route-info fabric-camel-cxf | grep Started")).getPlain().toString();
  System.err.println(response);
  Assert.assertTrue(response.contains("fabric-camel-cxf"));
}
