{
  System.out.println("Starting ZK server!");
  serverFactoryBean.setPort(9004);
  serverFactoryBean.afterPropertiesSet();
  zkClientBean.setConnectString("localhost:9004");
  CuratorFramework client=zkClientBean.getObject();
  SimpleRegistry registry=new SimpleRegistry();
  registry.put("curator",client);
  producerContext=new DefaultCamelContext(registry);
  producerContext.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("direct:start").to("vm:start");
    }
  }
);
  template=producerContext.createProducerTemplate();
  consumerContext1=new DefaultCamelContext(registry);
  consumerContext1.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("master:MasterEndpointFailoverTest:vm:start").to("mock:result1");
    }
  }
);
  consumerContext2=new DefaultCamelContext(registry);
  consumerContext2.addRoutes(new RouteBuilder(){
    @Override public void configure() throws Exception {
      from("master:MasterEndpointFailoverTest:vm:start").to("mock:result2");
    }
  }
);
  ServiceHelper.startServices(consumerContext1);
  ServiceHelper.startServices(producerContext);
  result1Endpoint=consumerContext1.getEndpoint("mock:result1",MockEndpoint.class);
  result2Endpoint=consumerContext2.getEndpoint("mock:result2",MockEndpoint.class);
}
