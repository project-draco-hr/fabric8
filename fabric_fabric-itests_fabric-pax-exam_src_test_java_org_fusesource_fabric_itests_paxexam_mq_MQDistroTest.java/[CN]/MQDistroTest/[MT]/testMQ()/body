{
  HttpClient client=new HttpClient();
  GetMethod get=new GetMethod(WEB_CONSOLE_URL + "send.jsp");
  for (int i=0; i < 20; i++) {
    Thread.currentThread().sleep(1000);
    try {
      i=client.executeMethod(get);
    }
 catch (    java.net.ConnectException ignored) {
    }
  }
  assertEquals("get succeeded on " + get,200,get.getStatusCode());
  String response=get.getResponseBodyAsString();
  final String secretMarker="<input type=\"hidden\" name=\"secret\" value=\"";
  String secret=response.substring(response.indexOf(secretMarker) + secretMarker.length());
  secret=secret.substring(0,secret.indexOf("\"/>"));
  final String destination="validate.console.send";
  final String content="Hi for the " + Math.random() + "' time";
  PostMethod post=new PostMethod(WEB_CONSOLE_URL + "sendMessage.action");
  post.addParameter("secret",secret);
  post.addParameter("JMSText",content);
  post.addParameter("JMSDestination",destination);
  post.addParameter("JMSDestinationType","queue");
  assertEquals("post succeeded, " + post,302,client.executeMethod(post));
  ActiveMQConnection connection=(ActiveMQConnection)new ActiveMQConnectionFactory().createConnection();
  connection.start();
  try {
    Session session=connection.createSession(false,Session.AUTO_ACKNOWLEDGE);
    TextMessage textMessage=(TextMessage)session.createConsumer(new ActiveMQQueue(destination)).receive(10 * 1000);
    assertNotNull("got a message",textMessage);
    assertEquals("it is ours",content,textMessage.getText());
  }
  finally {
    connection.close();
  }
  ConnectionFactory connectionFactory=getOsgiService(ConnectionFactory.class);
  assertTrue(connectionFactory instanceof ActiveMQConnectionFactory);
  ActiveMQConnection connectionFromOsgiFactory=(ActiveMQConnection)connectionFactory.createConnection();
  connectionFromOsgiFactory.start();
  try {
    assertEquals("same broker",connection.getBrokerName(),connectionFromOsgiFactory.getBrokerName());
  }
  finally {
    connectionFromOsgiFactory.close();
  }
}
