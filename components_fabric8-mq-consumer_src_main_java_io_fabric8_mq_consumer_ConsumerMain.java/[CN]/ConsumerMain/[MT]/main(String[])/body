{
  try {
    try {
      host=AccessController.doPrivileged(new PrivilegedAction<String>(){
        @Override public String run(){
          String result=System.getenv("AMQ_HOST");
          result=(result == null || result.isEmpty()) ? System.getProperty("org.apache.activemq.AMQ_HOST",DEFAULT_HOST) : result;
          return result;
        }
      }
);
      String portStr=AccessController.doPrivileged(new PrivilegedAction<String>(){
        @Override public String run(){
          String result=System.getenv("AMQ_PORT");
          result=(result == null || result.isEmpty()) ? System.getProperty("org.apache.activemq.AMQ_PORT","61616") : result;
          return result;
        }
      }
);
      if (portStr != null && portStr.length() > 0) {
        port=Integer.parseInt(portStr);
      }
      String prefetchStr=AccessController.doPrivileged(new PrivilegedAction<String>(){
        @Override public String run(){
          String result=System.getenv("AMQ_PREFETCH");
          result=(result == null || result.isEmpty()) ? System.getProperty("org.apache.activemq.AMQ_PREFETCH","1000") : result;
          return result;
        }
      }
);
      if (prefetchStr != null && prefetchStr.length() > 0) {
        prefetch=Integer.parseInt(prefetchStr);
      }
      queueName=AccessController.doPrivileged(new PrivilegedAction<String>(){
        @Override public String run(){
          String result=System.getenv("AMQ_QUEUENAME");
          result=(result == null || result.isEmpty()) ? System.getProperty("org.apache.activemq.AMQ_QUEUENAME","TEST.FOO") : result;
          return result;
        }
      }
);
    }
 catch (    Throwable e) {
      LOG.warn("Failed to look up System properties for host and port",e);
    }
    if (host == null || host.length() == 0) {
      host=DEFAULT_HOST;
    }
    if (port <= 0) {
      port=61616;
    }
    if (prefetch <= 0) {
      prefetch=1000;
    }
    if (queueName == null) {
      queueName="TEST.FOO";
    }
    org.apache.camel.main.Main main=new org.apache.camel.main.Main();
    String brokerURL="tcp://" + host + ":"+ port+ "?jms.prefetchPolicy.all="+ prefetch;
    System.out.println("Connecting to brokerURL " + brokerURL);
    main.bind("activemq",ActiveMQComponent.activeMQComponent(brokerURL));
    main.bind("myDataSet",new SimpleDataSet());
    main.enableHangupSupport();
    main.addRouteBuilder(new RouteBuilder(){
      public void configure(){
        from("activemq:" + queueName).to("dataset:myDataSet");
      }
    }
);
    main.run(args);
  }
 catch (  Throwable e) {
    LOG.error("Failed to connect to Fabric8MQ",e);
  }
}
