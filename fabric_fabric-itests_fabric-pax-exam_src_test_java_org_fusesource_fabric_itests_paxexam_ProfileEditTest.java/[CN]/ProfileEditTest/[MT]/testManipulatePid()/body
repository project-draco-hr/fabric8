{
  FabricService fabricService=getFabricService();
  assertNotNull(fabricService);
  System.err.println(executeCommand("fabric:create -n"));
  waitForFabricCommands();
  System.err.println(executeCommand("fabric:profile-edit --pid my.pid/key=value default"));
  Profile profile=fabricService.getDefaultVersion().getProfile("default");
  Assert.assertNotNull(profile);
  Map<String,Map<String,String>> configurations=profile.getConfigurations();
  Assert.assertNotNull(configurations);
  Assert.assertTrue(configurations.containsKey("my.pid"));
  Map<String,String> myPid=configurations.get("my.pid");
  Assert.assertNotNull(myPid);
  Assert.assertTrue(myPid.containsKey("key"));
  Assert.assertEquals("value",myPid.get("key"));
  System.err.println(executeCommand("fabric:profile-edit --append --pid my.pid/key=othervalue default"));
  configurations=profile.getConfigurations();
  Assert.assertTrue(configurations.containsKey("my.pid"));
  myPid=configurations.get("my.pid");
  Assert.assertNotNull(myPid);
  Assert.assertTrue(myPid.containsKey("key"));
  Assert.assertEquals("value,othervalue",myPid.get("key"));
  System.err.println(executeCommand("fabric:profile-edit --remove --pid my.pid/key=value default"));
  configurations=profile.getConfigurations();
  Assert.assertTrue(configurations.containsKey("my.pid"));
  myPid=configurations.get("my.pid");
  Assert.assertNotNull(myPid);
  Assert.assertTrue(myPid.containsKey("key"));
  Assert.assertEquals("othervalue",myPid.get("key"));
  System.err.println(executeCommand("fabric:profile-edit --remove --pid my.pid/key=othervalue default"));
  configurations=profile.getConfigurations();
  Assert.assertTrue(configurations.containsKey("my.pid"));
  myPid=configurations.get("my.pid");
  Assert.assertNotNull(myPid);
  Assert.assertTrue(myPid.containsKey("key"));
  Assert.assertEquals("",myPid.get("key"));
  System.err.println(executeCommand("fabric:profile-edit --pid my.pid/key=prop1=value1 default"));
  configurations=profile.getConfigurations();
  Assert.assertTrue(configurations.containsKey("my.pid"));
  myPid=configurations.get("my.pid");
  Assert.assertNotNull(myPid);
  Assert.assertTrue(myPid.containsKey("key"));
  Assert.assertEquals("prop1=value1",myPid.get("key"));
  System.err.println(executeCommand("fabric:profile-edit --pid my.pid/key1=value1 --pid my.pid/key2=value2 default"));
  configurations=profile.getConfigurations();
  Assert.assertTrue(configurations.containsKey("my.pid"));
  myPid=configurations.get("my.pid");
  Assert.assertNotNull(myPid);
  Assert.assertTrue(myPid.containsKey("key1"));
  Assert.assertEquals("value1",myPid.get("key1"));
  Assert.assertTrue(myPid.containsKey("key2"));
  Assert.assertEquals("value2",myPid.get("key2"));
}
