{
  String superType=clazz.getSuperType();
  if (superType != null) {
    boolean valid="org.apache.camel.builder.RouteBuilder".equals(superType) || "org.apache.camel.spring.boot.FatJarRouter".equals(superType) || "org.apache.camel.test.junit4.CamelTestSupport".equals(superType);
    if (!valid) {
      return;
    }
  }
  for (  FieldSource<JavaClassSource> field : clazz.getFields()) {
    String uri=null;
    for (    Annotation ann : field.getAnnotations()) {
      boolean valid="org.apache.camel.EndpointInject".equals(ann.getQualifiedName()) || "org.apache.camel.cdi.Uri".equals(ann.getQualifiedName());
      if (valid) {
        Expression exp=(Expression)ann.getInternal();
        if (exp instanceof SingleMemberAnnotation) {
          exp=((SingleMemberAnnotation)exp).getValue();
        }
 else         if (exp instanceof NormalAnnotation) {
          List values=((NormalAnnotation)exp).values();
          for (          Object value : values) {
            MemberValuePair pair=(MemberValuePair)value;
            if ("uri".equals(pair.getName().toString())) {
              exp=pair.getValue();
              break;
            }
          }
        }
        uri=CamelJavaParserHelper.getLiteralValue(clazz,exp);
      }
    }
    if (uri != null && findEndpointByUri(endpoints,uri) == null) {
      String fileName=fullyQualifiedFileName;
      if (fileName.startsWith(baseDir)) {
        fileName=fileName.substring(baseDir.length() + 1);
      }
      String id=field.getName();
      CamelEndpointDetails detail=new CamelEndpointDetails();
      detail.setFileName(fileName);
      detail.setClassName(clazz.getQualifiedName());
      detail.setEndpointInstance(id);
      detail.setEndpointUri(uri);
      detail.setEndpointComponentName(endpointComponentName(uri));
      endpoints.add(detail);
    }
  }
  MethodSource<JavaClassSource> method=CamelJavaParserHelper.findConfigureMethod(clazz);
  if (method != null) {
    List<ParserResult> uris=CamelJavaParserHelper.parseCamelConsumerUris(method,false,true);
    for (    ParserResult uri : uris) {
      CamelEndpointDetails detail=findEndpointByUri(endpoints,uri.getElement());
      if (detail != null) {
        detail.setConsumerOnly(true);
      }
    }
    uris=CamelJavaParserHelper.parseCamelProducerUris(method,false,true);
    for (    ParserResult result : uris) {
      CamelEndpointDetails detail=findEndpointByUri(endpoints,result.getElement());
      if (detail != null) {
        if (detail.isConsumerOnly()) {
          detail.setConsumerOnly(false);
          detail.setProducerOnly(false);
        }
 else {
          detail.setProducerOnly(true);
        }
      }
    }
    uris=CamelJavaParserHelper.parseCamelConsumerUris(method,true,false);
    for (    ParserResult result : uris) {
      String fileName=fullyQualifiedFileName;
      if (fileName.startsWith(baseDir)) {
        fileName=fileName.substring(baseDir.length() + 1);
      }
      CamelEndpointDetails detail=new CamelEndpointDetails();
      detail.setFileName(fileName);
      detail.setClassName(clazz.getQualifiedName());
      detail.setMethodName("configure");
      detail.setEndpointInstance(null);
      detail.setEndpointUri(result.getElement());
      int line=findLineNumber(fullyQualifiedFileName,result.getPosition());
      if (line > -1) {
        detail.setLineNumber("" + line);
      }
      detail.setEndpointComponentName(endpointComponentName(result.getElement()));
      detail.setConsumerOnly(true);
      detail.setProducerOnly(false);
      endpoints.add(detail);
    }
    uris=CamelJavaParserHelper.parseCamelProducerUris(method,true,false);
    for (    ParserResult result : uris) {
      CamelEndpointDetails detail=findEndpointByUri(endpoints,result.getElement());
      if (detail == null) {
        String fileName=fullyQualifiedFileName;
        if (fileName.startsWith(baseDir)) {
          fileName=fileName.substring(baseDir.length() + 1);
        }
        detail=new CamelEndpointDetails();
        detail.setFileName(fileName);
        detail.setClassName(clazz.getQualifiedName());
        detail.setMethodName("configure");
        detail.setEndpointInstance(null);
        detail.setEndpointUri(result.getElement());
        int line=findLineNumber(fullyQualifiedFileName,result.getPosition());
        if (line > -1) {
          detail.setLineNumber("" + line);
        }
        detail.setEndpointComponentName(endpointComponentName(result.getElement()));
        detail.setConsumerOnly(false);
        detail.setProducerOnly(true);
        endpoints.add(detail);
      }
 else {
        detail.setConsumerOnly(false);
        detail.setProducerOnly(false);
      }
    }
  }
}
