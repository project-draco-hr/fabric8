{
  KubernetesProperties kubernetesProperties=new KubernetesProperties();
  KubernetesFactory kubernetesFactory=new KubernetesFactory(kubernetesProperties.getKubernetesMasterUrl());
  Kubernetes kubernetes=kubernetesFactory.createKubernetes();
  for (  final Service service : kubernetes.getServices("default").getItems()) {
    RootBeanDefinition beanDefinition=new RootBeanDefinition(Service.class);
    beanDefinition.addQualifier(new AutowireCandidateQualifier(io.fabric8.annotations.Service.class,service.getId()));
    beanDefinition.getPropertyValues().addPropertyValue("id",service.getId());
    beanDefinition.getPropertyValues().addPropertyValue("port",service.getPort());
    beanDefinition.getPropertyValues().addPropertyValue("portalIP",service.getPortalIP());
    beanDefinition.getPropertyValues().addPropertyValue("protocol",service.getProtocol());
    beanDefinition.getPropertyValues().addPropertyValue("proxyPort",service.getProxyPort());
    beanDefinition.getPropertyValues().addPropertyValue("containerPort",service.getContainerPort());
    beanDefinition.getPropertyValues().addPropertyValue("kind",service.getKind());
    registry.registerBeanDefinition(service.getId() + "-service-bean",beanDefinition);
  }
}
