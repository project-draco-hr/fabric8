{
  add("{");
  BeanInfo info;
  boolean addedSomething=false;
  try {
    info=Introspector.getBeanInfo(object.getClass());
    PropertyDescriptor[] props=info.getPropertyDescriptors();
    for (int i=0; i < props.length; ++i) {
      PropertyDescriptor prop=props[i];
      String name=prop.getName();
      Method accessor=prop.getReadMethod();
      if ((emitClassName == true || !"class".equals(name)) && accessor != null) {
        if (!accessor.isAccessible())         accessor.setAccessible(true);
        Object value=accessor.invoke(object,(Object[])null);
        if (addedSomething)         add(',');
        add(name,value);
        addedSomething=true;
      }
    }
    Field[] ff=object.getClass().getFields();
    for (int i=0; i < ff.length; ++i) {
      Field field=ff[i];
      if (addedSomething)       add(',');
      add(field.getName(),field.get(object));
      addedSomething=true;
    }
  }
 catch (  IllegalAccessException iae) {
    iae.printStackTrace();
  }
catch (  InvocationTargetException ite) {
    ite.getCause().printStackTrace();
    ite.printStackTrace();
  }
catch (  IntrospectionException ie) {
    ie.printStackTrace();
  }
  add("}");
}
