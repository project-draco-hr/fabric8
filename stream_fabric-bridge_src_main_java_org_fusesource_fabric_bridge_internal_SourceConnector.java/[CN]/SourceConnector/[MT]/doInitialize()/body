{
  localConnectionFactory=getConnectionFactory(localBrokerConfig);
  LOG.debug("Using local connection factory " + localConnectionFactory);
  if (remoteBrokerConfig != null && outboundDestinations.isDefaultStagingLocation()) {
    remoteConnectionFactory=getConnectionFactory(remoteBrokerConfig);
    LOG.debug("Using remote connection factory " + remoteConnectionFactory);
    reuseSession=false;
  }
 else {
    LOG.warn("Using local broker for staging queue");
    outboundDestinations.setDefaultStagingLocation(false);
    remoteConnectionFactory=localConnectionFactory;
    reuseSession=true;
  }
  reuseMessage=false;
  Connection localConnection=null;
  Connection remoteConnection=null;
  try {
    localConnection=localConnectionFactory.createConnection();
    Session localSession=localConnection.createSession(false,Session.AUTO_ACKNOWLEDGE);
    Message localMessage=localSession.createMessage();
    remoteConnection=remoteConnectionFactory.createConnection();
    Session remoteSession=remoteConnection.createSession(false,Session.AUTO_ACKNOWLEDGE);
    Message remoteMessage=remoteSession.createMessage();
    if (localMessage.getClass().isInstance(remoteMessage)) {
      reuseMessage=true;
    }
    stagingQueue=getStagingQueue(remoteSession);
  }
 catch (  JMSException e) {
    String msg="Error checking whether local and remote broker providers are the same: " + e.getMessage();
    LOG.error(msg,e);
    throw new IllegalStateException(msg,e);
  }
 finally {
    if (localConnection != null) {
      try {
        localConnection.close();
      }
 catch (      JMSException e) {
      }
    }
    if (remoteConnection != null) {
      try {
        remoteConnection.close();
      }
 catch (      JMSException e) {
      }
    }
  }
  for (  BridgedDestination destination : outboundDestinations.getDestinations()) {
    try {
      listenerMap.put(destination,createListenerContainer(destination));
    }
 catch (    Exception e) {
      final String msg="Error creating listener for destination: " + destination;
      LOG.error(msg,e);
      throw new IllegalStateException(msg,e);
    }
  }
  LOG.info("Initialized");
}
