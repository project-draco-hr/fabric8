{
  ProjectRequirements requirements=new ProjectRequirements();
  DependencyDTO rootDependency=null;
  if (isIncludeArtifact()) {
    rootDependency=loadRootDependency();
    requirements.setRootDependency(rootDependency);
  }
  configureRequirements(requirements);
  if (isIncludeArtifact()) {
    addProjectArtifactBundle(requirements);
  }
  File profileBuildDir=createProfileBuildDir(requirements.getProfileId());
  boolean hasConfigDir=profileConfigDir.isDirectory();
  if (hasConfigDir) {
    copyProfileConfigFiles(profileBuildDir,profileConfigDir);
  }
 else {
    getLog().info("The profile configuration files directory " + profileConfigDir + " doesn't exist, so not copying any additional project documentation or configuration files");
  }
  if (hasConfigDir || rootDependency != null || notEmpty(requirements.getBundles()) || notEmpty(requirements.getFeatures()) || notEmpty(requirements.getFeatureRepositories())) {
    if (includeReadMe) {
      copyReadMe(project.getFile().getParentFile(),profileBuildDir);
    }
    if (generateSummaryFile) {
      String description=project.getDescription();
      if (Strings.isNotBlank(description)) {
        File summaryMd=new File(profileBuildDir,"Summary.md");
        summaryMd.getParentFile().mkdirs();
        if (!summaryMd.exists()) {
          byte[] bytes=description.getBytes();
          Files.copy(new ByteArrayInputStream(bytes),new FileOutputStream(summaryMd));
        }
      }
    }
    if (isIncludeArtifact()) {
      writeProfileRequirements(requirements,profileBuildDir);
    }
    generateFabricAgentProperties(requirements,new File(profileBuildDir,"io.fabric8.agent.properties"));
    generateFabricContextPathProperties(requirements,new File(profileBuildDir,ChildConstants.WEB_CONTEXT_PATHS_PID + ".properties"));
    Zips.createZipFile(getLog(),buildDir,outputFile);
    projectHelper.attachArtifact(project,artifactType,artifactClassifier,outputFile);
    getLog().info("Created profile zip file: " + outputFile);
  }
}
