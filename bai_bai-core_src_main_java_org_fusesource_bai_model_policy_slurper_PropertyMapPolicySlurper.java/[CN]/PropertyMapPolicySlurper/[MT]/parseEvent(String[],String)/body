{
  Policy policy=new Policy();
  Scope scope=new Scope();
  if ("exclude".equals(splitKey[1].toLowerCase())) {
    policy.action.type=ActionType.EXCLUDE;
  }
 else {
    policy.action.type=ActionType.INCLUDE;
  }
  scope.filterElement=FilterElement.EVENT;
  scope.filterMethod=FilterMethod.ENUM_VALUE_ONE;
  scope.enumValues.add(toEventType(splitKey[2]).toString());
  policy.scope.add(scope);
  scope=new Scope();
  scope.filterElement=FilterElement.BUNDLE;
  scope.filterMethod=FilterMethod.EXPRESSION;
  scope.expressionLanguage="wildcardAwareString";
  scope.expression=splitKey[3];
  policy.scope.add(scope);
  scope=new Scope();
  scope.filterElement=FilterElement.CONTEXT;
  scope.filterMethod=FilterMethod.EXPRESSION;
  scope.expressionLanguage="wildcardAwareString";
  scope.expression=value;
  policy.scope.add(scope);
  return policy;
}
