{
  String outputPackage=getPackagePrefix() + ".types";
  File out=new File(outputDirectory,outputPackage.replace(".",SLASH) + SLASH + "TypeFactory.java");
  BufferedWriter writer=new BufferedWriter(new FileWriter(out));
  Utils.writeJavaCopyWrite(writer);
  writer.write("package " + outputPackage + ";");
  writer.newLine();
  writer.newLine();
  TreeSet<String> imports=new TreeSet<String>();
  writeTypeImports(writer,true,imports,getMarshallerPackage(),outputPackage);
  writer.newLine();
  writer.newLine();
  Utils.writeAutoGeneratedWarning(writer,0);
  writer.write("public class TypeFactory {");
  writer.newLine();
  for (  AmqpClass ac : TypeRegistry.getGeneratedTypes()) {
    if (ac.isAny() || ac.isEnumType()) {
      continue;
    }
    if (ac.isDescribed()) {
      writer.newLine();
      Utils.writeJavaComment(writer,1,"Creates a " + ac.getTypeMapping());
      writer.write(Utils.tab(1) + "public static " + ac.getTypeMapping()+ " create"+ ac.getTypeMapping()+ "() {");
      writer.newLine();
      writer.write(Utils.tab(2) + "return new " + ac.getBeanMapping()+ "();");
      writer.newLine();
      writer.write(Utils.tab(1) + "};");
      writer.newLine();
    }
 else {
      AmqpClass bt=ac.resolveBaseType();
      writer.newLine();
      Utils.writeJavaComment(writer,1,"Creates a " + ac.getTypeMapping());
      writer.write(Utils.tab(1) + "public static " + ac.getTypeMapping()+ " create"+ ac.getTypeMapping()+ "("+ bt.getValueMapping()+ " val) {");
      writer.newLine();
      writer.write(Utils.tab(2) + "return new " + ac.getBeanMapping()+ "(val);");
      writer.newLine();
      writer.write(Utils.tab(1) + "}");
      writer.newLine();
      if (bt.getValueMapping().hasPrimitiveType()) {
        Utils.writeJavaComment(writer,1,"Creates a " + ac.getTypeMapping());
        writer.write(Utils.tab(1) + "public static " + ac.getTypeMapping()+ " create"+ ac.getTypeMapping()+ "("+ bt.getValueMapping().getPrimitiveType()+ " val) {");
        writer.newLine();
        writer.write(Utils.tab(2) + "return new " + ac.getBeanMapping()+ "(val);");
        writer.newLine();
        writer.write(Utils.tab(1) + "}");
        writer.newLine();
      }
      if (bt.isMutable()) {
        Utils.writeJavaComment(writer,1,"Creates an empty " + ac.getTypeMapping());
        writer.write(Utils.tab(1) + "public static " + ac.getTypeMapping()+ " create"+ ac.getTypeMapping()+ "() {");
        writer.newLine();
        writer.write(Utils.tab(2) + "return new " + ac.getBeanMapping()+ "();");
        writer.newLine();
        writer.write(Utils.tab(1) + "}");
        writer.newLine();
      }
    }
  }
  writer.write("}");
  writer.newLine();
  writer.flush();
  writer.close();
}
