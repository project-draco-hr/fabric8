{
  JCoDestination jcoDestination=JCoDestinationManager.getDestination("TestDestination");
  Structure customerData=(Structure)RfcUtil.getInstance(jcoDestination.getRepository(),"BAPI_FLCUST_GETLIST","BAPISCUDAT");
  EList<EStructuralFeature> list=customerData.eClass().getEAllStructuralFeatures();
  for (  EStructuralFeature f : list) {
    System.out.println(f);
  }
  Structure request=RfcUtil.getRequest(jcoDestination.getRepository(),"BAPI_FLCUST_GETLIST");
  Table<?> table=(Table<?>)RfcUtil.getValue(request,"CUSTOMER_LIST");
  System.out.println("Table type name: " + table.eClass().getName());
  System.out.println("Table type Generic SuperTypes: " + table.eClass().getEGenericSuperTypes());
  EGenericType genericSuperType=table.eClass().getEGenericSuperTypes().get(0);
  System.out.println("Generic SuperType Type Arguments: " + genericSuperType.getETypeArguments());
  EGenericType typeArgument=genericSuperType.getETypeArguments().get(0);
  System.out.println("Type Argument Classifier: " + typeArgument.getEClassifier());
  EStructuralFeature feature=table.eClass().getEStructuralFeature("row");
  EClass rowType=((EReference)feature).getEReferenceType();
  System.out.println("Row Type: " + rowType);
  System.out.println("Row Generic Type" + ((EReference)feature).getEGenericType());
  list=rowType.getEAllStructuralFeatures();
  for (  EStructuralFeature f : list) {
    System.out.println(f);
  }
  Structure newRow=(Structure)rowType.getEPackage().getEFactoryInstance().create(rowType);
  EClass tableClass=RfcPackage.eINSTANCE.getTable();
  System.out.println("Table class: " + tableClass);
  EList<ETypeParameter> tableClassTypeParameters=tableClass.getETypeParameters();
  System.out.println("Table class type parameters " + tableClassTypeParameters);
  ETypeParameter typeParameter=tableClassTypeParameters.get(0);
}
