{
  EcoreFactory ecoreFactory=EcoreFactory.eINSTANCE;
  EPackage ePackage=ecoreFactory.createEPackage();
  ePackage.setName("fruit");
  ePackage.setNsPrefix("fruit");
  ePackage.setNsURI("http://fruit");
  EClass fruitClass=ecoreFactory.createEClass();
  ePackage.getEClassifiers().add(fruitClass);
  fruitClass.setName("Fruit");
  EClass appleClass=ecoreFactory.createEClass();
  ePackage.getEClassifiers().add(appleClass);
  appleClass.setName("Apple");
  appleClass.getESuperTypes().add(fruitClass);
  EClass orangeClass=ecoreFactory.createEClass();
  ePackage.getEClassifiers().add(orangeClass);
  orangeClass.setName("Orange");
  orangeClass.getESuperTypes().add(fruitClass);
  EClass basketClass=ecoreFactory.createEClass();
  ePackage.getEClassifiers().add(basketClass);
  basketClass.setName("Basket");
  EGenericType fTypeParamterBounds=ecoreFactory.createEGenericType();
  fTypeParamterBounds.setEClassifier(fruitClass);
  ETypeParameter fTypeParameter=ecoreFactory.createETypeParameter();
  fTypeParameter.setName("F");
  fTypeParameter.getEBounds().add(fTypeParamterBounds);
  basketClass.getETypeParameters().add(fTypeParameter);
  EReference contentsFeature=ecoreFactory.createEReference();
  contentsFeature.setName("contents");
  contentsFeature.setLowerBound(1);
  contentsFeature.setUpperBound(-1);
  EGenericType contentsGenericType=ecoreFactory.createEGenericType();
  contentsGenericType.setETypeParameter(fTypeParameter);
  contentsFeature.setEGenericType(contentsGenericType);
  basketClass.getEStructuralFeatures().add(contentsFeature);
  EClass appleBasketClass=ecoreFactory.createEClass();
  ePackage.getEClassifiers().add(appleBasketClass);
  appleBasketClass.setName("AppleBasket");
  EGenericType appleBasketGenericSuperType=ecoreFactory.createEGenericType();
  appleBasketGenericSuperType.setEClassifier(basketClass);
  EGenericType appleBasketTypeArgument=ecoreFactory.createEGenericType();
  appleBasketTypeArgument.setEClassifier(appleClass);
  appleBasketGenericSuperType.getETypeArguments().add(appleBasketTypeArgument);
  appleBasketClass.getEGenericSuperTypes().add(appleBasketGenericSuperType);
  EReference rowReference=ecoreFactory.createEReference();
  rowReference.setEType(appleClass);
  rowReference.setName("contents");
  rowReference.setContainment(true);
  rowReference.setLowerBound(0);
  rowReference.setUpperBound(-1);
  appleBasketClass.getEStructuralFeatures().add(rowReference);
  Resource res=new XMLResourceImpl();
  res.getContents().add(ePackage);
  res.save(System.out,null);
  EObject appleBasket=ePackage.getEFactoryInstance().create(appleBasketClass);
  EStructuralFeature feature=appleBasket.eClass().getEStructuralFeature("contents");
  System.out.println("Contents Feature: " + feature);
  System.out.println("Contents Feature Type: " + feature.getEType());
  EObject apple=ePackage.getEFactoryInstance().create(appleClass);
  System.out.println("Apple instance: " + apple);
  EObject orange=ePackage.getEFactoryInstance().create(orangeClass);
  System.out.println("Orange instance: " + orange);
  EList contents=(EList)appleBasket.eGet(feature);
  System.out.println("Apple basket contents: " + appleBasket.eGet(feature));
  ((EList)appleBasket.eGet(feature)).add(apple);
  System.out.println("Apple basket contents: " + appleBasket.eGet(feature));
  if (feature.getEType().isInstance(orange)) {
    System.out.println("Orange is instance of feature type");
  }
 else {
    System.out.println("Orange is NOT instance of feature type");
  }
  if (feature.getEType().isInstance(apple)) {
    System.out.println("Apple is instance of feature type");
  }
 else {
    System.out.println("Apple is NOT instance of feature type");
  }
  ((EList)appleBasket.eGet(feature)).add(orange);
  System.out.println("Apple basket contents: " + appleBasket.eGet(feature));
}
