{
  IllegalStateAssertion.assertNotNull(profile,"profile");
  LockHandle writeLock=aquireWriteLock();
  try {
    assertValid();
    final String versionId=profile.getVersion();
    final String profileId=profile.getId();
    GitOperation<Profile> getop=new GitOperation<Profile>(){
      public Profile call(      Git git,      GitContext context) throws Exception {
        return getProfileFromCache(versionId,profileId);
      }
    }
;
    GitContext context=new GitContext().requirePull();
    final Profile lastProfile=executeInternal(context,null,getop);
    IllegalStateAssertion.assertNotNull(lastProfile,"Profile does not exist: " + versionId + "/"+ profileId);
    if (!lastProfile.equals(profile)) {
      GitOperation<String> gitop=new GitOperation<String>(){
        public String call(        Git git,        GitContext context) throws Exception {
          return createOrUpdateProfile(context,lastProfile,profile,new HashSet<String>());
        }
      }
;
      return executeWrite(gitop);
    }
 else {
      LOGGER.info("Skip unchanged profile update for: {}",profile);
      return lastProfile.getId();
    }
  }
  finally {
    writeLock.unlock();
  }
}
