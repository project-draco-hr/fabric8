{
  gitService.get().removeGitListener(gitListener);
  threadPool.shutdown();
  try {
    if (!threadPool.awaitTermination(5,TimeUnit.SECONDS)) {
      threadPool.shutdownNow();
    }
  }
 catch (  InterruptedException ex) {
    threadPool.shutdownNow();
    Thread.currentThread().interrupt();
  }
catch (  Exception ex) {
    throw FabricException.launderThrowable(ex);
  }
  LOGGER.debug("Restoring ProxySelector to original: {}",defaultProxySelector);
  ProxySelector.setDefault(defaultProxySelector);
  try {
    counter.close();
  }
 catch (  IOException ex) {
    LOGGER.warn("Error closing SharedCount due " + ex.getMessage() + ". This exception is ignored.");
  }
}
