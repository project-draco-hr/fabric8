{
  Profile resolved=profiles.get(profileId);
  if (resolved == null) {
    String versionId=auxVersion.getId();
    Profile auxProfile=auxVersion.getProfile(profileId);
    IllegalStateAssertion.assertNotNull(auxProfile,"Cannot obtain profile '" + profileId + "' from version: "+ auxVersion.getId());
    String pspec=auxProfile.getAttributes().get(Profile.PARENTS);
    List<String> parents=pspec != null ? Arrays.asList(pspec.split(" ")) : Collections.<String>emptyList();
    for (    String parentId : parents) {
      resolveVersionProfiles(versionBuilder,auxVersion,parentId,profiles);
    }
    ProfileBuilder profileBuilder=ProfileBuilder.Factory.create(versionId,profileId);
    profileBuilder.setFileConfigurations(auxProfile.getFileConfigurations());
    profileBuilder.setConfigurations(auxProfile.getConfigurations());
    profileBuilder.setLastModified(auxProfile.getProfileHash());
    for (    String parentId : parents) {
      Profile parent=profiles.get(parentId);
      profileBuilder.addParent(parent);
    }
    Profile profile=profileBuilder.getProfile();
    versionBuilder.addProfile(profile);
    profiles.put(profileId,profile);
  }
}
