{
  final String groupName="default";
  System.out.println(executeCommand("fabric:create -n --clean root"));
  ServiceProxy<CuratorFramework> curatorProxy=ServiceProxy.createServiceProxy(bundleContext,CuratorFramework.class);
  try {
    CuratorFramework curator=curatorProxy.getService();
    final CountDownLatch serviceLatch=new CountDownLatch(1);
    final FabricDiscoveryAgent discoveryAgent=new FabricDiscoveryAgent();
    discoveryAgent.setCurator(curator);
    discoveryAgent.setGroupName(groupName);
    discoveryAgent.setDiscoveryListener(new DiscoveryListener(){
      @Override public void onServiceAdd(      DiscoveryEvent discoveryEvent){
        System.out.println("Service added:" + discoveryEvent.getServiceName());
        serviceLatch.countDown();
      }
      @Override public void onServiceRemove(      DiscoveryEvent discoveryEvent){
        System.out.println("Service removed:" + discoveryEvent.getServiceName());
      }
    }
);
    discoveryAgent.start();
    Assert.assertTrue(serviceLatch.await(15,TimeUnit.MINUTES));
    System.out.println(executeCommand("fabric:cluster-list"));
  }
  finally {
    curatorProxy.close();
  }
}
