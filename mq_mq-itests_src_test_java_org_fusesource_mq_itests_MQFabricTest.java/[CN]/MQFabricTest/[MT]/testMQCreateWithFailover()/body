{
  final String brokerName="testBroker";
  final String groupName="testGroup";
  final Semaphore semaphore=new Semaphore(0);
  System.out.println(executeCommand("fabric:create -n"));
  Thread.sleep(5000);
  CuratorFramework curatorFramework=getCurator();
  final FabricDiscoveryAgent discoveryAgent=new FabricDiscoveryAgent();
  discoveryAgent.setCurator(curatorFramework);
  discoveryAgent.setGroupName(groupName);
  discoveryAgent.setDiscoveryListener(new DiscoveryListener(){
    @Override public void onServiceAdd(    DiscoveryEvent discoveryEvent){
      System.out.println("Service added:" + discoveryEvent);
      semaphore.release(1);
    }
    @Override public void onServiceRemove(    DiscoveryEvent discoveryEvent){
    }
  }
);
  discoveryAgent.start();
  System.out.println(executeCommand("fabric:mq-create --group " + groupName + " "+ brokerName));
  Set<Container> containers=ContainerBuilder.child(2).withName("child").withProfiles("mq-broker-" + groupName + "."+ brokerName).assertProvisioningResult().build();
  System.out.println(executeCommand("fabric:container-list"));
  for (int i=0; i < 2; i++) {
    System.out.println("Waiting for master.");
    assertTrue(semaphore.tryAcquire(30,TimeUnit.SECONDS));
    semaphore.drainPermits();
    System.out.println(executeCommand("fabric:cluster-list | grep -A 1 " + groupName));
    FabricDiscoveryAgent.ActiveMQNode master=discoveryAgent.getGroup().master();
    assertNotNull(master);
    String masterName=master.getContainer();
    assertNotNull(master.getContainer());
    FabricService fabricService=getFabricService();
    System.out.println("Stopping the master: " + masterName + ".");
    Container masterContainer=fabricService.getContainer(masterName);
    masterContainer.stop();
    masterContainer.start();
    Provision.provisioningSuccess(Arrays.asList(masterContainer),PROVISION_TIMEOUT);
    System.out.println("Waiting for failover.");
    assertTrue(semaphore.tryAcquire(30,TimeUnit.SECONDS));
    semaphore.drainPermits();
    System.out.println(executeCommand("fabric:cluster-list | grep -A 1 " + groupName));
    master=discoveryAgent.getGroup().master();
    masterName=master.getContainer();
    assertNotNull(master.getContainer());
    System.out.println("Stopping the master: " + masterName + ".");
    masterContainer=fabricService.getContainer(masterName);
    masterContainer.stop();
    masterContainer.start();
    Provision.provisioningSuccess(Arrays.asList(masterContainer),PROVISION_TIMEOUT);
  }
}
