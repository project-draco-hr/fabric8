{
  webServer=new Server();
  this.findPort=findPort;
  this.conf=conf;
  this.adminsAcl=adminsAcl;
  if (connector == null) {
    listenerStartedExternally=false;
    listener=createBaseListener(conf);
    listener.setHost(bindAddress);
    listener.setPort(port);
  }
 else {
    listenerStartedExternally=true;
    listener=connector;
  }
  webServer.addConnector(listener);
  webServer.setThreadPool(new QueuedThreadPool());
  final String appDir=getWebAppsPath();
  ContextHandlerCollection contexts=new ContextHandlerCollection();
  webServer.setHandler(contexts);
  webAppContext=new WebAppContext();
  webAppContext.setDisplayName("WepAppsContext");
  webAppContext.setContextPath("/");
  webAppContext.setExtractWAR(false);
  webAppContext.setCopyWebDir(false);
  webAppContext.setWar(appDir + "/" + name+ "/");
  webAppContext.getInitParams().put("org.mortbay.jetty.servlet.Default.useFileMappedBuffer","false");
  webAppContext.getServletContext().setAttribute(CONF_CONTEXT_ATTRIBUTE,conf);
  webAppContext.getServletContext().setAttribute(ADMINS_ACL,adminsAcl);
  webServer.addHandler(webAppContext);
  addDefaultApps(contexts,appDir);
  defineFilter(webAppContext,KRB5_FILTER,Krb5AndCertsSslSocketConnector.Krb5SslFilter.class.getName(),null,null);
  addGlobalFilter("safety",QuotingInputFilter.class.getName(),null);
  final FilterInitializer[] initializers=getFilterInitializers(conf);
  if (initializers != null) {
    for (    FilterInitializer c : initializers) {
      c.initFilter(this,conf);
    }
  }
  addDefaultServlets();
}
