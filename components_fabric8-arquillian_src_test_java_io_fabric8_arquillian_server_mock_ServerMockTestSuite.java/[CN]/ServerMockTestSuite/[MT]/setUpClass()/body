{
  MOCK.expect().withPath("/api/v1/namespaces/arquillian").andReturn(200,new NamespaceBuilder().withNewMetadata().withName("arquillian").and().build()).always();
  MOCK.expect().withPath("/api/v1/namespaces/arquillian/replicationcontrollers").andReturn(200,new ReplicationControllerListBuilder().addNewItem().withNewMetadata().withName("repl1").endMetadata().endItem().build()).always();
  MOCK.expect().withPath("/api/v1/namespaces/arquillian/pods").andReturn(200,new PodListBuilder().addNewItem().withNewMetadata().withName("pod1").endMetadata().endItem().build()).always();
  MOCK.expect().withPath("/api/v1/namespaces/arquillian/services").andReturn(200,new ServiceListBuilder().addNewItem().withNewMetadata().withName("service1").endMetadata().endItem().build()).always();
  MOCK.init();
  String masterUrl="http://localhost:" + MOCK.getServer().getPort();
  System.setProperty(Config.KUBERNETES_MASTER_SYSTEM_PROPERTY,masterUrl);
  System.setProperty(Config.KUBERNETES_NAMESPACE_SYSTEM_PROPERTY,"arquillian");
  System.setProperty(Constants.NAMESPACE_TO_USE,"arquillian");
  System.setProperty(Constants.NAMESPACE_LAZY_CREATE_ENABLED,"arquillian");
}
