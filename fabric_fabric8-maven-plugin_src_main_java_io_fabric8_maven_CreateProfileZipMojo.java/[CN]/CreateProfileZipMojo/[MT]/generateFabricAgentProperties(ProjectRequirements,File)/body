{
  file.getParentFile().mkdirs();
  PrintWriter writer=new PrintWriter(new FileWriter(file));
  try {
    String profileId=requirements.getProfileId();
    writer.println("# Profile: " + profileId);
    writer.println("# generated by the fabric8 maven plugin at " + new Date());
    writer.println("# see: http://fabric8.io/gitbook/mavenPlugin.html");
    writer.println();
    List<String> parentProfiles=Zips.notNullList(requirements.getParentProfiles());
    if (!parentProfiles.isEmpty()) {
      writer.write("attribute.parents =");
      for (      String parentProfile : parentProfiles) {
        writer.write(" ");
        writer.write(parentProfile);
      }
      writer.println();
      writer.println();
    }
    List<String> bundles=Zips.notNullList(requirements.getBundles());
    List<String> features=Zips.notNullList(requirements.getFeatures());
    List<String> repos=Zips.notNullList(requirements.getFeatureRepositories());
    for (    String bundle : bundles) {
      if (Strings.isNotBlank(bundle)) {
        writer.println("bundle." + escapeAgentPropertiesKey(bundle) + " = "+ escapeAgentPropertiesValue(bundle));
      }
    }
    if (!bundles.isEmpty()) {
      writer.println();
    }
    for (    String feature : features) {
      if (Strings.isNotBlank(feature)) {
        writer.println("feature." + escapeAgentPropertiesKey(feature) + " = "+ escapeAgentPropertiesValue(feature));
      }
    }
    if (!features.isEmpty()) {
      writer.println();
    }
    for (    String repo : repos) {
      if (Strings.isNotBlank(repo)) {
        writer.println("repository." + escapeAgentPropertiesKey(repo) + " = "+ escapeAgentPropertiesValue(repo));
      }
    }
  }
  finally {
    try {
      writer.close();
    }
 catch (    Exception e) {
    }
  }
}
