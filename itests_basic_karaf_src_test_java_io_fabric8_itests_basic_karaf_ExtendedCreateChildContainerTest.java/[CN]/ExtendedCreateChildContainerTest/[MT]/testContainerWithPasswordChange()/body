{
  System.out.println(CommandSupport.executeCommand("fabric:create --force --clean -n"));
  ModuleContext moduleContext=RuntimeLocator.getRequiredRuntime().getModuleContext();
  ServiceProxy<FabricService> fabricProxy=ServiceProxy.createServiceProxy(moduleContext,FabricService.class);
  try {
    FabricService fabricService=fabricProxy.getService();
    Set<Container> containers=ContainerBuilder.child(1).withName("basic.cntC").assertProvisioningResult().build(fabricService);
    try {
      Container cntC=containers.iterator().next();
      System.out.println(CommandSupport.executeCommands("jaas:manage --realm karaf --module io.fabric8.jaas.ZookeeperLoginModule","jaas:userdel admin","jaas:useradd admin newpassword","jaas:roleadd admin admin","jaas:update"));
      System.out.println(CommandSupport.executeCommand("fabric:container-stop --user admin --password newpassword " + cntC.getId()));
      ProvisionSupport.containersAlive(containers,false,ProvisionSupport.PROVISION_TIMEOUT);
      containers.remove(cntC);
    }
  finally {
      ContainerBuilder.stop(fabricService,containers);
    }
  }
  finally {
    fabricProxy.close();
  }
}
