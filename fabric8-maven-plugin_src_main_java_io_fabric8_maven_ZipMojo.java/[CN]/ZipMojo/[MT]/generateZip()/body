{
  File appBuildDir=buildDir;
  if (Strings.isNotBlank(pathInZip)) {
    appBuildDir=new File(buildDir,pathInZip);
  }
  appBuildDir.mkdirs();
  if (hasConfigDir()) {
    copyAppConfigFiles(appBuildDir,appConfigDir);
  }
 else {
    getLog().info("The app configuration files directory " + appConfigDir + " doesn't exist, so not copying any additional project documentation or configuration files");
  }
  MavenProject project=getProject();
  if (!ignoreProject) {
    File kubernetesJson=getKubernetesJson();
    if (kubernetesJson != null && kubernetesJson.isFile() && kubernetesJson.exists()) {
      File jsonFile=new File(appBuildDir,"kubernetes.json");
      jsonFile.getParentFile().mkdirs();
      Files.copy(kubernetesJson,jsonFile);
    }
    copyIconToFolder(appBuildDir);
  }
  if (hasConfigDir() || !ignoreProject) {
    if (includeReadMe) {
      copyReadMe(appBuildDir);
    }
    if (generateSummaryFile) {
      copySummaryText(appBuildDir);
    }
    if (generateAppPropertiesFile) {
      String name=project.getName();
      if (Strings.isNullOrBlank(name)) {
        name=project.getArtifactId();
      }
      String description=project.getDescription();
      Properties appProperties=new Properties();
      appProperties.put("name",name);
      if (Strings.isNotBlank(description)) {
        appProperties.put("description",description);
      }
      appProperties.put("groupId",project.getGroupId());
      appProperties.put("artifactId",project.getArtifactId());
      appProperties.put("version",project.getVersion());
      File appPropertiesFile=new File(appBuildDir,"fabric8.properties");
      appPropertiesFile.getParentFile().mkdirs();
      if (!appPropertiesFile.exists()) {
        appProperties.store(new FileWriter(appPropertiesFile),"Fabric8 Properties");
      }
    }
    File outputZipFile=getZipFile();
    File legalDir=null;
    if (includeLegal) {
      legalDir=new File(project.getBuild().getOutputDirectory(),"META-INF");
    }
    Zips.createZipFile(getLog(),buildDir,outputZipFile,legalDir);
    projectHelper.attachArtifact(project,artifactType,artifactClassifier,outputZipFile);
    getLog().info("Created app zip file: " + outputZipFile);
  }
}
