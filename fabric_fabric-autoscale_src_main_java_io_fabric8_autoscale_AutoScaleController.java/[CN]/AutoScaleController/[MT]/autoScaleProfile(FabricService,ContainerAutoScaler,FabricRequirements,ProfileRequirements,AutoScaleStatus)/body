{
  final String profile=profileRequirement.getProfile();
  Integer minimumInstances=profileRequirement.getMinimumInstances();
  Integer maximumInstances=profileRequirement.getMaximumInstances();
  if (maximumInstances != null || minimumInstances != null) {
    if (maximumInstances != null) {
      List<Container> containers=Containers.aliveAndSuccessfulContainersForProfile(profile,service);
      int count=containers.size();
      int delta=count - maximumInstances;
      if (delta > 0) {
        stopContainers(containers,autoScaler,requirements,profileRequirement,status,delta);
      }
    }
    if (minimumInstances != null) {
      List<Container> containers=Containers.aliveOrPendingContainersForProfile(profile,service);
      int count=containers.size();
      int delta=minimumInstances - count;
      try {
        AutoScaleProfileStatus profileStatus=status.profileStatus(profile);
        if (delta < 0) {
          profileStatus.destroyingContainer();
          autoScaler.destroyContainers(profile,-delta,containers);
        }
 else         if (delta > 0) {
          if (AutoScalers.requirementsSatisfied(service,requirements,profileRequirement,status)) {
            profileStatus.creatingContainer();
            String requirementsVersion=requirements.getVersion();
            final String version=Strings.isNotBlank(requirementsVersion) ? requirementsVersion : service.getDefaultVersionId();
            final AutoScaleRequest command=new AutoScaleRequest(service,version,profile,delta,requirements,profileRequirement,status);
            new Thread("Creating container for " + command.getProfile()){
              @Override public void run(){
                try {
                  autoScaler.createContainers(command);
                }
 catch (                Exception e) {
                  LOGGER.error("Failed to create container of profile: " + profile + ". Caught: "+ e,e);
                }
              }
            }
.start();
          }
        }
 else {
          profileStatus.provisioned();
        }
      }
 catch (      Exception e) {
        LOGGER.error("Failed to auto-scale " + profile + ". Caught: "+ e,e);
      }
    }
  }
}
