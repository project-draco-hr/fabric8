{
  DataStore dataStore=fabricService.get().getDataStore();
switch (event) {
case CONNECTED:
case CHANGED:
    if (isValid()) {
      AutoScalerNode state=createState();
      try {
        if (group.isMaster()) {
          enableMasterZkCache(curator.get());
          LOGGER.info("AutoScaleController is the master");
          group.update(state);
          dataStore.trackConfiguration(runnable);
          enableTimer();
          onConfigurationChanged();
        }
 else {
          LOGGER.info("AutoScaleController is not the master");
          group.update(state);
          disableTimer();
          dataStore.untrackConfiguration(runnable);
          disableMasterZkCache();
        }
      }
 catch (      IllegalStateException e) {
      }
    }
 else {
      LOGGER.info("Not valid with master: " + group.isMaster() + " fabric: "+ fabricService.get()+ " curator: "+ curator.get());
    }
  break;
case DISCONNECTED:
dataStore.untrackConfiguration(runnable);
}
}
