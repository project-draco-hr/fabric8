{
  LOG.info("Importing from file system directory: {}",path);
  List<String> profiles=new ArrayList<String>();
  String[] zips=new File(path).list(new FilenameFilter(){
    @Override public boolean accept(    File dir,    String name){
      return name.endsWith(".zip");
    }
  }
);
  int count=zips != null ? zips.length : 0;
  LOG.info("Found {} .zip files to import",count);
  if (zips != null && zips.length > 0) {
    for (    String name : zips) {
      profiles.add("file:" + path + "/"+ name);
      LOG.debug("Adding {} .zip file to import",name);
    }
  }
  String[] props=new File(path).list(new FilenameFilter(){
    @Override public boolean accept(    File dir,    String name){
      return name.endsWith(".properties");
    }
  }
);
  count=props != null ? props.length : 0;
  LOG.info("Found {} .properties files to import",count);
  try {
    if (props != null && props.length > 0) {
      for (      String name : props) {
        Properties p=new Properties();
        p.load(new FileInputStream(new File(path,name)));
        Enumeration<String> e=(Enumeration<String>)p.propertyNames();
        while (e.hasMoreElements()) {
          String key=e.nextElement();
          String value=p.getProperty(key);
          if (value != null) {
            profiles.add(value);
            LOG.debug("Adding {} to import",value);
          }
        }
      }
    }
  }
 catch (  Exception e) {
    LOG.warn("Error importing quickstarts due " + e.getMessage());
  }
  if (!profiles.isEmpty()) {
    LOG.info("Importing quickstarts from {} url locations ...",profiles.size());
    dataStore.get().importProfiles(dataStore.get().getDefaultVersion(),profiles);
    LOG.info("Importing quickstarts done");
  }
}
