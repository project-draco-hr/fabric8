{
  FabricValidations.validateContainerNames(containers);
  if (EnsembleCommandSupport.checkIfShouldModify(session,force)) {
    if (containers != null && !containers.isEmpty()) {
      StringBuilder sb=new StringBuilder();
      sb.append("Removing containers:");
      for (      String container : containers) {
        sb.append(" ").append(container);
      }
      sb.append(" to the ensemble. This may take a while.");
      CreateEnsembleOptions.Builder builder=CreateEnsembleOptions.builder();
      applyEnsembleConfiguration();
      builder=builder.zooKeeperServerTickTime(zooKeeperTickTime).zooKeeperServerInitLimit(zooKeeperInitLimit).zooKeeperServerSyncLimit(zooKeeperSyncLimit).zooKeeperServerDataDir(zooKeeperDataDir).migrationTimeout(migrationTimeout);
      if (generateZookeeperPassword) {
      }
 else       if (zookeeperPassword == null || zookeeperPassword.isEmpty()) {
        builder=builder.zookeeperPassword(clusterService.getZookeeperPassword());
      }
 else {
        builder=builder.zookeeperPassword(zookeeperPassword);
      }
      clusterService.removeFromCluster(containers,builder.build());
      ServiceProxy<ZooKeeperClusterService> serviceProxy=ServiceProxy.createServiceProxy(bundleContext,ZooKeeperClusterService.class);
      try {
        System.out.println("Updated Zookeeper connection string: " + serviceProxy.getService().getZooKeeperUrl());
      }
  finally {
        serviceProxy.close();
      }
    }
  }
  return null;
}
