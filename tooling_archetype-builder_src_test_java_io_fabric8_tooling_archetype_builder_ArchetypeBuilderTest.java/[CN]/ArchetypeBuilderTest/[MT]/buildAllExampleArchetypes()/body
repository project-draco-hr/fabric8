{
  File srcDir=new File(basedir,"../examples").getCanonicalFile();
  builder.configure();
  try {
    List<String> dirs=new ArrayList<String>();
    builder.generateArchetypes("java",srcDir,new File(basedir,"target/test-archetypes"),true,dirs,null);
  }
  finally {
    LOG.info("Completed the generation. Closing!");
    builder.close();
  }
  Collection<File> files=FileUtils.listFilesAndDirs(new File("target/test-archetypes/hello-world-archetype"),TrueFileFilter.INSTANCE,TrueFileFilter.INSTANCE);
  String[] resources=new String[]{"target/test-archetypes/hello-world-archetype","target/test-archetypes/hello-world-archetype/pom.xml","target/test-archetypes/hello-world-archetype/src","target/test-archetypes/hello-world-archetype/src/main","target/test-archetypes/hello-world-archetype/src/main/resources","target/test-archetypes/hello-world-archetype/src/main/resources/archetype-resources","target/test-archetypes/hello-world-archetype/src/main/resources/archetype-resources/ReadMe.txt","target/test-archetypes/hello-world-archetype/src/main/resources/archetype-resources/pom.xml","target/test-archetypes/hello-world-archetype/src/main/resources/archetype-resources/src","target/test-archetypes/hello-world-archetype/src/main/resources/archetype-resources/src/test","target/test-archetypes/hello-world-archetype/src/main/resources/archetype-resources/src/test/resources","target/test-archetypes/hello-world-archetype/src/main/resources/archetype-resources/src/test/resources/logback-test.xml","target/test-archetypes/hello-world-archetype/src/main/resources/archetype-resources/src/test/java","target/test-archetypes/hello-world-archetype/src/main/resources/archetype-resources/src/test/java/HelloTest.java","target/test-archetypes/hello-world-archetype/src/main/resources/archetype-resources/src/main","target/test-archetypes/hello-world-archetype/src/main/resources/archetype-resources/src/main/resources","target/test-archetypes/hello-world-archetype/src/main/resources/archetype-resources/src/main/resources/application.properties","target/test-archetypes/hello-world-archetype/src/main/resources/archetype-resources/src/main/java","target/test-archetypes/hello-world-archetype/src/main/resources/archetype-resources/src/main/java/impl","target/test-archetypes/hello-world-archetype/src/main/resources/archetype-resources/src/main/java/impl/DefaultHello.java","target/test-archetypes/hello-world-archetype/src/main/resources/archetype-resources/src/main/java/HelloInterface.java","target/test-archetypes/hello-world-archetype/src/main/resources-filtered","target/test-archetypes/hello-world-archetype/src/main/resources-filtered/META-INF","target/test-archetypes/hello-world-archetype/src/main/resources-filtered/META-INF/maven","target/test-archetypes/hello-world-archetype/src/main/resources-filtered/META-INF/maven/archetype-metadata.xml"};
  for (  String r : resources) {
    assertTrue(files.remove(new File(r)));
  }
  assertTrue("Failed to create correct Archetype project",files.isEmpty());
}
