{
  String camelComponentName=mandatoryAttributeValue(attributeMap,"componentName");
  String endpointInstanceName=mandatoryAttributeValue(attributeMap,"instanceName");
  String routeBuilder=mandatoryAttributeValue(attributeMap,"routeBuilder");
  Project project=getSelectedProject(context);
  JavaSourceFacet facet=project.getFacet(JavaSourceFacet.class);
  Dependency core=CamelProjectHelper.findCamelCoreDependency(project);
  if (core == null) {
    return Results.fail("The project does not include camel-core");
  }
  CamelComponentDetails details=new CamelComponentDetails();
  Result result=loadCamelComponentDetails(camelComponentName,details);
  if (result != null) {
    return result;
  }
  result=ensureCamelArtifactIdAdded(project,details,dependencyInstaller);
  if (result != null) {
    return result;
  }
  Map<String,String> options=new HashMap<String,String>();
  for (  InputComponent input : inputs) {
    String key=input.getName();
    if (input.hasValue()) {
      String value=input.getValue().toString();
      if (value != null) {
        boolean matchDefault=isDefaultValue(camelComponentName,key,value);
        if (!matchDefault) {
          options.put(key,value);
        }
      }
    }
 else     if (input.isRequired() && input.hasDefaultValue()) {
      String value=input.getValue().toString();
      if (value != null) {
        options.put(key,value);
      }
    }
  }
  CamelCatalog catalog=new DefaultCamelCatalog();
  String uri=catalog.asEndpointUri(camelComponentName,options);
  if (uri == null) {
    return Results.fail("Cannot create endpoint uri");
  }
  uri=uri.replaceAll("\\=\\%23","=#");
  JavaResource existing=facet.getJavaResource(routeBuilder);
  if (existing == null || !existing.exists()) {
    return Results.fail("RouteBuilder " + routeBuilder + " does not exist");
  }
  JavaClassSource clazz=existing.getJavaType();
  boolean updated=true;
  boolean cdi=findCamelArtifactDependency(project,"camel-cdi") != null;
  FieldSource field=clazz.getField(endpointInstanceName);
  AnnotationSource annotation;
  if (field == null) {
    field=clazz.addField();
    field.setName(endpointInstanceName);
    field.setType("org.apache.camel.Endpoint");
    field.setPrivate();
    updated=false;
  }
  if (cdi) {
    annotation=field.getAnnotation("org.apache.camel.cdi.Uri");
    if (annotation == null) {
      if (!field.hasAnnotation("javax.inject.Inject")) {
        field.addAnnotation("javax.inject.Inject");
      }
      annotation=field.addAnnotation("org.apache.camel.cdi.Uri");
    }
  }
 else {
    annotation=field.getAnnotation("org.apache.camel.EndpointInject");
  }
  annotation.removeAllValues();
  annotation.setStringValue(uri);
  clazz.addImport("org.apache.camel.Endpoint");
  if (cdi) {
    clazz.addImport("javax.inject.Inject");
    clazz.addImport("org.apache.camel.cdi.Uri");
  }
 else {
    clazz.addImport("org.apache.camel.EndpointInject");
  }
  facet.saveJavaSource(clazz);
  if (updated) {
    return Results.success("Updated endpoint " + endpointInstanceName + " in "+ routeBuilder);
  }
 else {
    return Results.success("Added endpoint " + endpointInstanceName + " in "+ routeBuilder);
  }
}
