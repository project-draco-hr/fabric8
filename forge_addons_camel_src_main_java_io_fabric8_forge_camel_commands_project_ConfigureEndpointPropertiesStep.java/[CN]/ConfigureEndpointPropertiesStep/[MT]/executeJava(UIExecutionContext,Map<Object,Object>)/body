{
  String camelComponentName=mandatoryAttributeValue(attributeMap,"componentName");
  String endpointInstanceName=mandatoryAttributeValue(attributeMap,"instanceName");
  String routeBuilder=mandatoryAttributeValue(attributeMap,"routeBuilder");
  Project project=getSelectedProject(context);
  JavaSourceFacet facet=project.getFacet(JavaSourceFacet.class);
  Dependency core=CamelProjectHelper.findCamelCoreDependency(project);
  if (core == null) {
    return Results.fail("The project does not include camel-core");
  }
  CamelComponentDetails details=new CamelComponentDetails();
  Result result=loadCamelComponentDetails(camelComponentName,details);
  if (result != null) {
    return result;
  }
  result=ensureCamelArtifactIdAdded(project,details,dependencyInstaller);
  if (result != null) {
    return result;
  }
  Map<String,String> options=new HashMap<String,String>();
  for (  InputComponent input : inputs) {
    String key=input.getName();
    if (input.hasValue()) {
      String value=input.getValue().toString();
      if (value != null) {
        options.put(key,value);
      }
    }
  }
  String uri="Need Camel 2.15.1";
  JavaResource existing=facet.getJavaResource(routeBuilder);
  if (existing == null || !existing.exists()) {
    return Results.fail("RouteBuilder " + routeBuilder + " does not exist");
  }
  JavaClassSource clazz=existing.getJavaType();
  MethodSource configure=clazz.getMethod("configure");
  String body=configure.getBody();
  clazz.addImport("org.apache.camel.Endpoint");
  if (body == null) {
    body="";
  }
  String match=String.format("Endpoint %s=",endpointInstanceName);
  List<String> lines=LineNumberHelper.readLines(new StringReader(body));
  int index=-1;
  for (int i=0; i < lines.size(); i++) {
    String line=lines.get(i);
    if (line.trim().startsWith(match)) {
      index=i;
      break;
    }
  }
  String line=String.format("Endpoint %s = endpoint(\"%s\");\n\n",endpointInstanceName,uri);
  if (index == -1) {
    lines.add(0,line);
  }
 else {
    lines.set(index,line);
  }
  String content=LineNumberHelper.linesToString(lines);
  configure.setBody(content);
  facet.saveJavaSource(clazz);
  if (index == -1) {
    return Results.success("Updated endpoint " + endpointInstanceName + " in "+ routeBuilder);
  }
 else {
    return Results.success("Added endpoint " + endpointInstanceName + " in "+ routeBuilder);
  }
}
