{
  ProfileService profileService=fabricService.adapt(ProfileService.class);
  Profile sourceProfile=profileService.getRequiredProfile(versionId,sourceId);
  LOGGER.info("renameProfile: {} => {}",sourceProfile,targetId);
  maybeDeleteProfile(fabricService,versionId,targetId,force);
  ProfileBuilder builder=ProfileBuilder.Factory.createFrom(sourceProfile);
  Profile targetProfile=profileService.createProfile(builder.identity(targetId).getProfile());
  for (  Container container : fabricService.getAssociatedContainers(versionId,sourceId)) {
    Profile[] containerProfiles=container.getProfiles();
    Set<Profile> profileSet=new HashSet<Profile>(Arrays.asList(containerProfiles));
    profileSet.remove(sourceProfile);
    profileSet.add(targetProfile);
    container.setProfiles(profileSet.toArray(new Profile[profileSet.size()]));
  }
  maybeDeleteProfile(fabricService,versionId,sourceId,true);
}
