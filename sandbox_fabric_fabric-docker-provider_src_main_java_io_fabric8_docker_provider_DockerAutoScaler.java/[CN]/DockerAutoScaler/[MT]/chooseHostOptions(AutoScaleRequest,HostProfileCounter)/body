{
  CreateDockerContainerOptions.Builder builder=CreateDockerContainerOptions.builder();
  FabricRequirements requirements=request.getFabricRequirements();
  ProfileRequirements profileRequirements=request.getProfileRequirements();
  DockerScalingRequirements scalingRequirements=profileRequirements.getDockerScalingRequirements();
  List<DockerHostConfiguration> hosts=requirements.getDockerHosts();
  if (hosts.isEmpty()) {
    return builder;
  }
  SortedSet<LoadSortedHostConfiguration<DockerHostConfiguration>> sortedHostConfigurations=filterHosts(profileRequirements,scalingRequirements,hostProfileCounter,hosts);
  DockerHostConfiguration hostConfig=null;
  if (!sortedHostConfigurations.isEmpty()) {
    LoadSortedHostConfiguration<DockerHostConfiguration> first=sortedHostConfigurations.first();
    hostConfig=first.getConfiguration();
  }
  if (hostConfig == null) {
    LOG.warn("Could not create version " + request.getVersion() + " profile "+ request.getProfile()+ " as no matching hosts could be found for "+ scalingRequirements);
    request.getProfileAutoScaleStatus().noSuitableHost("" + scalingRequirements);
    return null;
  }
  return builder;
}
