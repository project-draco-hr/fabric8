{
  System.out.println(executeCommand("fabric:create -n --wait-for-provisioning"));
  ServiceProxy<FabricService> fabricProxy=ServiceProxy.createServiceProxy(bundleContext,FabricService.class);
  try {
    Set<ContainerProxy> containers=ContainerBuilder.child(fabricProxy,1).withName("child").assertProvisioningResult().build();
    try {
      Thread.sleep(5000);
      Container container=containers.iterator().next();
      System.out.println(executeCommands("jaas:manage --realm karaf --module io.fabric8.jaas.ZookeeperLoginModule","jaas:userdel admin","jaas:useradd admin newpassword","jaas:roleadd admin admin","jaas:update"));
      System.out.println(executeCommand("fabric:container-stop --user admin --password newpassword " + container.getId()));
      Provision.containersAlive(containers,false,6 * DEFAULT_TIMEOUT);
    }
  finally {
      ContainerBuilder.destroy(containers);
    }
  }
  finally {
    fabricProxy.close();
  }
}
