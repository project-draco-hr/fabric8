{
  if (exists(getCurator(),dir) == null) {
    return;
  }
  List<String> children=getAllChildren(getCurator(),dir);
  Map<String,Map<String,ClusterNode>> clusters=new TreeMap<String,Map<String,ClusterNode>>();
  for (  String child : children) {
    byte[] data=getCurator().getData().forPath(child);
    if (data != null && data.length > 0) {
      String text=new String(data).trim();
      if (!text.isEmpty()) {
        String clusterName=getClusterName(dir,child);
        Map<String,ClusterNode> cluster=clusters.get(clusterName);
        if (cluster == null) {
          cluster=new TreeMap<String,ClusterNode>();
          clusters.put(clusterName,cluster);
        }
        ObjectMapper mapper=new ObjectMapper();
        Map<String,Object> map=null;
        try {
          map=mapper.readValue(data,HashMap.class);
        }
 catch (        JsonParseException e) {
          log.error("Error parsing JSON string: {}",text);
          throw e;
        }
        ClusterNode node=null;
        Object id=value(map,"id","container");
        if (id != null) {
          Object agent=value(map,"container","agent");
          List services=(List)value(map,"services");
          node=cluster.get(id);
          if (node == null) {
            node=new ClusterNode();
            cluster.put(id.toString(),node);
          }
          if (services != null) {
            if (!services.isEmpty()) {
              for (              Object service : services) {
                node.services.add(getSubstitutedData(getCurator(),service.toString()));
              }
              node.masters.add(agent);
            }
 else {
              node.slaves.add(agent);
            }
          }
 else {
            node.slaves.add(agent);
          }
        }
      }
    }
  }
  out.println(String.format("%-30s %-30s %-30s %s","[cluster]","[masters]","[slaves]","[services]"));
  for (  String clusterName : clusters.keySet()) {
    Map<String,ClusterNode> nodes=clusters.get(clusterName);
    out.println(String.format("%-30s %-30s %-30s %s",clusterName,"","","",""));
    for (    String nodeName : nodes.keySet()) {
      ClusterNode node=nodes.get(nodeName);
      out.println(String.format("%-30s %-30s %-30s %s","   " + nodeName,printList(node.masters),printList(node.slaves),printList(node.services)));
    }
  }
}
