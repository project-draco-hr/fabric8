{
  CommitCommand commit=git.commit().setAll(true).setMessage(message);
  if (author != null) {
    commit=commit.setAuthor(author);
  }
  RevCommit answer=commit.call();
  if (LOG.isDebugEnabled()) {
    LOG.debug("Committed " + answer.getId() + " "+ answer.getFullMessage());
  }
  if (pushOnCommit) {
    PushCommand push=git.push();
    configureCommand(push,userDetails);
    Iterable<PushResult> results=push.setRemote(origin).call();
    for (    PushResult result : results) {
      if (LOG.isDebugEnabled()) {
        LOG.debug("Pushed " + result.getMessages() + " "+ result.getURI()+ " branch: "+ branch+ " updates: "+ toString(result.getRemoteUpdates()));
      }
    }
  }
  return answer;
}
