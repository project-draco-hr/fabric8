{
switch (attribute) {
case BlueprintStatus:
    return ZkPath.CONTAINER_EXTENDER_STATUS.getPath(containerId,"blueprint");
case SpringStatus:
  return ZkPath.CONTAINER_EXTENDER_STATUS.getPath(containerId,"spring");
case ProvisionStatus:
return ZkPath.CONTAINER_PROVISION_RESULT.getPath(containerId);
case ProvisionException:
return ZkPath.CONTAINER_PROVISION_EXCEPTION.getPath(containerId);
case ProvisionList:
return ZkPath.CONTAINER_PROVISION_LIST.getPath(containerId);
case ProvisionChecksums:
return ZkPath.CONTAINER_PROVISION_CHECKSUMS.getPath(containerId);
case Location:
return ZkPath.CONTAINER_LOCATION.getPath(containerId);
case GeoLocation:
return ZkPath.CONTAINER_GEOLOCATION.getPath(containerId);
case Resolver:
return ZkPath.CONTAINER_RESOLVER.getPath(containerId);
case Ip:
return ZkPath.CONTAINER_IP.getPath(containerId);
case LocalIp:
return ZkPath.CONTAINER_LOCAL_IP.getPath(containerId);
case LocalHostName:
return ZkPath.CONTAINER_LOCAL_HOSTNAME.getPath(containerId);
case PublicIp:
return ZkPath.CONTAINER_PUBLIC_IP.getPath(containerId);
case PublicHostName:
return ZkPath.CONTAINER_PUBLIC_HOSTNAME.getPath(containerId);
case ManualIp:
return ZkPath.CONTAINER_MANUAL_IP.getPath(containerId);
case BindAddress:
return ZkPath.CONTAINER_BINDADDRESS.getPath(containerId);
case JmxUrl:
return ZkPath.CONTAINER_JMX.getPath(containerId);
case JolokiaUrl:
return ZkPath.CONTAINER_JOLOKIA.getPath(containerId);
case HttpUrl:
return ZkPath.CONTAINER_HTTP.getPath(containerId);
case SshUrl:
return ZkPath.CONTAINER_SSH.getPath(containerId);
case PortMin:
return ZkPath.CONTAINER_PORT_MIN.getPath(containerId);
case PortMax:
return ZkPath.CONTAINER_PORT_MAX.getPath(containerId);
case ProcessId:
return ZkPath.CONTAINER_PROCESS_ID.getPath(containerId);
case OpenShift:
return ZkPath.CONTAINER_OPENSHIFT.getPath(containerId);
default :
throw new IllegalArgumentException("Unsupported container attribute " + attribute);
}
}
