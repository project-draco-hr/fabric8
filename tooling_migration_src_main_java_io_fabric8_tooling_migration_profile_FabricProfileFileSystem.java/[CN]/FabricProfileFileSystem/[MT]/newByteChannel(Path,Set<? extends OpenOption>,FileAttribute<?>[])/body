{
  final byte[] data=getFile(path);
  return new SeekableByteChannel(){
    long position;
    @Override public int read(    ByteBuffer dst) throws IOException {
      int l=(int)Math.min(dst.remaining(),size() - position);
      dst.put(data,(int)position,l);
      position+=l;
      return l;
    }
    @Override public int write(    ByteBuffer src) throws IOException {
      throw new UnsupportedOperationException();
    }
    @Override public long position() throws IOException {
      return position;
    }
    @Override public SeekableByteChannel position(    long newPosition) throws IOException {
      position=newPosition;
      return this;
    }
    @Override public long size() throws IOException {
      return data.length;
    }
    @Override public SeekableByteChannel truncate(    long size) throws IOException {
      throw new UnsupportedOperationException();
    }
    @Override public boolean isOpen(){
      return true;
    }
    @Override public void close() throws IOException {
    }
  }
;
}
