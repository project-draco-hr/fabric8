{
  String zkpassword=System.getProperty(CreateEnsembleOptions.ZOOKEEPER_PASSWORD);
  Assert.assertNotNull(CreateEnsembleOptions.ZOOKEEPER_PASSWORD + " not null",zkpassword);
  Builder<?> builder=CreateEnsembleOptions.builder().agentEnabled(false).clean(true).zookeeperPassword(zkpassword).waitForProvision(false);
  CreateEnsembleOptions options=builder.build();
  ZooKeeperClusterBootstrap bootstrap=FabricTestSupport.getRequiredService(ZooKeeperClusterBootstrap.class);
  bootstrap.create(options);
  FabricService fabricService=FabricTestSupport.getRequiredService(FabricService.class);
  Container[] containers=fabricService.getContainers();
  Assert.assertNotNull("Containers not null",containers);
  FabricTestSupport.getRequiredService(CuratorFramework.class);
  FabricTestSupport.getRequiredService(GitService.class);
  FabricTestSupport.getRequiredService(DataStore.class);
  FabricTestSupport.getRequiredService(PortService.class);
  FabricTestSupport.getRequiredService(ContainerProvider.class);
  ConfigurationAdmin configAdmin=FabricTestSupport.getRequiredService(ConfigurationAdmin.class);
  org.osgi.service.cm.Configuration configuration=configAdmin.getConfiguration(io.fabric8.api.Constants.ZOOKEEPER_CLIENT_PID);
  Dictionary<String,Object> dictionary=configuration.getProperties();
  Assert.assertEquals("Expected provided zookeeper password","systempassword",dictionary.get("zookeeper.password"));
  assertConfigurations(configAdmin);
}
