{
  String file=artifactId + "-" + version+ ".tar.gz";
  String directory=groupId.replaceAll("\\.","/") + "/" + artifactId+ "/"+ version+ "/";
  String artifactParentUri=proxy.resolve(directory).toString();
  String artifactUri=proxy.resolve(directory + file).toString();
  String installationFolder=artifactId + "-" + version;
  if (version.contains("SNAPSHOT")) {
    sb.append("run export DISTRO_URL=`curl --silent ").append(artifactParentUri).append("| grep href | grep \"tar.gz\\\"\" | sed 's/^.*<a href=\"//' | sed 's/\".*$//'  | tail -1`").append("\n");
  }
 else {
    sb.append("run export DISTRO_URL=`").append(artifactUri).append("`").append("\n");
  }
  sb.append("if [[  \"$DISTRO_URL\" == \"\" ]] ;  then export DISTRO_URL=").append(artifactUri).append("; fi\n");
  sb.append("try curl --show-error --silent --get --retry 20 --output ").append(file).append(" ").append("$DISTRO_URL").append("\n");
  for (  String fallbackRepo : FALLBACK_REPOS) {
    URI fallbackRepoURI=new URI(fallbackRepo);
    String fallbackDistro=fallbackRepoURI.resolve(directory + file).toString();
    sb.append("if [ ! -f " + file + " ] then ").append("try curl --show-error --silent --get --retry 20 --output ").append(file).append(" ").append(fallbackDistro).append(" fi \n");
  }
  sb.append("run tar -xpzf ").append(file).append("\n");
}
