{
  MockEndpoint mock=getMockEndpoint("mock:result");
  mock.expectedMinimumMessageCount(1);
  JCoDestination destination=JCoDestinationManager.getDestination("nplDest");
  Structure request=RfcUtil.getRequest(destination.getRepository(),"BAPI_FLCUST_CREATEFROMDATA");
  request.put("TEST_RUN","");
  Structure customerData=(Structure)request.get("CUSTOMER_DATA");
  customerData.put("CUSTNAME","Barney Rubble");
  customerData.put("FORM","Mr.");
  customerData.put("STREET","456 Cobblestone Ave");
  customerData.put("POBOX","987");
  customerData.put("POSTCODE","99999");
  customerData.put("CITY","Bedrock");
  customerData.put("CONTR","US");
  customerData.put("REGION","PA");
  customerData.put("PHONE","18005551212");
  customerData.put("CUSTTYPE","P");
  customerData.put("DISCOUNT","005");
  customerData.put("LANG_ISO","en");
  template.sendBody("direct:createFlcustList",request);
  assertMockEndpointsSatisfied();
  Structure response=mock.getExchanges().get(0).getIn().getBody(Structure.class);
  Resource res=new XMLResourceImpl();
  res.getContents().add(response);
  res.save(System.out,null);
}
