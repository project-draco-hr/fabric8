{
  List<Bundle> bundlesToDestroy=new ArrayList<Bundle>();
  for (  Bundle bundle : bundles) {
    ServiceReference[] references=bundle.getRegisteredServices();
    int usage=0;
    if (references != null) {
      for (      ServiceReference reference : references) {
        usage+=getServiceUsage(reference);
      }
    }
    LOGGER.debug("Usage for bundle {} is {}",bundle,usage);
    if (usage == 0) {
      bundlesToDestroy.add(bundle);
    }
  }
  if (!bundlesToDestroy.isEmpty()) {
    Collections.sort(bundlesToDestroy,new Comparator<Bundle>(){
      public int compare(      Bundle b1,      Bundle b2){
        return (int)(b2.getLastModified() - b1.getLastModified());
      }
    }
);
    LOGGER.debug("Selected bundles {} for destroy (no services in use)",bundlesToDestroy);
  }
 else {
    ServiceReference ref=null;
    for (    Bundle bundle : bundles) {
      ServiceReference[] references=bundle.getRegisteredServices();
      for (      ServiceReference reference : references) {
        if (getServiceUsage(reference) == 0) {
          continue;
        }
        if (ref == null || reference.compareTo(ref) < 0) {
          LOGGER.debug("Currently selecting bundle {} for destroy (with reference {})",bundle,reference);
          ref=reference;
        }
      }
    }
    if (ref != null) {
      bundlesToDestroy.add(ref.getBundle());
    }
    LOGGER.debug("Selected bundle {} for destroy (lowest ranking service)",bundlesToDestroy);
  }
  return bundlesToDestroy;
}
