{
  Agent[] agents=new Agent[number];
  try {
    URI uri=URI.create(url);
    AgentProvider provider=getProvider(uri.getScheme());
    if (provider == null) {
      throw new FabricException("Unable to find an agent provider supporting uri '" + url + "'");
    }
    if (!isClusterServer) {
      final String zooKeeperUrl=getZooKeeperUrl();
      for (int i=0; i < number; i++) {
        String agentName=name;
        if (number > 1) {
          agentName+=i + 1;
        }
        String parent="";
        if (provider instanceof ChildAgentProvider) {
          parent=uri.getHost();
        }
        createAgentConfig(parent,agentName);
        agents[i]=new AgentImpl(null,agentName,FabricServiceImpl.this);
      }
      provider.create(getMavenRepoURI(),uri,name,zooKeeperUrl,isClusterServer,debugAgent,number);
    }
 else {
      provider.create(getMavenRepoURI(),uri,name,null,isClusterServer,debugAgent,number);
    }
  }
 catch (  FabricException e) {
    throw e;
  }
catch (  Exception e) {
    throw new FabricException(e);
  }
  return agents;
}
