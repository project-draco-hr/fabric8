{
  super.looseUnmarshal(wireFormat,o,dataIn);
  Message info=(Message)o;
  info.beforeUnmarshall(wireFormat);
  info.setProducerId((org.fusesource.gateway.handlers.detecting.protocol.openwire.command.ProducerId)looseUnmarsalCachedObject(wireFormat,dataIn));
  info.setDestination((org.fusesource.gateway.handlers.detecting.protocol.openwire.command.ActiveMQDestination)looseUnmarsalCachedObject(wireFormat,dataIn));
  info.setTransactionId((org.fusesource.gateway.handlers.detecting.protocol.openwire.command.TransactionId)looseUnmarsalCachedObject(wireFormat,dataIn));
  info.setOriginalDestination((org.fusesource.gateway.handlers.detecting.protocol.openwire.command.ActiveMQDestination)looseUnmarsalCachedObject(wireFormat,dataIn));
  info.setMessageId((org.fusesource.gateway.handlers.detecting.protocol.openwire.command.MessageId)looseUnmarsalNestedObject(wireFormat,dataIn));
  info.setOriginalTransactionId((org.fusesource.gateway.handlers.detecting.protocol.openwire.command.TransactionId)looseUnmarsalCachedObject(wireFormat,dataIn));
  info.setGroupID(looseUnmarshalString(dataIn));
  info.setGroupSequence(dataIn.readInt());
  info.setCorrelationId(looseUnmarshalString(dataIn));
  info.setPersistent(dataIn.readBoolean());
  info.setExpiration(looseUnmarshalLong(wireFormat,dataIn));
  info.setPriority(dataIn.readByte());
  info.setReplyTo((org.fusesource.gateway.handlers.detecting.protocol.openwire.command.ActiveMQDestination)looseUnmarsalNestedObject(wireFormat,dataIn));
  info.setTimestamp(looseUnmarshalLong(wireFormat,dataIn));
  info.setType(looseUnmarshalString(dataIn));
  info.setContent(looseUnmarshalBuffer(dataIn));
  info.setMarshalledProperties(looseUnmarshalBuffer(dataIn));
  info.setDataStructure((org.fusesource.gateway.handlers.detecting.protocol.openwire.command.DataStructure)looseUnmarsalNestedObject(wireFormat,dataIn));
  info.setTargetConsumerId((org.fusesource.gateway.handlers.detecting.protocol.openwire.command.ConsumerId)looseUnmarsalCachedObject(wireFormat,dataIn));
  info.setCompressed(dataIn.readBoolean());
  info.setRedeliveryCounter(dataIn.readInt());
  if (dataIn.readBoolean()) {
    short size=dataIn.readShort();
    org.fusesource.gateway.handlers.detecting.protocol.openwire.command.BrokerId value[]=new org.fusesource.gateway.handlers.detecting.protocol.openwire.command.BrokerId[size];
    for (int i=0; i < size; i++) {
      value[i]=(org.fusesource.gateway.handlers.detecting.protocol.openwire.command.BrokerId)looseUnmarsalNestedObject(wireFormat,dataIn);
    }
    info.setBrokerPath(value);
  }
 else {
    info.setBrokerPath(null);
  }
  info.setArrival(looseUnmarshalLong(wireFormat,dataIn));
  info.setUserID(looseUnmarshalString(dataIn));
  info.setRecievedByDFBridge(dataIn.readBoolean());
  info.afterUnmarshall(wireFormat);
}
