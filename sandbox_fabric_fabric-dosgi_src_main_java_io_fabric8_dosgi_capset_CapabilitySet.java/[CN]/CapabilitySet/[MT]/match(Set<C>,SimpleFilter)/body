{
  Set<C> matches=new HashSet<C>();
  if (sf.getOperation() == SimpleFilter.MATCH_ALL) {
    matches.addAll(caps);
  }
 else   if (sf.getOperation() == SimpleFilter.AND) {
    List<SimpleFilter> sfs=(List<SimpleFilter>)sf.getValue();
    for (int i=0; (caps.size() > 0) && (i < sfs.size()); i++) {
      matches=match(caps,sfs.get(i));
      caps=matches;
    }
  }
 else   if (sf.getOperation() == SimpleFilter.OR) {
    List<SimpleFilter> sfs=(List<SimpleFilter>)sf.getValue();
    for (int i=0; i < sfs.size(); i++) {
      matches.addAll(match(caps,sfs.get(i)));
    }
  }
 else   if (sf.getOperation() == SimpleFilter.NOT) {
    matches.addAll(caps);
    List<SimpleFilter> sfs=(List<SimpleFilter>)sf.getValue();
    for (int i=0; i < sfs.size(); i++) {
      matches.removeAll(match(caps,sfs.get(i)));
    }
  }
 else {
    Map<Object,Set<C>> index=m_indices.get(sf.getName());
    if ((sf.getOperation() == SimpleFilter.EQ) && (index != null)) {
      Set<C> existingCaps=index.get(sf.getValue());
      if (existingCaps != null) {
        matches.addAll(existingCaps);
        matches.retainAll(caps);
      }
    }
 else {
      for (Iterator<C> it=caps.iterator(); it.hasNext(); ) {
        C cap=it.next();
        Attribute attr=cap.getAttribute(sf.getName());
        if (attr != null) {
          Object lhs=attr.getValue();
          if (compare(lhs,sf.getValue(),sf.getOperation())) {
            matches.add(cap);
          }
        }
      }
    }
  }
  return matches;
}
