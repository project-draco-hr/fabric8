{
  String name=input.getName();
  String description=input.getDescription();
  String label=input.getLabel();
  String requiredMessage=input.getRequiredMessage();
  char shortNameChar=input.getShortName();
  String shortName=Character.toString(shortNameChar);
  Object value=convertValueToSafeJson(input.getValueConverter(),InputComponents.getValueFor(input));
  Class<?> valueType=input.getValueType();
  String javaType=null;
  if (valueType != null) {
    javaType=valueType.getCanonicalName();
  }
  String type=JsonSchemaTypes.getJsonSchemaTypeName(valueType);
  boolean enabled=input.isEnabled();
  boolean required=input.isRequired();
  List<Object> enumValues=new ArrayList<>();
  List<Object> typeaheadData=new ArrayList<>();
  boolean isSelect=false;
  if (input instanceof SelectComponent) {
    SelectComponent selectComponent=(SelectComponent)input;
    Iterable valueChoices=selectComponent.getValueChoices();
    Converter converter=selectComponent.getItemLabelConverter();
    boolean isJson=isJsonDTO(javaType);
    for (    Object valueChoice : valueChoices) {
      Object jsonValue;
      if (isJson) {
        jsonValue=Proxies.unwrap(valueChoice);
      }
 else {
        jsonValue=convertValueToSafeJson(converter,valueChoice);
      }
      enumValues.add(jsonValue);
    }
  }
  if (input instanceof HasCompleter) {
    HasCompleter hasCompleter=(HasCompleter)input;
    UICompleter completer=hasCompleter.getCompleter();
    if (completer != null) {
      Object currentValue=InputComponents.getValueFor(input);
      String textValue=currentValue != null ? currentValue.toString() : "";
      Iterable valueChoices=completer.getCompletionProposals(context,input,textValue);
      Converter converter=null;
      for (      Object valueChoice : valueChoices) {
        Object jsonValue=convertValueToSafeJson(converter,valueChoice);
        typeaheadData.add(jsonValue);
      }
    }
  }
  if (enumValues.isEmpty()) {
    enumValues=null;
  }
  if (typeaheadData.isEmpty()) {
    typeaheadData=null;
  }
  return new PropertyDTO(name,description,label,requiredMessage,value,javaType,type,enabled,required,enumValues,typeaheadData);
}
