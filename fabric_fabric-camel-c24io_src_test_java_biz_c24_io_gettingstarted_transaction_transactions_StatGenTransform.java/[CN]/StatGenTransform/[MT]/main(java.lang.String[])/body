{
  if (args.length == 2) {
    org.apache.log4j.Appender appender=new org.apache.log4j.ConsoleAppender(new org.apache.log4j.SimpleLayout());
    java.util.Set loggers=new java.util.HashSet();
    try {
      biz.c24.io.api.transform.Transform transform=new StatGenTransform();
      loggers.add(transform.getLog());
      biz.c24.io.api.data.Element inputElement0=null;
      transform.setInput(0,inputElement0=transform.getPossibleInputElementDecls(0).length > 0 ? (biz.c24.io.api.data.Element)java.lang.Class.forName(transform.getPossibleInputElementDecls(0)[0]).getMethod("getInstance",null).invoke(null,null) : transform.getInput(0));
      loggers.add(inputElement0.getLog());
      biz.c24.io.api.data.Element outputElement0=null;
      transform.setOutput(0,outputElement0=transform.getPossibleOutputElementDecls(0).length > 0 ? (biz.c24.io.api.data.Element)java.lang.Class.forName(transform.getPossibleOutputElementDecls(0)[0]).getMethod("getInstance",null).invoke(null,null) : transform.getOutput(0));
      loggers.add(outputElement0.getLog());
      for (java.util.Iterator it=loggers.iterator(); it.hasNext(); ) {
        org.apache.log4j.Logger logger=(org.apache.log4j.Logger)it.next();
        logger.addAppender(appender);
        logger.setLevel(org.apache.log4j.Level.OFF);
      }
      java.lang.System.out.println("Running...");
      java.util.List inputBeanList=new java.util.LinkedList();
      java.lang.Object[][] inputBeanArray=new java.lang.Object[1][];
      biz.c24.io.api.presentation.Source source0=transform.getInput(0).getModel().source();
      for (int i=0; ; i++) {
        java.lang.String inputFileName=args[0];
        java.io.File inputFile=new java.io.File(i == 0 ? inputFileName : (inputFileName.indexOf('.') == -1 ? inputFileName + i : inputFileName.substring(0,inputFileName.lastIndexOf(".")) + i + inputFileName.substring(inputFileName.lastIndexOf("."))));
        if (!inputFile.canRead())         break;
        java.lang.System.out.println("Reading '" + inputFile.getAbsolutePath() + "' ...");
        source0.setInputStream(new java.io.FileInputStream(inputFile));
        inputBeanList.add(source0.readObject(inputElement0));
        source0.getInputStream().close();
      }
      inputBeanArray[0]=inputBeanList.toArray(new java.lang.Object[inputBeanList.size()]);
      inputBeanList.clear();
      java.lang.Object[][] outputBeanArray=transform.transform(inputBeanArray);
      biz.c24.io.api.presentation.Sink sink0=transform.getOutput(0).getModel().sink();
      for (int i=0; i < outputBeanArray[0].length; i++) {
        java.lang.String outputFileName=args[1];
        java.io.File outputFile=new java.io.File(i == 0 ? outputFileName : (outputFileName.indexOf('.') == -1 ? outputFileName + i : outputFileName.substring(0,outputFileName.lastIndexOf(".")) + i + outputFileName.substring(outputFileName.lastIndexOf("."))));
        java.lang.System.out.println("Writing '" + outputFile.getAbsolutePath() + "' ...");
        sink0.setOutputStream(new java.io.FileOutputStream(outputFile));
        sink0.writeObject((biz.c24.io.api.data.ComplexDataObject)outputBeanArray[0][i]);
        sink0.getOutputStream().close();
      }
      java.lang.System.out.println("Finished");
    }
 catch (    java.lang.Exception e) {
      e.printStackTrace();
    }
 finally {
      for (java.util.Iterator it=loggers.iterator(); it.hasNext(); )       ((org.apache.log4j.Logger)it.next()).removeAppender(appender);
    }
  }
 else   java.lang.System.out.println("Usage: java StatGenTransform <input 'Transactions' filename> <output 'StatementFile' filename>");
}
