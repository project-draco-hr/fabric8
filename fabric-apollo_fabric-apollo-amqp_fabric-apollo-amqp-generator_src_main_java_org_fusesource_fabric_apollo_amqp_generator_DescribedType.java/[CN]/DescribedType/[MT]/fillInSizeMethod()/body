{
  size().body()._return(invoke("sizeOfConstructor").plus(invoke("sizeOfBody")));
  sizeOfConstructor().body()._return(ref("CONSTRUCTOR").invoke("size"));
  JMethod sizeOfFields=cls().method(JMod.PRIVATE,cm.LONG,"sizeOfFields");
  sizeOfFields.body().decl(cm.LONG,"fieldSize",lit(0L));
  if (isComposite()) {
    sizeOfFields.body().decl(cm.INT,"count",_this().invoke(count));
  }
  for (  Attribute attribute : amqpFields) {
    if (isComposite()) {
      sizeOfFields.body().assign(ref("count"),ref("count").minus(lit(1)));
      JBlock ifBody=sizeOfFields.body()._if(ref("count").gte(lit(0)))._then();
      addFieldSize(attribute,ifBody);
    }
 else {
      addFieldSize(attribute,sizeOfFields.body());
    }
  }
  sizeOfFields.body()._return(ref("fieldSize"));
  if (isComposite()) {
    sizeOfBody().body()._return(cm.ref(generator.getMarshaller() + ".DescribedTypeSupport").staticInvoke("fullSizeOfList").arg(_this().invoke("sizeOfFields")).arg(_this().invoke("count")));
  }
 else {
    sizeOfBody().body()._return(_this().invoke("sizeOfFields"));
  }
}
