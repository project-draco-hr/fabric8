{
  writeConstructor().body().block().invoke(ref("out"),"writeByte").arg(generator.registry().cls().staticRef("DESCRIBED_FORMAT_CODE"));
  writeConstructor().body().block().staticInvoke(cm.ref(generator.getPrimitiveJavaClass().get("ulong")),"write").arg(ref("NUMERIC_ID")).arg(ref("out"));
  writeConstructor().body()._return(cast(cm.BYTE,lit(0)));
  write().body().invoke("writeConstructor").arg(ref("out"));
  write().body().invoke("writeBody").arg(cast(cm.BYTE,lit((byte)0))).arg(ref("out"));
  writeBody().body().decl(cm.LONG,"fieldSize",_this().invoke("sizeOfFields"));
  writeBody().body().decl(cm.INT,"count",_this().invoke("count"));
  writeBody().body().staticInvoke(cm.ref(generator.getMarshaller() + ".DescribedTypeSupport"),"writeListHeader").arg(ref("fieldSize")).arg(ref("count")).arg(ref("out"));
  for (  Attribute attribute : amqpFields) {
    writeBody().body().assign(ref("count"),ref("count").minus(lit(1)));
    JBlock ifBody=writeBody().body()._if(ref("count").gte(lit(0)))._then();
    if (attribute.attribute.type().isArray()) {
      ifBody.staticInvoke(cm.ref("AMQPArray"),"write").arg(_this().ref(attribute.attribute.name())).arg(ref("out"));
    }
 else     if (generator.getMapping().get(attribute.type) != null) {
      ifBody.staticInvoke(cm.ref(generator.getPrimitiveJavaClass().get(attribute.type)),"write").arg(_this().ref(attribute.attribute.name())).arg(ref("out"));
    }
 else {
      JConditional conditional=ifBody._if(ref(attribute.attribute.name()).ne(_null()));
      conditional._then().invoke(ref(attribute.attribute.name()),"write").arg(ref("out"));
      conditional._else().invoke(ref("out"),"writeByte").arg(generator.registry().cls().staticRef("NULL_FORMAT_CODE"));
    }
  }
}
