{
  CuratorFramework curatorFramework=curator.get();
  if (curatorFramework != null) {
    byte[] data=curatorFramework.getData().forPath(containerPath);
    if (data != null && data.length > 0) {
      String text=new String(data).trim();
      if (!text.isEmpty()) {
        ObjectMapper mapper=new ObjectMapper();
        Map<String,Object> map=mapper.readValue(data,HashMap.class);
        Object serviceValue=map.get("services");
        if (serviceValue instanceof List) {
          List services=(List)serviceValue;
          if (services != null) {
            if (!services.isEmpty()) {
              List<String> serviceTexts=new ArrayList<String>();
              for (              Object service : services) {
                String serviceText=getSubstitutedData(curatorFramework,service.toString());
                if (io.fabric8.utils.Strings.isNotBlank(serviceText)) {
                  return serviceText;
                }
              }
            }
          }
        }
      }
    }
  }
  return null;
}
