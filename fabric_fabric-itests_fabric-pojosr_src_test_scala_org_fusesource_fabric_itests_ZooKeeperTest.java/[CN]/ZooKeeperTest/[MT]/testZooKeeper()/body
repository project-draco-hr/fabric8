{
  Bundle zooKeeperBundle=null;
  for (  Bundle bundle : bundleContext.getBundles()) {
    System.err.println(bundle.getBundleId() + ": " + bundle.getSymbolicName()+ " / "+ bundle.getVersion());
    if (bundle.getSymbolicName() != null && bundle.getSymbolicName().contains("fabric-zookeeper")) {
      zooKeeperBundle=bundle;
    }
  }
  assertNotNull(zooKeeperBundle);
  ManagedServiceFactory msf=getOsgiService(ManagedServiceFactory.class,"(service.pid=org.fusesource.fabric.zookeeper.server)",DEFAULT_TIMEOUT);
  assertNotNull(msf);
  ConfigurationAdmin ca=getOsgiService(ConfigurationAdmin.class);
  Configuration cfgServer=ca.createFactoryConfiguration("org.fusesource.fabric.zookeeper.server");
  Hashtable<String,Object> props=new Hashtable<String,Object>();
  props.put("tickTime","2000");
  props.put("initLimit","10");
  props.put("syncLimit","5");
  props.put("dataDir","target/zookeeper");
  props.put("clientPort","2181");
  cfgServer.setBundleLocation(null);
  cfgServer.update(props);
  Configuration cfgClient=ca.getConfiguration("org.fusesource.fabric.zookeeper");
  props=new Hashtable<String,Object>();
  props.put("zookeeper.url","localhost:2181");
  props.put("zookeeper.password","mypass");
  cfgClient.setBundleLocation(null);
  cfgClient.update(props);
  ServerStats.Provider server=getOsgiService(ServerStats.Provider.class);
  assertNotNull(server);
  IZKClient client=getOsgiService(IZKClient.class);
  assertNotNull(client);
  client.waitForConnected();
  Thread.sleep(500);
  assertNotNull(client.exists(ZkPath.CONTAINER_ALIVE.getPath(System.getProperty("karaf.name"))));
}
