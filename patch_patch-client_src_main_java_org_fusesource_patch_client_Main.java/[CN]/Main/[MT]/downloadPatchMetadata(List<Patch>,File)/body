{
  final Properties ids=new Properties();
  File idsFile=new File(directory,"ids.txt");
  if (idsFile.isFile()) {
    try {
      FileInputStream fis=new FileInputStream(idsFile);
      try {
        ids.load(fis);
      }
  finally {
        fis.close();
      }
    }
 catch (    IOException e) {
    }
  }
  final CountDownLatch latch=new CountDownLatch(locations.size());
  for (  final Patch patch : locations) {
    final String id;
synchronized (ids) {
      id=ids.getProperty(patch.artifact + ":" + patch.version,patch.location.getPath());
    }
    final URL location=patch.location;
    final File file=new File(directory,new File(id + ".patch").getName());
    executor.submit(new Runnable(){
      @Override public void run(){
        try {
          download(file,location);
          patch.metadataFile=file;
          Properties props=new Properties();
          FileInputStream fis=new FileInputStream(file);
          try {
            props.load(fis);
          }
  finally {
            fis.close();
          }
          patch.metadata=props;
          String patchId=patch.metadata.getProperty("id");
          if (patchId != null && !file.getName().equals(patchId + ".patch")) {
            file.renameTo(new File(directory,patchId + ".patch"));
synchronized (ids) {
              ids.setProperty(patch.artifact + ":" + patch.version,patchId);
            }
          }
        }
 catch (        FileNotFoundException e) {
        }
catch (        Exception e) {
          System.err.println("Error downloading " + location + ": "+ e.getMessage());
        }
 finally {
          latch.countDown();
        }
      }
    }
);
  }
  latch.await();
  try {
    FileOutputStream fos=new FileOutputStream(idsFile);
    try {
      ids.store(fos,"");
    }
  finally {
      fos.close();
    }
  }
 catch (  IOException e) {
  }
}
