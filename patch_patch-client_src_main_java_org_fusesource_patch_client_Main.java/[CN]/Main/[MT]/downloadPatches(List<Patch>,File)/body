{
  for (  final Patch patch : locations) {
    final URL location=patch.location;
    final URL patchurl=new URL(location.toExternalForm().replaceAll("-patch.patch","-patch.zip"));
    final File file=new File(directory,new File(patchurl.getPath()).getName());
    if (!file.isFile()) {
      patch.patchFile=executor.submit(new Callable<File>(){
        @Override public File call() throws Exception {
          download(file,patchurl);
          return file;
        }
      }
);
    }
 else {
      patch.patchFile=new Future<File>(){
        @Override public boolean cancel(        boolean mayInterruptIfRunning){
          return false;
        }
        @Override public boolean isCancelled(){
          return false;
        }
        @Override public boolean isDone(){
          return true;
        }
        @Override public File get() throws InterruptedException, ExecutionException {
          return file;
        }
        @Override public File get(        long timeout,        TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException {
          return file;
        }
      }
;
    }
  }
}
