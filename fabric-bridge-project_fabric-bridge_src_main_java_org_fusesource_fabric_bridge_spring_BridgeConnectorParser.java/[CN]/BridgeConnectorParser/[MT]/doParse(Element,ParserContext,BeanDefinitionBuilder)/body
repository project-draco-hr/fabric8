{
  super.doParse(element,parserContext,builder);
  String inboundDestinationsRef=element.getAttribute(INBOUND_DESTINATIONS_ATTRIBUTE);
  if (StringUtils.hasText(inboundDestinationsRef)) {
    if (element.getElementsByTagNameNS(BridgeNamespaceHandler.BRIDGE_NS,INBOUND_DESTINATIONS_ELEMENT).getLength() > 0) {
      throw new BeanCreationException("Only one of " + INBOUND_DESTINATIONS_ATTRIBUTE + " or "+ INBOUND_DESTINATIONS_ELEMENT+ " is allowed");
    }
    builder.addPropertyReference(INBOUND_DESTINATIONS_PROPERTY,inboundDestinationsRef);
  }
  String outboundDestinationsRef=element.getAttribute(OUTBOUND_DESTINATIONS_ATTRIBUTE);
  if (StringUtils.hasText(outboundDestinationsRef)) {
    if (element.getElementsByTagNameNS(BridgeNamespaceHandler.BRIDGE_NS,OUTBOUND_DESTINATIONS_ELEMENT).getLength() > 0) {
      throw new BeanCreationException("Only one of " + OUTBOUND_DESTINATIONS_ATTRIBUTE + " or "+ OUTBOUND_DESTINATIONS_ELEMENT+ " is allowed");
    }
    builder.addPropertyReference(OUTBOUND_DESTINATIONS_PROPERTY,outboundDestinationsRef);
  }
  NodeList childNodes=element.getChildNodes();
  for (int i=0; i < childNodes.getLength(); i++) {
    Node node=childNodes.item(i);
    if (node instanceof Element) {
      Element childElement=(Element)node;
      String localName=childElement.getLocalName();
      if (localName.equals(LOCAL_BROKER_ELEMENT)) {
        builder.addPropertyValue(LOCAL_BROKER_CONFIG_PROPERTY,brokerConfigParser.parse(childElement,parserContext));
      }
 else       if (localName.equals(OUTBOUND_DESTINATIONS_ELEMENT)) {
        builder.addPropertyValue(OUTBOUND_DESTINATIONS_PROPERTY,bridgeDestinationsConfigParser.parse(childElement,parserContext));
      }
 else       if (localName.equals(REMOTE_BROKER_ELEMENT)) {
        builder.addPropertyValue(REMOTE_BROKER_CONFIG_PROPERTY,brokerConfigParser.parse(childElement,parserContext));
      }
 else       if (localName.equals(INBOUND_DESTINATIONS_ELEMENT)) {
        builder.addPropertyValue(INBOUND_DESTINATIONS_PROPERTY,bridgeDestinationsConfigParser.parse(childElement,parserContext));
      }
    }
  }
}
