{
  List<RemoteRepository> repositories=new LinkedList<RemoteRepository>();
  for (  Repository repository : getRepositories()) {
    RemoteRepository.Builder builder=new RemoteRepository.Builder(repository.getId(),"default",repository.getUrl());
    if (repository.getSnapshots().isEnabled()) {
      if (repository.getSnapshots() != null) {
        builder.setPolicy(convertMavenRepositoryPolicy(repository.getSnapshots()));
      }
    }
    if (repository.getReleases() != null) {
      builder.setReleasePolicy(convertMavenRepositoryPolicy(repository.getReleases()));
    }
    Server server=getSettings().getServer(repository.getId());
    if (server != null) {
      String decodedUsername=decode(server.getUsername());
      AuthenticationBuilder authBuilder=new AuthenticationBuilder();
      authBuilder.addUsername(decodedUsername);
      authBuilder.addPassword(server.getPassword());
      authBuilder.addPrivateKey(server.getPrivateKey(),server.getPassphrase());
      builder.setAuthentication(authBuilder.build());
    }
    repositories.add(builder.build());
  }
  return repositories;
}
