{
  System.err.println(executeCommand("fabric:create -n root"));
  Set<Container> containers=ContainerBuilder.create(3).withName("fabric-camel").withProfiles("fabric-camel").assertProvisioningResult().build();
  CuratorFramework curator=getCurator();
  Container client=containers.iterator().next();
  containers.remove(client);
  Set<Container> servers=new LinkedHashSet<Container>(containers);
  for (  Container c : servers) {
    Profile p=c.getVersion().getProfile("example-camel-cluster.server");
    c.setProfiles(new Profile[]{p});
  }
  Provision.provisioningSuccess(servers,PROVISION_TIMEOUT);
  Profile p=client.getVersion().getProfile("example-camel-cluster.client");
  client.setProfiles(new Profile[]{p});
  Provision.provisioningSuccess(Arrays.asList(new Container[]{client}),PROVISION_TIMEOUT);
  System.err.println(executeCommand("fabric:container-list"));
  System.err.println(executeCommand("fabric:profile-display --overlay fabric-camel-server"));
  Assert.assertNotNull(exists(curator,"/fabric/registry/camel/endpoints"));
  Assert.assertEquals(1,getChildren(curator,"/fabric/registry/camel/endpoints").size());
  System.err.println(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-list"));
  String response=new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client | grep Failed")).getPlain().toString();
  System.err.println(response);
  int failed=Integer.parseInt(response.replaceAll("[^0-9]",""));
  Assert.assertEquals("Failed exchanges found on client",0,failed);
  Container lastActiveServerContainer=servers.iterator().next();
  servers.remove(lastActiveServerContainer);
  for (  Container c : servers) {
    c.destroy();
    Thread.sleep(25000);
    response=new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client | grep Completed")).getPlain().toString();
    System.err.println(response);
    response=new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client | grep Failed")).getPlain().toString();
    System.err.println(response);
    failed=Integer.parseInt(response.replaceAll("[^0-9]",""));
    Assert.assertEquals("Failed exchanges found after container:" + c.getId() + " shut down",0,failed);
  }
  System.err.println(new AnsiString(executeCommand("fabric:container-connect -u admin -p admin " + client.getId() + " camel:route-info fabric-client")).getPlain().toString());
}
