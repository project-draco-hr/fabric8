{
  String serviceStatus=null;
  boolean result=false;
  String sid=getName(s);
  Endpoints endpoints=kubernetesClient.endpointsForService(sid,s.getMetadata().getNamespace());
  ServiceSpec spec=s.getSpec();
  if (endpoints != null && spec != null) {
    List<EndpointSubset> subsets=endpoints.getSubsets();
    if (subsets != null) {
      for (      EndpointSubset subset : subsets) {
        List<EndpointAddress> addresses=subset.getAddresses();
        if (addresses != null) {
          for (          EndpointAddress address : addresses) {
            String ip=address.getIP();
            String addr=ip;
            List<ServicePort> ports=spec.getPorts();
            for (            ServicePort port : ports) {
              Integer portNumber=port.getPort();
              if (portNumber != null && portNumber > 0) {
                try (Socket socket=new Socket()){
                  socket.connect(new InetSocketAddress(ip,portNumber),configuration.getServiceConnectionTimeout());
                  serviceStatus="Service: " + sid + " is ready. Provider:"+ addr+ ".";
                  return true;
                }
 catch (                Exception e) {
                  serviceStatus="Service: " + sid + " is not ready! Error: "+ e.getMessage();
                }
 finally {
                  session.getLogger().warn(serviceStatus);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}
