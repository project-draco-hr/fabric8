{
  System.out.println(CommandSupport.executeCommand("fabric:create --force --clean -n"));
  ModuleContext moduleContext=RuntimeLocator.getRequiredRuntime().getModuleContext();
  ServiceProxy<FabricService> fabricProxy=ServiceProxy.createServiceProxy(moduleContext,FabricService.class);
  try {
    FabricService fabricService=fabricProxy.getService();
    System.out.println(CommandSupport.executeCommand("fabric:profile-create --parents default child-profile"));
    Assert.assertTrue(ProvisionSupport.profileAvailable("child-profile","1.0",ProvisionSupport.PROVISION_TIMEOUT));
    Set<Container> containers=ContainerBuilder.create(1,1).withName("basic.cntA").withProfiles("child-profile").assertProvisioningResult().build(fabricService);
    try {
      Container cntA=containers.iterator().next();
      System.out.println(CommandSupport.executeCommand("fabric:profile-edit --import-pid --pid org.apache.karaf.shell child-profile"));
      System.out.println(CommandSupport.executeCommand("fabric:profile-edit --pid org.apache.karaf.shell/sshPort=8105 child-profile"));
      System.out.println(CommandSupport.executeCommand("fabric:profile-edit --import-pid --pid org.apache.karaf.management child-profile"));
      System.out.println(CommandSupport.executeCommand("fabric:profile-edit --pid org.apache.karaf.management/rmiServerPort=55555 child-profile"));
      System.out.println(CommandSupport.executeCommand("fabric:profile-edit --pid org.apache.karaf.management/rmiRegistryPort=1100 child-profile"));
      System.out.println(CommandSupport.executeCommand("fabric:profile-edit --pid org.apache.karaf.management/serviceUrl=service:jmx:rmi://localhost:55555/jndi/rmi://localhost:1099/karaf-" + cntA.getId() + " child-profile"));
      String sshUrl=cntA.getSshUrl();
      String jmxUrl=cntA.getJmxUrl();
      long end=System.currentTimeMillis() + ProvisionSupport.PROVISION_TIMEOUT;
      while (System.currentTimeMillis() < end && (!sshUrl.endsWith("8105") || !jmxUrl.contains("55555"))) {
        Thread.sleep(1000L);
        sshUrl=cntA.getSshUrl();
        jmxUrl=cntA.getJmxUrl();
      }
      Assert.assertTrue("sshUrl ends with 8105, but was: " + sshUrl,sshUrl.endsWith("8105"));
      Assert.assertTrue("jmxUrl contains 55555, but was: " + jmxUrl,jmxUrl.contains("55555"));
    }
  finally {
      ContainerBuilder.stop(fabricService,containers);
    }
  }
  finally {
    fabricProxy.close();
  }
}
