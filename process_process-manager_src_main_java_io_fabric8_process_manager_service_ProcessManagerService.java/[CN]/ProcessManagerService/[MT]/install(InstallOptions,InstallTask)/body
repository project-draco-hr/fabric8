{
  @SuppressWarnings("serial") InstallTask installTask=new InstallTask(){
    @Override public void install(    InstallContext installContext,    ProcessConfig config,    String id,    File installDir) throws Exception {
      config.setName(options.getName());
      downloadContent(options.getUrl(),installDir);
      if (options.getExtractCmd() != null) {
        File archive=new File(installDir,INSTALLED_BINARY);
        String extractCmd=options.getExtractCmd();
        FileUtils.extractArchive(archive,installDir,extractCmd,untarTimeout,executor);
        File nestedProcessDirectory=findInstallDir(installDir);
        exportInstallDirEnvVar(options,nestedProcessDirectory);
        String[] postInstallCmds=options.getPostInstallCmds();
        if (postInstallCmds != null) {
          for (          String postInstallCmd : postInstallCmds) {
            if (Strings.isNotBlank(postInstallCmd)) {
              String[] args=FileUtils.splitCommands(postInstallCmd);
              LOGGER.info("Running post install command " + Arrays.asList(args) + " in folder "+ nestedProcessDirectory);
              new Command(args).setDirectory(nestedProcessDirectory).setTimeLimit(postInstallTimeout).execute(executor);
            }
          }
        }
        writeJvmConfig(new File(nestedProcessDirectory,"etc"),options.getJvmOptions());
      }
      if (postInstall != null) {
        postInstall.install(installContext,config,id,installDir);
      }
    }
  }
;
  return installViaScript(options,installTask);
}
