{
  checkFabricAvailable();
  Version latestVersion=null;
  Version[] versions=fabricService.getVersions();
  int vlength=versions.length;
  if (vlength > 0) {
    latestVersion=versions[vlength - 1];
  }
  if (name == null) {
    if (latestVersion == null) {
      throw new IllegalArgumentException("Cannot default the new version name as there are no versions available");
    }
    name=latestVersion.getSequence().next().getName();
  }
  Version parent;
  if (parentVersion == null) {
    parent=latestVersion;
  }
 else {
    parent=fabricService.getVersion(parentVersion);
    if (parent == null) {
      throw new IllegalArgumentException("Cannot find parent version: " + parentVersion);
    }
  }
  Version created;
  if (parent != null) {
    created=fabricService.createVersion(parent,name);
    System.out.println("Created version: " + name + " as copy of: "+ parent.getId());
  }
 else {
    created=fabricService.createVersion(name);
    System.out.println("Created version: " + name);
  }
  if (defaultVersion != null && defaultVersion == true) {
    fabricService.setDefaultVersion(created);
  }
  return null;
}
