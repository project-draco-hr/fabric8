{
  ModuleRegistry.VersionedModule module=moduleRegistry.getVersionedModule(moduleId);
  if (module != null) {
    Map<String,ModuleRegistry.VersionedModule> availableExtensions=module.getAvailableExtensions();
    String extensionsString="";
    for (    String enabledExtension : module.getEnabledExtensions()) {
      ModuleRegistry.VersionedModule extensionModule=availableExtensions.get(enabledExtension);
      if (extensionModule != null) {
        VersionedDependencyId id=extensionModule.getId();
        DependencyTreeResult result=resolver.collectDependencies(id,offline,excludeDependencyFilter);
        if (result != null) {
          DependencyTree tree=result.getTree();
          sharedFilterPatterns.addAll(Strings.splitAndTrimAsList(emptyIfNull(tree.getContainerManifestEntry(ServiceConstants.INSTR_FAB_PROVIDED_DEPENDENCY)),"\\s+"));
          requireBundleFilterPatterns.addAll(Strings.splitAndTrimAsList(emptyIfNull(tree.getContainerManifestEntry(ServiceConstants.INSTR_FAB_DEPENDENCY_REQUIRE_BUNDLE)),"\\s+"));
          excludeDependencyFilterPatterns.addAll(Strings.splitAndTrimAsList(emptyIfNull(tree.getContainerManifestEntry(ServiceConstants.INSTR_FAB_EXCLUDE_DEPENDENCY)),"\\s+"));
          optionalDependencyPatterns.addAll(Strings.splitAndTrimAsList(emptyIfNull(tree.getContainerManifestEntry(ServiceConstants.INSTR_FAB_OPTIONAL_DEPENDENCY)),"\\s+"));
          sharedFilter=DependencyTreeFilters.parseShareFilter(join(sharedFilterPatterns," "));
          requireBundleFilter=DependencyTreeFilters.parseRequireBundleFilter(join(requireBundleFilterPatterns," "));
          optionalDependencyFilter=DependencyTreeFilters.parseExcludeOptionalFilter(join(optionalDependencyPatterns," "));
          this.excludeDependencyFilter=DependencyTreeFilters.parseExcludeFilter(join(excludeDependencyFilterPatterns," "),optionalDependencyFilter);
          LOG.debug("Adding extension: " + tree.getDependencyId());
          if (extensionsString.length() != 0) {
            extensionsString+=" ";
          }
          extensionsString+=id;
          addChildDependency(tree);
        }
 else {
          LOG.debug("Could not resolve extension: " + id);
        }
      }
    }
    if (extensionsString.length() != 0) {
      instructions.put(ServiceConstants.INSTR_FAB_MODULE_ENABLED_EXTENSIONS,extensionsString);
    }
  }
}
