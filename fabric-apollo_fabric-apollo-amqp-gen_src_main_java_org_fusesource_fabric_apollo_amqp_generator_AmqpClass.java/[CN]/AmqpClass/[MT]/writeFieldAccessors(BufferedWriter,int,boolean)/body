{
  boolean ret=false;
  for (  AmqpField field : fields.values()) {
    ret=true;
    AmqpClass fieldClass=field.resolveAmqpFieldType();
    AmqpClass baseType=fieldClass.resolveBaseType();
    writeFieldAccessor(writer,indent,buffer,field,fieldClass,baseType);
  }
  if (isMap()) {
    writeMapOverrides(writer,indent,buffer);
  }
  if (isList()) {
    writeListOverrides(writer,indent,buffer);
  }
  if (isDescribed()) {
    writeDescribedTypeAccessors(writer,indent,buffer);
  }
  if (isRestricted()) {
    resolveRestrictedType().writeFieldAccessors(writer,indent,buffer);
  }
  if (isPrimitive() && !isMutable()) {
    writer.newLine();
    writer.write(Utils.tab(indent) + "public " + valueMapping+ " getValue() {");
    writer.newLine();
    if (!buffer) {
      if (isList()) {
        writer.write(Utils.tab(++indent) + "return bean;");
      }
 else {
        writer.write(Utils.tab(++indent) + "return bean.value;");
      }
    }
 else {
      writer.write(Utils.tab(++indent) + "return bean().getValue();");
    }
    writer.newLine();
    writer.write(Utils.tab(--indent) + "}");
    writer.newLine();
  }
  return ret;
}
