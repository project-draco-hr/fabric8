{
  try {
    Set<Bundle> toDelete=new HashSet<Bundle>();
    Set<String> toInstall=new HashSet<String>();
    List<BundleUpdate> updates=new ArrayList<BundleUpdate>();
    Bundle[] allBundles=bundleContext.getBundles();
    for (    String url : patch.getBundles()) {
      JarInputStream jis=new JarInputStream(new URL(url).openStream());
      Attributes att=jis.getManifest().getMainAttributes();
      jis.close();
      String sn=att.getValue(Constants.BUNDLE_SYMBOLICNAME);
      String vr=att.getValue(Constants.BUNDLE_VERSION);
      Version v=VersionTable.getVersion(vr);
      Version lower=new Version(v.getMajor(),v.getMinor(),0);
      if (v.compareTo(lower) > 0) {
        VersionRange range=new VersionRange(false,lower,v,true);
        for (        Bundle bundle : allBundles) {
          Version oldV=bundle.getVersion();
          if (bundle.getBundleId() != 0 && sn.equals(bundle.getSymbolicName()) && range.contains(oldV)) {
            String location=bundle.getLocation();
            updates.add(new BundleUpdateImpl(sn,v.toString(),oldV.toString(),location));
            toInstall.add(url);
            toDelete.add(bundle);
          }
        }
      }
    }
    Result result=new ResultImpl(patch,simulate,System.currentTimeMillis(),updates);
    if (!simulate) {
      applyChanges(toDelete,toInstall);
      ((PatchImpl)patch).setResult(result);
      saveResult(result);
    }
    return result;
  }
 catch (  Exception e) {
    throw new PatchException(e);
  }
}
