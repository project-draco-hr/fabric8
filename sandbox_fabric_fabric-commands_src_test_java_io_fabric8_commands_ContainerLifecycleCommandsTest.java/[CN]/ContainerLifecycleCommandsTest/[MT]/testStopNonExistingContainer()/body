{
  containers("cNon1");
  expect(this.fabricService.adapt(CuratorFramework.class)).andReturn(this.curatorFramework).anyTimes();
  expect(this.fabricService.getContainers()).andReturn(new Container[0]);
  replay(this.fabricService,this.commandSession);
  try {
    this.stop.execute(this.commandSession);
    fail("Should throw FabricException");
  }
 catch (  IllegalArgumentException e) {
  }
  verify(this.fabricService);
}
