{
  flow.setCompleter(new UICompleter<String>(){
    @Override public Iterable<String> getCompletionProposals(    UIContext context,    InputComponent<?,String> input,    String value){
      return getFlowURIs();
    }
  }
);
  flow.addValueChangeListener(new ValueChangeListener(){
    @Override public void valueChanged(    ValueChangeEvent event){
      String value=event.getNewValue() != null ? event.getNewValue().toString() : null;
      if (value != null) {
        String description=getDescriptionForFlow(value);
        flow.setNote(description != null ? description : "");
      }
 else {
        flow.setNote("");
      }
    }
  }
);
  chatRoom.setCompleter(new UICompleter<String>(){
    @Override public Iterable<String> getCompletionProposals(    UIContext context,    InputComponent<?,String> input,    String value){
      return getChatRoomNames();
    }
  }
);
  chatRoom.addValueChangeListener(new ValueChangeListener(){
    @Override public void valueChanged(    ValueChangeEvent event){
      String value=event.getNewValue() != null ? event.getNewValue().toString() : null;
      if (value != null) {
        String description=getDescriptionForChatRoom(value);
        chatRoom.setNote(description != null ? description : "");
      }
 else {
        chatRoom.setNote("");
      }
    }
  }
);
  issueProjectName.setCompleter(new UICompleter<String>(){
    @Override public Iterable<String> getCompletionProposals(    UIContext context,    InputComponent<?,String> input,    String value){
      return getIssueProjectNames();
    }
  }
);
  issueProjectName.addValueChangeListener(new ValueChangeListener(){
    @Override public void valueChanged(    ValueChangeEvent event){
      String value=event.getNewValue() != null ? event.getNewValue().toString() : null;
      if (value != null) {
        String description=getDescriptionForIssueProject(value);
        issueProjectName.setNote(description != null ? description : "");
      }
 else {
        issueProjectName.setNote("");
      }
    }
  }
);
  builder.add(flow).add(chatRoom).add(issueProjectName).add(codeReview);
}
