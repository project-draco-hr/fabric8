{
  DispatchQueue queue=Dispatch.createQueue();
  HashMap<String,SerializationStrategy> map=new HashMap<String,SerializationStrategy>();
  map.put("protobuf",new ProtobufSerializationStrategy());
  ServerInvokerImpl server=new ServerInvokerImpl("tcp://localhost:0",queue,map);
  server.start();
  ClientInvokerImpl client=new ClientInvokerImpl(queue,map);
  client.start();
  try {
    server.registerService("service-id",new ServerInvoker.ServiceFactory(){
      public Object get(){
        return new HelloImpl();
      }
      public void unget(){
      }
    }
,HelloImpl.class.getClassLoader());
    InvocationHandler handler=client.getProxy(server.getConnectAddress(),"service-id",HelloImpl.class.getClassLoader());
    Hello hello=(Hello)Proxy.newProxyInstance(HelloImpl.class.getClassLoader(),new Class[]{Hello.class},handler);
    char[] chars=new char[65 * 1024];
    String payload=new String(chars);
    for (int i=0; i < 100; i++) {
      hello.hello(payload);
    }
  }
  finally {
    server.stop();
    client.stop();
  }
}
