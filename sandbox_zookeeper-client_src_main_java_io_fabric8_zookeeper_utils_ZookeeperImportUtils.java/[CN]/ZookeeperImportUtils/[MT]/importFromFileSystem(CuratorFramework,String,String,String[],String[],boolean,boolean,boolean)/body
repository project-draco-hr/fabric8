{
  Map<String,String> settings=new TreeMap<String,String>();
  File s=new File(source);
  getCandidates(s,s,settings,target);
  List<Pattern> include=getPatterns(includeRegex);
  List<Pattern> exclude=getPatterns(excludeRegex);
  if (!target.startsWith("/")) {
    target="/" + target;
  }
  List<String> paths=new ArrayList<String>();
  for (  Map.Entry<String,String> entry : settings.entrySet()) {
    String key=entry.getKey();
    String data=entry.getValue();
    key=target + key;
    if (key.contains("/__asterisk__")) {
      key=key.replaceAll(Pattern.quote("/__asterisk__"),"/*");
    }
    paths.add(key);
    if (!matches(include,key,true) || matches(exclude,key,false)) {
      continue;
    }
    if (!dryRun) {
      if (data != null) {
        if (verbose) {
          LOG.info("Importing: {}",key);
        }
        ZooKeeperUtils.setData(curator,key,data);
      }
    }
 else {
      LOG.debug("Creating path: {} with value: {}",key,data);
    }
  }
  if (delete) {
    deletePathsNotIn(curator,paths,target,dryRun);
  }
}
