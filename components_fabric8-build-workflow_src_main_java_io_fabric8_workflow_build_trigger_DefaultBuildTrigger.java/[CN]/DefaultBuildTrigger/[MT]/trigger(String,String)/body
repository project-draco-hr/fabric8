{
  final BlockingQueue<String> uuid=new ArrayBlockingQueue<>(1);
  try (Watch watch=kubernetes.adapt(OpenShiftClient.class).builds().inNamespace(namespace).watch(new Watcher<Build>(){
    @Override public void eventReceived(    Action action,    Build build){
      if (action == Action.ADDED && KubernetesHelper.getName(build).equals(buildName)) {
        uuid.add(Builds.getUid(build));
      }
    }
    @Override public void onClose(    KubernetesClientException e){
    }
  }
)){
    return uuid.poll(60,TimeUnit.SECONDS);
  }
 catch (  InterruptedException e) {
    throw KubernetesClientException.launderThrowable(e);
  }
}
