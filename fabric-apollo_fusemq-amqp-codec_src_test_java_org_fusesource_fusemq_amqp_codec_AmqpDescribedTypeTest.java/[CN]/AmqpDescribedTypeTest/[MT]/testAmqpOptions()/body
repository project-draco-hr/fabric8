{
  AmqpOptions in=createAmqpOptions();
  in.put(createAmqpString("StringValue"),createAmqpString("Hello World!"));
  in.put(createAmqpString("LongValue"),createAmqpLong(1));
  in.put(createAmqpString("BooleanValue"),createAmqpBoolean(true));
  in.put(createAmqpString("ByteValue"),createAmqpByte((byte)1));
  in.put(createAmqpString("CharValue"),createAmqpChar(45));
  in.put(createAmqpString("DoubleValue"),createAmqpDouble(45));
  in.put(createAmqpString("FloatValue"),createAmqpFloat((float)1.0));
  in.put(createAmqpString("IntValue"),createAmqpInt(1));
  in.put(createAmqpString("UByteValue"),createAmqpUbyte((short)1));
  in.put(createAmqpString("UIntValue"),createAmqpUint((long)1));
  in.put(createAmqpString("ULongValue"),createAmqpUlong(new BigInteger("10")));
  in.put(createAmqpString("UShortValue"),createAmqpUshort(1));
  AmqpOptions out=unmarshalAmqpOptions(CodecUtils.marshal(in));
  Assert.assertTrue(in.equals(out));
}
