{
  String response;
  final ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream();
  final PrintStream printStream=new PrintStream(byteArrayOutputStream);
  final CommandProcessor commandProcessor=getOsgiService(CommandProcessor.class);
  final CommandSession commandSession=commandProcessor.createSession(System.in,printStream,printStream);
  commandSession.put("APPLICATION",System.getProperty("karaf.name","root"));
  commandSession.put("USER","karaf");
  FutureTask<String> commandFuture=new FutureTask<String>(new Callable<String>(){
    public String call(){
      try {
        for (        String command : commands) {
          System.out.println(command);
          System.out.flush();
          commandSession.execute(command);
        }
      }
 catch (      Exception e) {
        e.printStackTrace(System.err);
      }
      return byteArrayOutputStream.toString();
    }
  }
);
  try {
    executor.submit(commandFuture);
    response=commandFuture.get(COMMAND_TIMEOUT,TimeUnit.MILLISECONDS);
  }
 catch (  Exception e) {
    e.printStackTrace(System.err);
    response="SHELL COMMAND TIMED OUT: ";
  }
  return response;
}
